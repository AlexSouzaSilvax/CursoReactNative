{"dependencies":[{"name":"react","data":{"isAsync":false}},{"name":"../../Text/Text","data":{"isAsync":false}},{"name":"../../UTFSequence","data":{"isAsync":false}},{"name":"../../Utilities/stringifySafe","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _jsxFileName = \"/home/alex/Documentos/CursoReactNative/node_modules/react-native/Libraries/YellowBox/Data/YellowBoxCategory.js\";\n\n  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\n  function _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\n  function _iterableToArray(iter) { if ((typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\") in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\n  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n  var React = _$$_REQUIRE(_dependencyMap[0], \"react\");\n\n  var Text = _$$_REQUIRE(_dependencyMap[1], \"../../Text/Text\");\n\n  var UTFSequence = _$$_REQUIRE(_dependencyMap[2], \"../../UTFSequence\");\n\n  var stringifySafe = _$$_REQUIRE(_dependencyMap[3], \"../../Utilities/stringifySafe\");\n\n  var SUBSTITUTION = UTFSequence.BOM + '%s';\n  var YellowBoxCategory = {\n    parse: function parse(args) {\n      var categoryParts = [];\n      var contentParts = [];\n      var substitutionOffsets = [];\n\n      var remaining = _toConsumableArray(args);\n\n      if (typeof remaining[0] === 'string') {\n        var formatString = String(remaining.shift());\n        var formatStringParts = formatString.split('%s');\n        var substitutionCount = formatStringParts.length - 1;\n        var substitutions = remaining.splice(0, substitutionCount);\n        var categoryString = '';\n        var contentString = '';\n        var substitutionIndex = 0;\n\n        for (var _iterator = formatStringParts, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n          var _ref;\n\n          if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref = _iterator[_i++];\n          } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref = _i.value;\n          }\n\n          var _formatStringPart = _ref;\n          categoryString += _formatStringPart;\n          contentString += _formatStringPart;\n\n          if (substitutionIndex < substitutionCount) {\n            if (substitutionIndex < substitutions.length) {\n              var substitution = stringifySafe(substitutions[substitutionIndex]);\n              substitutionOffsets.push({\n                length: substitution.length,\n                offset: contentString.length\n              });\n              categoryString += SUBSTITUTION;\n              contentString += substitution;\n            } else {\n              substitutionOffsets.push({\n                length: 2,\n                offset: contentString.length\n              });\n              categoryString += '%s';\n              contentString += '%s';\n            }\n\n            substitutionIndex++;\n          }\n        }\n\n        categoryParts.push(categoryString);\n        contentParts.push(contentString);\n      }\n\n      var remainingArgs = remaining.map(stringifySafe);\n      categoryParts.push.apply(categoryParts, _toConsumableArray(remainingArgs));\n      contentParts.push.apply(contentParts, _toConsumableArray(remainingArgs));\n      return {\n        category: categoryParts.join(' '),\n        message: {\n          content: contentParts.join(' '),\n          substitutions: substitutionOffsets\n        }\n      };\n    },\n    render: function render(_ref2, substitutionStyle) {\n      var content = _ref2.content,\n          substitutions = _ref2.substitutions;\n      var elements = [];\n      var lastOffset = substitutions.reduce(function (prevOffset, substitution, index) {\n        var key = String(index);\n\n        if (substitution.offset > prevOffset) {\n          var prevPart = content.substr(prevOffset, substitution.offset - prevOffset);\n          elements.push(React.createElement(Text, {\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            }\n          }, prevPart));\n        }\n\n        var substititionPart = content.substr(substitution.offset, substitution.length);\n        elements.push(React.createElement(Text, {\n          key: key + '.5',\n          style: substitutionStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          }\n        }, substititionPart));\n        return substitution.offset + substitution.length;\n      }, 0);\n\n      if (lastOffset < content.length) {\n        var lastPart = content.substr(lastOffset);\n        elements.push(React.createElement(Text, {\n          key: \"-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          }\n        }, lastPart));\n      }\n\n      return elements;\n    }\n  };\n  module.exports = YellowBoxCategory;\n});","map":[[2,0,11,0],[14,0,13,0],[14,6,13,6,"React"],[14,11,13,11],[14,14,13,14,"require"],[14,25,13,21],[14,53,13,0],[16,0,14,0],[16,6,14,6,"Text"],[16,10,14,10],[16,13,14,13,"require"],[16,24,14,20],[16,62,14,0],[18,0,15,0],[18,6,15,6,"UTFSequence"],[18,17,15,17],[18,20,15,20,"require"],[18,31,15,27],[18,71,15,0],[20,0,17,0],[20,6,17,6,"stringifySafe"],[20,19,17,19],[20,22,17,22,"require"],[20,33,17,29],[20,85,17,0],[22,0,32,0],[22,6,32,6,"SUBSTITUTION"],[22,18,32,18],[22,21,32,21,"UTFSequence"],[22,32,32,32],[22,33,32,33,"BOM"],[22,36,32,21],[22,39,32,39],[22,43,32,0],[23,0,34,0],[23,6,34,6,"YellowBoxCategory"],[23,23,34,23],[23,26,34,26],[24,0,35,2,"parse"],[24,4,35,2,"parse"],[24,9,34,26],[24,26,36,4,"args"],[24,30,34,26],[24,32,40,6],[25,0,41,4],[25,10,41,10,"categoryParts"],[25,23,41,23],[25,26,41,26],[25,28,41,4],[26,0,42,4],[26,10,42,10,"contentParts"],[26,22,42,22],[26,25,42,25],[26,27,42,4],[27,0,43,4],[27,10,43,10,"substitutionOffsets"],[27,29,43,29],[27,32,43,32],[27,34,43,4],[29,0,45,4],[29,10,45,10,"remaining"],[29,19,45,19],[29,41,45,26,"args"],[29,45,45,19],[29,46,45,4],[31,0,47,4],[31,10,47,8],[31,17,47,15,"remaining"],[31,26,47,24],[31,27,47,25],[31,28,47,24],[31,29,47,8],[31,34,47,32],[31,42,47,4],[31,44,47,42],[32,0,48,6],[32,12,48,12,"formatString"],[32,24,48,24],[32,27,48,27,"String"],[32,33,48,33],[32,34,48,34,"remaining"],[32,43,48,43],[32,44,48,44,"shift"],[32,49,48,34],[32,51,48,33],[32,52,48,6],[33,0,49,6],[33,12,49,12,"formatStringParts"],[33,29,49,29],[33,32,49,32,"formatString"],[33,44,49,44],[33,45,49,45,"split"],[33,50,49,32],[33,51,49,51],[33,55,49,32],[33,56,49,6],[34,0,50,6],[34,12,50,12,"substitutionCount"],[34,29,50,29],[34,32,50,32,"formatStringParts"],[34,49,50,49],[34,50,50,50,"length"],[34,56,50,32],[34,59,50,59],[34,60,50,6],[35,0,51,6],[35,12,51,12,"substitutions"],[35,25,51,25],[35,28,51,28,"remaining"],[35,37,51,37],[35,38,51,38,"splice"],[35,44,51,28],[35,45,51,45],[35,46,51,28],[35,48,51,48,"substitutionCount"],[35,65,51,28],[35,66,51,6],[36,0,53,6],[36,12,53,10,"categoryString"],[36,26,53,24],[36,29,53,27],[36,31,53,6],[37,0,54,6],[37,12,54,10,"contentString"],[37,25,54,23],[37,28,54,26],[37,30,54,6],[38,0,56,6],[38,12,56,10,"substitutionIndex"],[38,29,56,27],[38,32,56,30],[38,33,56,6],[40,0,57,6],[40,29,57,37,"formatStringParts"],[40,46,57,6],[40,206,57,56],[41,0,57,56],[43,0,57,56],[44,0,57,56],[45,0,57,56],[46,0,57,56],[47,0,57,56],[48,0,57,56],[49,0,57,56],[50,0,57,56],[52,0,57,56],[52,14,57,17,"formatStringPart"],[52,31,57,56],[53,0,58,8,"categoryString"],[53,10,58,8,"categoryString"],[53,24,58,22],[53,28,58,26,"formatStringPart"],[53,45,58,8],[54,0,59,8,"contentString"],[54,10,59,8,"contentString"],[54,23,59,21],[54,27,59,25,"formatStringPart"],[54,44,59,8],[56,0,61,8],[56,14,61,12,"substitutionIndex"],[56,31,61,29],[56,34,61,32,"substitutionCount"],[56,51,61,8],[56,53,61,51],[57,0,62,10],[57,16,62,14,"substitutionIndex"],[57,33,62,31],[57,36,62,34,"substitutions"],[57,49,62,47],[57,50,62,48,"length"],[57,56,62,10],[57,58,62,56],[58,0,63,12],[58,18,63,18,"substitution"],[58,30,63,30],[58,33,63,33,"stringifySafe"],[58,46,63,46],[58,47,64,14,"substitutions"],[58,60,64,27],[58,61,64,28,"substitutionIndex"],[58,78,64,27],[58,79,63,46],[58,80,63,12],[59,0,66,12,"substitutionOffsets"],[59,14,66,12,"substitutionOffsets"],[59,33,66,31],[59,34,66,32,"push"],[59,38,66,12],[59,39,66,37],[60,0,67,14,"length"],[60,16,67,14,"length"],[60,22,67,20],[60,24,67,22,"substitution"],[60,36,67,34],[60,37,67,35,"length"],[60,43,66,37],[61,0,68,14,"offset"],[61,16,68,14,"offset"],[61,22,68,20],[61,24,68,22,"contentString"],[61,37,68,35],[61,38,68,36,"length"],[62,0,66,37],[62,15,66,12],[63,0,71,12,"categoryString"],[63,14,71,12,"categoryString"],[63,28,71,26],[63,32,71,30,"SUBSTITUTION"],[63,44,71,12],[64,0,72,12,"contentString"],[64,14,72,12,"contentString"],[64,27,72,25],[64,31,72,29,"substitution"],[64,43,72,12],[65,0,73,11],[65,13,62,10],[65,19,73,17],[66,0,74,12,"substitutionOffsets"],[66,14,74,12,"substitutionOffsets"],[66,33,74,31],[66,34,74,32,"push"],[66,38,74,12],[66,39,74,37],[67,0,75,14,"length"],[67,16,75,14,"length"],[67,22,75,20],[67,24,75,22],[67,25,74,37],[68,0,76,14,"offset"],[68,16,76,14,"offset"],[68,22,76,20],[68,24,76,22,"contentString"],[68,37,76,35],[68,38,76,36,"length"],[69,0,74,37],[69,15,74,12],[70,0,79,12,"categoryString"],[70,14,79,12,"categoryString"],[70,28,79,26],[70,32,79,30],[70,36,79,12],[71,0,80,12,"contentString"],[71,14,80,12,"contentString"],[71,27,80,25],[71,31,80,29],[71,35,80,12],[72,0,81,11],[74,0,83,10,"substitutionIndex"],[74,12,83,10,"substitutionIndex"],[74,29,83,27],[75,0,84,9],[76,0,85,7],[78,0,87,6,"categoryParts"],[78,8,87,6,"categoryParts"],[78,21,87,19],[78,22,87,20,"push"],[78,26,87,6],[78,27,87,25,"categoryString"],[78,41,87,6],[79,0,88,6,"contentParts"],[79,8,88,6,"contentParts"],[79,20,88,18],[79,21,88,19,"push"],[79,25,88,6],[79,26,88,24,"contentString"],[79,39,88,6],[80,0,89,5],[82,0,91,4],[82,10,91,10,"remainingArgs"],[82,23,91,23],[82,26,91,26,"remaining"],[82,35,91,35],[82,36,91,36,"map"],[82,39,91,26],[82,40,91,40,"stringifySafe"],[82,53,91,26],[82,54,91,4],[83,0,92,4,"categoryParts"],[83,6,92,4,"categoryParts"],[83,19,92,17],[83,20,92,18,"push"],[83,24,92,4],[83,31,92,4,"categoryParts"],[83,44,92,17],[83,65,92,26,"remainingArgs"],[83,78,92,17],[83,80,92,4],[84,0,93,4,"contentParts"],[84,6,93,4,"contentParts"],[84,18,93,16],[84,19,93,17,"push"],[84,23,93,4],[84,30,93,4,"contentParts"],[84,42,93,16],[84,63,93,25,"remainingArgs"],[84,76,93,16],[84,78,93,4],[85,0,95,4],[85,13,95,11],[86,0,96,6,"category"],[86,8,96,6,"category"],[86,16,96,14],[86,18,96,16,"categoryParts"],[86,31,96,29],[86,32,96,30,"join"],[86,36,96,16],[86,37,96,35],[86,40,96,16],[86,41,95,11],[87,0,97,6,"message"],[87,8,97,6,"message"],[87,15,97,13],[87,17,97,15],[88,0,98,8,"content"],[88,10,98,8,"content"],[88,17,98,15],[88,19,98,17,"contentParts"],[88,31,98,29],[88,32,98,30,"join"],[88,36,98,17],[88,37,98,35],[88,40,98,17],[88,41,97,15],[89,0,99,8,"substitutions"],[89,10,99,8,"substitutions"],[89,23,99,21],[89,25,99,23,"substitutionOffsets"],[90,0,97,15],[91,0,95,11],[91,7,95,4],[92,0,102,3],[92,5,34,26],[93,0,104,2,"render"],[93,4,104,2,"render"],[93,10,34,26],[93,35,106,4,"substitutionStyle"],[93,52,34,26],[93,54,107,16],[94,0,107,16],[94,10,105,5,"content"],[94,17,107,16],[94,26,105,5,"content"],[94,33,107,16],[95,0,107,16],[95,10,105,14,"substitutions"],[95,23,107,16],[95,32,105,14,"substitutions"],[95,45,107,16],[96,0,108,4],[96,10,108,10,"elements"],[96,18,108,18],[96,21,108,21],[96,23,108,4],[97,0,110,4],[97,10,110,10,"lastOffset"],[97,20,110,20],[97,23,110,23,"substitutions"],[97,36,110,36],[97,37,110,37,"reduce"],[97,43,110,23],[97,44,111,6],[97,54,111,7,"prevOffset"],[97,64,111,6],[97,66,111,19,"substitution"],[97,78,111,6],[97,80,111,33,"index"],[97,85,111,6],[97,87,111,43],[98,0,112,8],[98,12,112,14,"key"],[98,15,112,17],[98,18,112,20,"String"],[98,24,112,26],[98,25,112,27,"index"],[98,30,112,26],[98,31,112,8],[100,0,114,8],[100,12,114,12,"substitution"],[100,24,114,24],[100,25,114,25,"offset"],[100,31,114,12],[100,34,114,34,"prevOffset"],[100,44,114,8],[100,46,114,46],[101,0,115,10],[101,14,115,16,"prevPart"],[101,22,115,24],[101,25,115,27,"content"],[101,32,115,34],[101,33,115,35,"substr"],[101,39,115,27],[101,40,116,12,"prevOffset"],[101,50,115,27],[101,52,117,12,"substitution"],[101,64,117,24],[101,65,117,25,"offset"],[101,71,117,12],[101,74,117,34,"prevOffset"],[101,84,115,27],[101,85,115,10],[102,0,119,10,"elements"],[102,10,119,10,"elements"],[102,18,119,18],[102,19,119,19,"push"],[102,23,119,10],[102,24,119,24],[102,44,119,25],[102,48,119,24],[103,0,119,30],[103,12,119,30],[103,15,119,33],[103,17,119,35,"key"],[103,20,119,24],[104,0,119,24],[105,0,119,24],[106,0,119,24],[107,0,119,24],[108,0,119,24],[108,13,119,41,"prevPart"],[108,21,119,24],[108,22,119,10],[109,0,120,9],[111,0,122,8],[111,12,122,14,"substititionPart"],[111,28,122,30],[111,31,122,33,"content"],[111,38,122,40],[111,39,122,41,"substr"],[111,45,122,33],[111,46,123,10,"substitution"],[111,58,123,22],[111,59,123,23,"offset"],[111,65,122,33],[111,67,124,10,"substitution"],[111,79,124,22],[111,80,124,23,"length"],[111,86,122,33],[111,87,122,8],[112,0,126,8,"elements"],[112,8,126,8,"elements"],[112,16,126,16],[112,17,126,17,"push"],[112,21,126,8],[112,22,127,10],[112,42,127,11],[112,46,127,10],[113,0,127,16],[113,10,127,16],[113,13,127,19],[113,15,127,21,"key"],[113,18,127,24],[113,21,127,27],[113,25,127,10],[114,0,127,33],[114,10,127,33],[114,15,127,38],[114,17,127,40,"substitutionStyle"],[114,34,127,10],[115,0,127,10],[116,0,127,10],[117,0,127,10],[118,0,127,10],[119,0,127,10],[119,11,128,13,"substititionPart"],[119,27,127,10],[119,28,126,8],[120,0,132,8],[120,15,132,15,"substitution"],[120,27,132,27],[120,28,132,28,"offset"],[120,34,132,15],[120,37,132,37,"substitution"],[120,49,132,49],[120,50,132,50,"length"],[120,56,132,8],[121,0,133,7],[121,7,110,23],[121,9,134,6],[121,10,110,23],[121,11,110,4],[123,0,137,4],[123,10,137,8,"lastOffset"],[123,20,137,18],[123,23,137,21,"content"],[123,30,137,28],[123,31,137,29,"length"],[123,37,137,4],[123,39,137,37],[124,0,138,6],[124,12,138,12,"lastPart"],[124,20,138,20],[124,23,138,23,"content"],[124,30,138,30],[124,31,138,31,"substr"],[124,37,138,23],[124,38,138,38,"lastOffset"],[124,48,138,23],[124,49,138,6],[125,0,139,6,"elements"],[125,8,139,6,"elements"],[125,16,139,14],[125,17,139,15,"push"],[125,21,139,6],[125,22,139,20],[125,42,139,21],[125,46,139,20],[126,0,139,26],[126,10,139,26],[126,13,139,29],[126,15,139,30],[126,19,139,20],[127,0,139,20],[128,0,139,20],[129,0,139,20],[130,0,139,20],[131,0,139,20],[131,11,139,36,"lastPart"],[131,19,139,20],[131,20,139,6],[132,0,140,5],[134,0,142,4],[134,13,142,11,"elements"],[134,21,142,4],[135,0,143,3],[136,0,34,26],[136,3,34,0],[137,0,146,0,"module"],[137,2,146,0,"module"],[137,8,146,6],[137,9,146,7,"exports"],[137,16,146,0],[137,19,146,17,"YellowBoxCategory"],[137,36,146,0]]},"type":"js/module"}]}