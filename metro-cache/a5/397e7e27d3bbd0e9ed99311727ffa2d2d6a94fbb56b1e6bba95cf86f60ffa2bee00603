{"dependencies":[{"name":"invariant","data":{"isAsync":false}},{"name":"expo-core","data":{"isAsync":false}},{"name":"expo-asset","data":{"isAsync":false}},{"name":"expo-constants","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.processFontFamily = processFontFamily;\n  exports.isLoaded = isLoaded;\n  exports.isLoading = isLoading;\n  exports.loadAsync = loadAsync;\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"invariant\"));\n\n  var _expoCore = _$$_REQUIRE(_dependencyMap[1], \"expo-core\");\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  var ExpoFontLoader = _expoCore.NativeModulesProxy.ExpoFontLoader;\n\n  var _requireAsset = requireAsset(),\n      Asset = _requireAsset.Asset;\n\n  var _requireConstants = requireConstants(),\n      Constants = _requireConstants.Constants;\n\n  function requireAsset() {\n    try {\n      return _$$_REQUIRE(_dependencyMap[2], \"expo-asset\");\n    } catch (error) {\n      throw new Error('expo-font needs expo-asset to be installed');\n    }\n  }\n\n  function requireConstants() {\n    try {\n      return _$$_REQUIRE(_dependencyMap[3], \"expo-constants\");\n    } catch (error) {\n      throw new Error('expo-font needs expo-constants to be installed');\n    }\n  }\n\n  var loaded = {};\n  var loadPromises = {};\n\n  function processFontFamily(name) {\n    if (!name || Constants.systemFonts.includes(name) || name === 'System') {\n      return name;\n    }\n\n    if (name.includes(Constants.sessionId)) {\n      return name;\n    }\n\n    if (!isLoaded(name)) {\n      if (__DEV__) {\n        if (isLoading(name)) {\n          console.error(\"You started loading '\" + name + \"', but used it before it finished loading\\n\\n\" + \"- You need to wait for Font.loadAsync to complete before using the font.\\n\\n\" + \"- We recommend loading all fonts before rendering the app, and rendering only \" + \"Expo.AppLoading while waiting for loading to complete.\");\n        } else {\n          console.error(\"fontFamily '\" + name + \"' is not a system font and has not been loaded through \" + \"Font.loadAsync.\\n\\n\" + \"- If you intended to use a system font, make sure you typed the name \" + \"correctly and that it is supported by your device operating system.\\n\\n\" + \"- If this is a custom font, be sure to load it with Font.loadAsync.\");\n        }\n      }\n\n      return 'System';\n    }\n\n    return \"ExpoFont-\" + _getNativeFontName(name);\n  }\n\n  function isLoaded(name) {\n    return loaded.hasOwnProperty(name);\n  }\n\n  function isLoading(name) {\n    return loadPromises.hasOwnProperty(name);\n  }\n\n  function loadAsync(nameOrMap, uriOrModuleOrAsset) {\n    var fontMap, names, name, asset;\n    return regeneratorRuntime.async(function loadAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!Array.isArray(nameOrMap)) {\n              _context2.next = 7;\n              break;\n            }\n\n            console.warn(\"Passing in an array to Font.loadAsync like Font.loadAsync([fontMap1, fontMap2, fontMap3]) is deprecated and will be removed in SDK 25. Instead, pass in a single font map. The object spread syntax may help with this: Font.loadAsync({ ...fontMap1, ...fontMap2, ...fontMap3 })\");\n            _context2.next = 4;\n            return regeneratorRuntime.awrap(Promise.all(nameOrMap.map(loadAsync)));\n\n          case 4:\n            return _context2.abrupt(\"return\");\n\n          case 7:\n            if (!(typeof nameOrMap === 'object')) {\n              _context2.next = 13;\n              break;\n            }\n\n            fontMap = nameOrMap;\n            names = Object.keys(fontMap);\n            _context2.next = 12;\n            return regeneratorRuntime.awrap(Promise.all(names.map(function (name) {\n              return loadAsync(name, fontMap[name]);\n            })));\n\n          case 12:\n            return _context2.abrupt(\"return\");\n\n          case 13:\n            name = nameOrMap;\n\n            if (!loaded[name]) {\n              _context2.next = 16;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 16:\n            if (!loadPromises[name]) {\n              _context2.next = 18;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", loadPromises[name]);\n\n          case 18:\n            (0, _invariant.default)(uriOrModuleOrAsset, \"No source from which to load font \\\"\" + name + \"\\\"\");\n            asset = _getAssetForSource(uriOrModuleOrAsset);\n\n            loadPromises[name] = function _callee() {\n              return regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.prev = 0;\n                      _context.next = 3;\n                      return regeneratorRuntime.awrap(_loadSingleFontAsync(name, asset));\n\n                    case 3:\n                      loaded[name] = true;\n\n                    case 4:\n                      _context.prev = 4;\n                      delete loadPromises[name];\n                      return _context.finish(4);\n\n                    case 7:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, this, [[0,, 4, 7]]);\n            }();\n\n            _context2.next = 23;\n            return regeneratorRuntime.awrap(loadPromises[name]);\n\n          case 23:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function _getAssetForSource(uriOrModuleOrAsset) {\n    if (typeof uriOrModuleOrAsset === 'string') {\n      throw new Error('Loading fonts from remote URIs is temporarily not supported. Please download the font file and load it using require. See: https://docs.expo.io/versions/latest/guides/using-custom-fonts.html#downloading-the-font');\n    }\n\n    if (typeof uriOrModuleOrAsset === 'number') {\n      return Asset.fromModule(uriOrModuleOrAsset);\n    }\n\n    return uriOrModuleOrAsset;\n  }\n\n  function _loadSingleFontAsync(name, asset) {\n    return regeneratorRuntime.async(function _loadSingleFontAsync$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return regeneratorRuntime.awrap(asset.downloadAsync());\n\n          case 2:\n            if (asset.downloaded) {\n              _context3.next = 4;\n              break;\n            }\n\n            throw new Error(\"Failed to download asset for font \\\"\" + name + \"\\\"\");\n\n          case 4:\n            _context3.next = 6;\n            return regeneratorRuntime.awrap(ExpoFontLoader.loadAsync(_getNativeFontName(name), asset.localUri));\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function _getNativeFontName(name) {\n    return Constants.sessionId + \"-\" + name;\n  }\n});","map":[[10,0,3,0],[12,0,4,0],[16,6,5,8,"ExpoFontLoader"],[16,20],[16,23,5,27,"NativeModulesProxy"],[16,51],[16,52,5,8,"ExpoFontLoader"],[16,66],[18,22,7,18,"requireAsset"],[18,34,7,30],[18,36],[19,6,7,8,"Asset"],[19,11],[19,28,7,8,"Asset"],[19,33],[21,26,8,22,"requireConstants"],[21,42,8,38],[21,44],[22,6,8,8,"Constants"],[22,15],[22,36,8,8,"Constants"],[22,45],[24,0,10,0],[24,11,10,9,"requireAsset"],[24,23,10,0],[24,26,10,24],[25,0,11,2],[25,8,11,6],[26,0,12,4],[26,13,12,11,"require"],[26,24,12,18],[26,57,12,4],[27,0,13,3],[27,5,11,2],[27,6,13,4],[27,13,13,11,"error"],[27,18,13,4],[27,20,13,18],[28,0,14,4],[28,12,14,10],[28,16,14,14,"Error"],[28,21,14,10],[28,22,14,20],[28,66,14,10],[28,67,14,4],[29,0,15,3],[30,0,16,1],[32,0,18,0],[32,11,18,9,"requireConstants"],[32,27,18,0],[32,30,18,28],[33,0,19,2],[33,8,19,6],[34,0,20,4],[34,13,20,11,"require"],[34,24,20,18],[34,61,20,4],[35,0,21,3],[35,5,19,2],[35,6,21,4],[35,13,21,11,"error"],[35,18,21,4],[35,20,21,18],[36,0,22,4],[36,12,22,10],[36,16,22,14,"Error"],[36,21,22,10],[36,22,22,20],[36,70,22,10],[36,71,22,4],[37,0,23,3],[38,0,24,1],[40,0,28,0],[40,6,28,6,"loaded"],[40,12,28,41],[40,15,28,44],[40,17,28,0],[41,0,29,0],[41,6,29,6,"loadPromises"],[41,18,29,53],[41,21,29,56],[41,23,29,0],[43,0,31,7],[43,11,31,16,"processFontFamily"],[43,28,31,7],[43,29,31,34,"name"],[43,33,31,7],[43,35,31,58],[44,0,32,2],[44,8,32,6],[44,9,32,7,"name"],[44,13,32,6],[44,17,32,15,"Constants"],[44,26,32,24],[44,27,32,25,"systemFonts"],[44,38,32,15],[44,39,32,37,"includes"],[44,47,32,15],[44,48,32,46,"name"],[44,52,32,15],[44,53,32,6],[44,57,32,55,"name"],[44,61,32,59],[44,66,32,64],[44,74,32,2],[44,76,32,74],[45,0,33,4],[45,13,33,11,"name"],[45,17,33,4],[46,0,34,3],[48,0,36,2],[48,8,36,6,"name"],[48,12,36,10],[48,13,36,11,"includes"],[48,21,36,6],[48,22,36,20,"Constants"],[48,31,36,29],[48,32,36,30,"sessionId"],[48,41,36,6],[48,42,36,2],[48,44,36,42],[49,0,37,4],[49,13,37,11,"name"],[49,17,37,4],[50,0,38,3],[52,0,40,2],[52,8,40,6],[52,9,40,7,"isLoaded"],[52,17,40,15],[52,18,40,16,"name"],[52,22,40,15],[52,23,40,2],[52,25,40,23],[53,0,41,4],[53,10,41,8,"__DEV__"],[53,17,41,4],[53,19,41,17],[54,0,42,6],[54,12,42,10,"isLoading"],[54,21,42,19],[54,22,42,20,"name"],[54,26,42,19],[54,27,42,6],[54,29,42,27],[55,0,43,8,"console"],[55,10,43,8,"console"],[55,17,43,15],[55,18,43,16,"error"],[55,23,43,8],[55,24,44,10],[55,50,44,34,"name"],[55,54,44,10],[55,327,43,8],[56,0,49,7],[56,9,42,6],[56,15,49,13],[57,0,50,8,"console"],[57,10,50,8,"console"],[57,17,50,15],[57,18,50,16,"error"],[57,23,50,8],[57,24,51,10],[57,41,51,25,"name"],[57,45,51,10],[57,351,50,8],[58,0,57,7],[59,0,58,5],[61,0,60,4],[61,13,60,11],[61,21,60,4],[62,0,61,3],[64,0,63,2],[64,25,63,21,"_getNativeFontName"],[64,43,63,39],[64,44,63,40,"name"],[64,48,63,39],[64,49,63,2],[65,0,64,1],[67,0,66,7],[67,11,66,16,"isLoaded"],[67,19,66,7],[67,20,66,25,"name"],[67,24,66,7],[67,26,66,48],[68,0,67,2],[68,11,67,9,"loaded"],[68,17,67,15],[68,18,67,16,"hasOwnProperty"],[68,32,67,9],[68,33,67,31,"name"],[68,37,67,9],[68,38,67,2],[69,0,68,1],[71,0,70,7],[71,11,70,16,"isLoading"],[71,20,70,7],[71,21,70,26,"name"],[71,25,70,7],[71,27,70,49],[72,0,71,2],[72,11,71,9,"loadPromises"],[72,23,71,21],[72,24,71,22,"hasOwnProperty"],[72,38,71,9],[72,39,71,37,"name"],[72,43,71,9],[72,44,71,2],[73,0,72,1],[75,0,74,7],[75,11,74,22,"loadAsync"],[75,20,74,7],[75,21,75,2,"nameOrMap"],[75,30,74,7],[75,32,76,2,"uriOrModuleOrAsset"],[75,50,74,7],[76,0,74,7],[77,0,74,7],[78,0,74,7],[79,0,74,7],[80,0,74,7],[81,0,74,7],[81,17,78,6,"Array"],[81,22,78,11],[81,23,78,12,"isArray"],[81,30,78,6],[81,31,78,20,"nameOrMap"],[81,40,78,6],[81,41,74,7],[82,0,74,7],[83,0,74,7],[84,0,74,7],[86,0,79,4,"console"],[86,12,79,4,"console"],[86,19,79,11],[86,20,79,12,"warn"],[86,24,79,4],[87,0,74,7],[88,0,74,7],[88,44,82,10,"Promise"],[88,51,82,17],[88,52,82,18,"all"],[88,55,82,10],[88,56,82,22,"nameOrMap"],[88,65,82,31],[88,66,82,32,"map"],[88,69,82,22],[88,70,82,36,"loadAsync"],[88,79,82,22],[88,80,82,10],[88,81,74,7],[90,0,74,7],[91,0,74,7],[93,0,74,7],[94,0,74,7],[94,18,84,13],[94,25,84,20,"nameOrMap"],[94,34,84,13],[94,39,84,34],[94,47,74,7],[95,0,74,7],[96,0,74,7],[97,0,74,7],[99,0,85,10,"fontMap"],[99,12,85,10,"fontMap"],[99,19,74,7],[99,22,85,20,"nameOrMap"],[99,31,74,7],[100,0,86,10,"names"],[100,12,86,10,"names"],[100,17,74,7],[100,20,86,18,"Object"],[100,26,86,24],[100,27,86,25,"keys"],[100,31,86,18],[100,32,86,30,"fontMap"],[100,39,86,18],[100,40,74,7],[101,0,74,7],[102,0,74,7],[102,44,87,10,"Promise"],[102,51,87,17],[102,52,87,18,"all"],[102,55,87,10],[102,56,87,22,"names"],[102,61,87,27],[102,62,87,28,"map"],[102,65,87,22],[102,66,87,32],[102,76,87,32,"name"],[102,80,87,36],[103,0,87,36],[103,21,87,40,"loadAsync"],[103,30,87,49],[103,31,87,50,"name"],[103,35,87,49],[103,37,87,56,"fontMap"],[103,44,87,63],[103,45,87,64,"name"],[103,49,87,63],[103,50,87,49],[103,51,87,36],[104,0,87,36],[104,13,87,22],[104,14,87,10],[104,15,74,7],[106,0,74,7],[107,0,74,7],[109,0,74,7],[110,0,91,8,"name"],[110,12,91,8,"name"],[110,16,74,7],[110,19,91,15,"nameOrMap"],[110,28,74,7],[112,0,74,7],[112,17,93,6,"loaded"],[112,23,93,12],[112,24,93,13,"name"],[112,28,93,12],[112,29,74,7],[113,0,74,7],[114,0,74,7],[115,0,74,7],[117,0,74,7],[119,0,74,7],[120,0,74,7],[120,17,97,6,"loadPromises"],[120,29,97,18],[120,30,97,19,"name"],[120,34,97,18],[120,35,74,7],[121,0,74,7],[122,0,74,7],[123,0,74,7],[125,0,74,7],[125,46,98,11,"loadPromises"],[125,58,98,23],[125,59,98,24,"name"],[125,63,98,23],[125,64,74,7],[127,0,74,7],[128,0,106,2],[128,36,106,12,"uriOrModuleOrAsset"],[128,54,106,2],[128,97,106,70,"name"],[128,101,106,2],[129,0,107,8,"asset"],[129,12,107,8,"asset"],[129,17,74,7],[129,20,107,16,"_getAssetForSource"],[129,38,107,34],[129,39,107,35,"uriOrModuleOrAsset"],[129,57,107,34],[129,58,74,7],[131,0,108,2,"loadPromises"],[131,12,108,2,"loadPromises"],[131,24,108,14],[131,25,108,15,"name"],[131,29,108,14],[131,30,108,2],[131,33,108,24],[132,0,108,24],[133,0,108,24],[134,0,108,24],[135,0,108,24],[136,0,108,24],[137,0,108,24],[138,0,108,24],[138,54,110,12,"_loadSingleFontAsync"],[138,74,110,32],[138,75,110,33,"name"],[138,79,110,32],[138,81,110,39,"asset"],[138,86,110,32],[138,87,108,24],[140,0,108,24],[141,0,111,6,"loaded"],[141,22,111,6,"loaded"],[141,28,111,12],[141,29,111,13,"name"],[141,33,111,12],[141,34,111,6],[141,37,111,21],[141,41,111,6],[143,0,108,24],[144,0,108,24],[145,0,113,6],[145,29,113,13,"loadPromises"],[145,41,113,25],[145,42,113,26,"name"],[145,46,113,25],[145,47,113,6],[146,0,108,24],[148,0,108,24],[149,0,108,24],[150,0,108,24],[151,0,108,24],[152,0,108,24],[153,0,108,24],[154,0,108,24],[154,13,108,23],[154,15,108,2],[156,0,74,7],[157,0,74,7],[157,44,117,8,"loadPromises"],[157,56,117,20],[157,57,117,21,"name"],[157,61,117,20],[157,62,74,7],[159,0,74,7],[160,0,74,7],[161,0,74,7],[162,0,74,7],[163,0,74,7],[164,0,74,7],[165,0,74,7],[167,0,120,0],[167,11,120,9,"_getAssetForSource"],[167,29,120,0],[167,30,120,28,"uriOrModuleOrAsset"],[167,48,120,0],[167,50,120,67],[168,0,121,2],[168,8,121,6],[168,15,121,13,"uriOrModuleOrAsset"],[168,33,121,6],[168,38,121,36],[168,46,121,2],[168,48,121,46],[169,0,124,4],[169,12,124,10],[169,16,124,14,"Error"],[169,21,124,10],[169,22,125,6],[169,235,124,10],[169,236,124,4],[170,0,127,3],[172,0,129,2],[172,8,129,6],[172,15,129,13,"uriOrModuleOrAsset"],[172,33,129,6],[172,38,129,36],[172,46,129,2],[172,48,129,46],[173,0,130,4],[173,13,130,11,"Asset"],[173,18,130,16],[173,19,130,17,"fromModule"],[173,29,130,11],[173,30,130,28,"uriOrModuleOrAsset"],[173,48,130,11],[173,49,130,4],[174,0,131,3],[176,0,133,2],[176,11,133,9,"uriOrModuleOrAsset"],[176,29,133,2],[177,0,134,1],[179,0,136,0],[179,11,136,15,"_loadSingleFontAsync"],[179,31,136,0],[179,32,136,36,"name"],[179,36,136,0],[179,38,136,50,"asset"],[179,43,136,0],[180,0,136,0],[181,0,136,0],[182,0,136,0],[183,0,136,0],[184,0,136,0],[185,0,136,0],[185,44,137,8,"asset"],[185,49,137,13],[185,50,137,14,"downloadAsync"],[185,63,137,8],[185,65,136,0],[187,0,136,0],[188,0,136,0],[188,16,138,7,"asset"],[188,21,138,12],[188,22,138,13,"downloaded"],[188,32,136,0],[189,0,136,0],[190,0,136,0],[191,0,136,0],[193,0,136,0],[193,18,139,10],[193,22,139,14,"Error"],[193,27,139,10],[193,69,139,58,"name"],[193,73,139,10],[193,81,136,0],[195,0,136,0],[196,0,136,0],[197,0,136,0],[197,44,141,8,"ExpoFontLoader"],[197,58,141,22],[197,59,141,23,"loadAsync"],[197,68,141,8],[197,69,141,33,"_getNativeFontName"],[197,87,141,51],[197,88,141,52,"name"],[197,92,141,51],[197,93,141,8],[197,95,141,59,"asset"],[197,100,141,64],[197,101,141,65,"localUri"],[197,109,141,8],[197,110,136,0],[199,0,136,0],[200,0,136,0],[201,0,136,0],[202,0,136,0],[203,0,136,0],[204,0,136,0],[205,0,136,0],[207,0,144,0],[207,11,144,9,"_getNativeFontName"],[207,29,144,0],[207,30,144,28,"name"],[207,34,144,0],[207,36,144,50],[208,0,145,2],[208,11,145,12,"Constants"],[208,20,145,21],[208,21,145,22,"sessionId"],[208,30,145,2],[208,39,145,35,"name"],[208,43,145,2],[209,0,146,1]]},"type":"js/module"}]}