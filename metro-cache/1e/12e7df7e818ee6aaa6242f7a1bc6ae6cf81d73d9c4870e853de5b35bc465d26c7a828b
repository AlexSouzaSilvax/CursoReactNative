{"dependencies":[{"name":"react","data":{"isAsync":false}},{"name":"./../../../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"prop-types","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"./decorateMapComponent","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../../../react-transform-hmr/lib/index.js\"));\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"prop-types\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[3], \"react-native\");\n\n  var _decorateMapComponent = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"./decorateMapComponent\"));\n\n  var _jsxFileName = \"/home/alex/Documentos/CursoReactNative/node_modules/react-native-maps/lib/components/MapPolyline.js\";\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  var _components = {\n    MapPolyline: {\n      displayName: \"MapPolyline\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/alex/Documentos/CursoReactNative/node_modules/react-native-maps/lib/components/MapPolyline.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var viewPropTypes = _reactNative.ViewPropTypes || _reactNative.View.propTypes;\n\n  var propTypes = _objectSpread({}, viewPropTypes, {\n    coordinates: _propTypes.default.arrayOf(_propTypes.default.shape({\n      latitude: _propTypes.default.number.isRequired,\n      longitude: _propTypes.default.number.isRequired\n    })),\n    onPress: _propTypes.default.func,\n    tappable: _propTypes.default.bool,\n    fillColor: _reactNative.ColorPropType,\n    strokeWidth: _propTypes.default.number,\n    strokeColor: _reactNative.ColorPropType,\n    strokeColors: _propTypes.default.arrayOf(_reactNative.ColorPropType),\n    zIndex: _propTypes.default.number,\n    lineCap: _propTypes.default.oneOf(['butt', 'round', 'square']),\n    lineJoin: _propTypes.default.oneOf(['miter', 'round', 'bevel']),\n    miterLimit: _propTypes.default.number,\n    geodesic: _propTypes.default.bool,\n    lineDashPhase: _propTypes.default.number,\n    lineDashPattern: _propTypes.default.arrayOf(_propTypes.default.number)\n  });\n\n  var defaultProps = {\n    strokeColor: '#000',\n    strokeWidth: 1,\n    lineJoin: 'round',\n    lineCap: 'round'\n  };\n\n  var MapPolyline = function (_React$Component) {\n    _inherits(MapPolyline, _React$Component);\n\n    function MapPolyline() {\n      _classCallCheck(this, MapPolyline);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(MapPolyline).apply(this, arguments));\n    }\n\n    _createClass(MapPolyline, [{\n      key: \"setNativeProps\",\n      value: function setNativeProps(props) {\n        this.polyline.setNativeProps(props);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this = this;\n\n        var AIRMapPolyline = this.getAirComponent();\n        return _react.default.createElement(AIRMapPolyline, _extends({}, this.props, {\n          ref: function ref(_ref) {\n            _this.polyline = _ref;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          }\n        }));\n      }\n    }]);\n\n    return MapPolyline;\n  }(_react.default.Component);\n\n  MapPolyline = _wrapComponent(\"MapPolyline\")(MapPolyline);\n  MapPolyline.propTypes = propTypes;\n  MapPolyline.defaultProps = defaultProps;\n\n  var _default2 = (0, _decorateMapComponent.default)(MapPolyline, {\n    componentType: 'Polyline',\n    providers: {\n      google: {\n        ios: _decorateMapComponent.SUPPORTED,\n        android: _decorateMapComponent.USES_DEFAULT_IMPLEMENTATION\n      }\n    }\n  });\n\n  exports.default = _default2;\n});","map":[[7,0,2,0],[11,0,1,0],[13,0,3,0],[15,0,8,0],[64,0,14,0],[64,6,14,6,"viewPropTypes"],[64,19,14,19],[64,22,14,22,"ViewPropTypes"],[64,52,14,39,"View"],[64,70,14,44,"propTypes"],[64,79,14,0],[66,0,16,0],[66,6,16,6,"propTypes"],[66,15,16,15],[66,36,17,5,"viewPropTypes"],[66,49,16,15],[67,0,22,2,"coordinates"],[67,4,22,2,"coordinates"],[67,15,22,13],[67,17,22,15,"PropTypes"],[67,36,22,25,"arrayOf"],[67,43,22,15],[67,44,22,33,"PropTypes"],[67,63,22,43,"shape"],[67,68,22,33],[67,69,22,49],[68,0,26,4,"latitude"],[68,6,26,4,"latitude"],[68,14,26,12],[68,16,26,14,"PropTypes"],[68,35,26,24,"number"],[68,41,26,14],[68,42,26,31,"isRequired"],[68,52,22,49],[69,0,27,4,"longitude"],[69,6,27,4,"longitude"],[69,15,27,13],[69,17,27,15,"PropTypes"],[69,36,27,25,"number"],[69,42,27,15],[69,43,27,32,"isRequired"],[70,0,22,49],[70,5,22,33],[70,6,22,15],[70,7,16,15],[71,0,33,2,"onPress"],[71,4,33,2,"onPress"],[71,11,33,9],[71,13,33,11,"PropTypes"],[71,32,33,21,"func"],[71,36,16,15],[72,0,38,2,"tappable"],[72,4,38,2,"tappable"],[72,12,38,10],[72,14,38,12,"PropTypes"],[72,33,38,22,"bool"],[72,37,16,15],[73,0,43,2,"fillColor"],[73,4,43,2,"fillColor"],[73,13,43,11],[73,15,43,13,"ColorPropType"],[73,41,16,15],[74,0,48,2,"strokeWidth"],[74,4,48,2,"strokeWidth"],[74,15,48,13],[74,17,48,15,"PropTypes"],[74,36,48,25,"number"],[74,42,16,15],[75,0,53,2,"strokeColor"],[75,4,53,2,"strokeColor"],[75,15,53,13],[75,17,53,15,"ColorPropType"],[75,43,16,15],[76,0,58,2,"strokeColors"],[76,4,58,2,"strokeColors"],[76,16,58,14],[76,18,58,16,"PropTypes"],[76,37,58,26,"arrayOf"],[76,44,58,16],[76,45,58,34,"ColorPropType"],[76,71,58,16],[76,72,16,15],[77,0,67,2,"zIndex"],[77,4,67,2,"zIndex"],[77,10,67,8],[77,12,67,10,"PropTypes"],[77,31,67,20,"number"],[77,37,16,15],[78,0,75,2,"lineCap"],[78,4,75,2,"lineCap"],[78,11,75,9],[78,13,75,11,"PropTypes"],[78,32,75,21,"oneOf"],[78,37,75,11],[78,38,75,27],[78,39,76,4],[78,45,75,27],[78,47,77,4],[78,54,75,27],[78,56,78,4],[78,64,75,27],[78,65,75,11],[78,66,16,15],[79,0,87,2,"lineJoin"],[79,4,87,2,"lineJoin"],[79,12,87,10],[79,14,87,12,"PropTypes"],[79,33,87,22,"oneOf"],[79,38,87,12],[79,39,87,28],[79,40,88,4],[79,47,87,28],[79,49,89,4],[79,56,87,28],[79,58,90,4],[79,65,87,28],[79,66,87,12],[79,67,16,15],[80,0,103,2,"miterLimit"],[80,4,103,2,"miterLimit"],[80,14,103,12],[80,16,103,14,"PropTypes"],[80,35,103,24,"number"],[80,41,16,15],[81,0,113,2,"geodesic"],[81,4,113,2,"geodesic"],[81,12,113,10],[81,14,113,12,"PropTypes"],[81,33,113,22,"bool"],[81,37,16,15],[82,0,126,2,"lineDashPhase"],[82,4,126,2,"lineDashPhase"],[82,17,126,15],[82,19,126,17,"PropTypes"],[82,38,126,27,"number"],[82,44,16,15],[83,0,140,2,"lineDashPattern"],[83,4,140,2,"lineDashPattern"],[83,19,140,17],[83,21,140,19,"PropTypes"],[83,40,140,29,"arrayOf"],[83,47,140,19],[83,48,140,37,"PropTypes"],[83,67,140,47,"number"],[83,73,140,19],[84,0,16,15],[84,4,16,0],[86,0,143,0],[86,6,143,6,"defaultProps"],[86,18,143,18],[86,21,143,21],[87,0,144,2,"strokeColor"],[87,4,144,2,"strokeColor"],[87,15,144,13],[87,17,144,15],[87,23,143,21],[88,0,145,2,"strokeWidth"],[88,4,145,2,"strokeWidth"],[88,15,145,13],[88,17,145,15],[88,18,143,21],[89,0,146,2,"lineJoin"],[89,4,146,2,"lineJoin"],[89,12,146,10],[89,14,146,12],[89,21,143,21],[90,0,147,2,"lineCap"],[90,4,147,2,"lineCap"],[90,11,147,9],[90,13,147,11],[91,0,143,21],[91,3,143,0],[93,6,150,6,"MapPolyline"],[93,17],[104,37,151,17,"props"],[104,42],[104,44,151,24],[105,0,152,4],[105,13,152,9,"polyline"],[105,21,152,4],[105,22,152,18,"setNativeProps"],[105,36,152,4],[105,37,152,33,"props"],[105,42,152,4],[106,0,153,3],[109,31,155,11],[110,0,155,11],[112,0,156,4],[112,12,156,10,"AIRMapPolyline"],[112,26,156,24],[112,29,156,27],[112,34,156,32,"getAirComponent"],[112,49,156,27],[112,51,156,4],[113,0,157,4],[113,15,158,6],[113,44,158,7],[113,58,158,6],[113,73,158,26],[113,78,158,31,"props"],[113,83,158,6],[114,0,158,38],[114,10,158,38],[114,13,158,41],[114,15,158,43],[114,28,158,43,"ref"],[114,32,158,46],[114,34,158,50],[115,0,158,52],[115,12,158,52],[115,17,158,56],[115,18,158,57,"polyline"],[115,26,158,52],[115,29,158,68,"ref"],[115,33,158,52],[116,0,158,74],[116,11,158,6],[117,0,158,6],[118,0,158,6],[119,0,158,6],[120,0,158,6],[121,0,158,6],[121,11,157,4],[122,0,160,3],[126,4,150,26,"React"],[126,19,150,32,"Component"],[126,28],[129,0,163,0,"MapPolyline"],[129,2,163,0,"MapPolyline"],[129,13,163,11],[129,14,163,12,"propTypes"],[129,23,163,0],[129,26,163,24,"propTypes"],[129,35,163,0],[130,0,164,0,"MapPolyline"],[130,2,164,0,"MapPolyline"],[130,13,164,11],[130,14,164,12,"defaultProps"],[130,26,164,0],[130,29,164,27,"defaultProps"],[130,41,164,0],[132,18,166,15],[132,53,166,36,"MapPolyline"],[132,64,166,15],[132,66,166,49],[133,0,167,2,"componentType"],[133,4,167,2,"componentType"],[133,17,167,15],[133,19,167,17],[133,29,166,49],[134,0,168,2,"providers"],[134,4,168,2,"providers"],[134,13,168,11],[134,15,168,13],[135,0,169,4,"google"],[135,6,169,4,"google"],[135,12,169,10],[135,14,169,12],[136,0,170,6,"ios"],[136,8,170,6,"ios"],[136,11,170,9],[136,13,170,11,"SUPPORTED"],[136,44,169,12],[137,0,171,6,"android"],[137,8,171,6,"android"],[137,15,171,13],[137,17,171,15,"USES_DEFAULT_IMPLEMENTATION"],[138,0,169,12],[139,0,168,13],[140,0,166,49],[140,3,166,15],[140,4]]},"type":"js/module"}]}