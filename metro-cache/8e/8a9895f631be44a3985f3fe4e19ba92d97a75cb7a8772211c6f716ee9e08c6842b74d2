{"dependencies":[{"name":"./InspectorAgent","data":{"isAsync":false}},{"name":"./JSInspector","data":{"isAsync":false}},{"name":"../vendor/core/Map","data":{"isAsync":false}},{"name":"../Network/XMLHttpRequest","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  var InspectorAgent = _$$_REQUIRE(_dependencyMap[0], \"./InspectorAgent\");\n\n  var JSInspector = _$$_REQUIRE(_dependencyMap[1], \"./JSInspector\");\n\n  var Map = _$$_REQUIRE(_dependencyMap[2], \"../vendor/core/Map\");\n\n  var XMLHttpRequest = _$$_REQUIRE(_dependencyMap[3], \"../Network/XMLHttpRequest\");\n\n  var Interceptor = function () {\n    function Interceptor(agent) {\n      _classCallCheck(this, Interceptor);\n\n      this._agent = agent;\n      this._requests = new Map();\n    }\n\n    _createClass(Interceptor, [{\n      key: \"getData\",\n      value: function getData(requestId) {\n        return this._requests.get(requestId);\n      }\n    }, {\n      key: \"requestSent\",\n      value: function requestSent(id, url, method, headers) {\n        var requestId = String(id);\n\n        this._requests.set(requestId, '');\n\n        var request = {\n          url: url,\n          method: method,\n          headers: headers,\n          initialPriority: 'Medium'\n        };\n        var event = {\n          requestId: requestId,\n          documentURL: '',\n          frameId: '1',\n          loaderId: '1',\n          request: request,\n          timestamp: JSInspector.getTimestamp(),\n          initiator: {\n            type: 'other'\n          },\n          type: 'Other'\n        };\n\n        this._agent.sendEvent('requestWillBeSent', event);\n      }\n    }, {\n      key: \"responseReceived\",\n      value: function responseReceived(id, url, status, headers) {\n        var requestId = String(id);\n        var response = {\n          url: url,\n          status: status,\n          statusText: String(status),\n          headers: headers,\n          requestHeaders: {},\n          mimeType: this._getMimeType(headers),\n          connectionReused: false,\n          connectionId: -1,\n          encodedDataLength: 0,\n          securityState: 'unknown'\n        };\n        var event = {\n          requestId: requestId,\n          frameId: '1',\n          loaderId: '1',\n          timestamp: JSInspector.getTimestamp(),\n          type: 'Other',\n          response: response\n        };\n\n        this._agent.sendEvent('responseReceived', event);\n      }\n    }, {\n      key: \"dataReceived\",\n      value: function dataReceived(id, data) {\n        var requestId = String(id);\n        var existingData = this._requests.get(requestId) || '';\n\n        this._requests.set(requestId, existingData.concat(data));\n\n        var event = {\n          requestId: requestId,\n          timestamp: JSInspector.getTimestamp(),\n          dataLength: data.length,\n          encodedDataLength: data.length\n        };\n\n        this._agent.sendEvent('dataReceived', event);\n      }\n    }, {\n      key: \"loadingFinished\",\n      value: function loadingFinished(id, encodedDataLength) {\n        var event = {\n          requestId: String(id),\n          timestamp: JSInspector.getTimestamp(),\n          encodedDataLength: encodedDataLength\n        };\n\n        this._agent.sendEvent('loadingFinished', event);\n      }\n    }, {\n      key: \"loadingFailed\",\n      value: function loadingFailed(id, error) {\n        var event = {\n          requestId: String(id),\n          timestamp: JSInspector.getTimestamp(),\n          type: 'Other',\n          errorText: error\n        };\n\n        this._agent.sendEvent('loadingFailed', event);\n      }\n    }, {\n      key: \"_getMimeType\",\n      value: function _getMimeType(headers) {\n        var contentType = headers['Content-Type'] || '';\n        return contentType.split(';')[0];\n      }\n    }]);\n\n    return Interceptor;\n  }();\n\n  var NetworkAgent = function (_InspectorAgent) {\n    _inherits(NetworkAgent, _InspectorAgent);\n\n    function NetworkAgent() {\n      _classCallCheck(this, NetworkAgent);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(NetworkAgent).apply(this, arguments));\n    }\n\n    _createClass(NetworkAgent, [{\n      key: \"enable\",\n      value: function enable(_ref) {\n        var maxResourceBufferSize = _ref.maxResourceBufferSize,\n            maxTotalBufferSize = _ref.maxTotalBufferSize;\n        this._interceptor = new Interceptor(this);\n        XMLHttpRequest.setInterceptor(this._interceptor);\n      }\n    }, {\n      key: \"disable\",\n      value: function disable() {\n        XMLHttpRequest.setInterceptor(null);\n        this._interceptor = null;\n      }\n    }, {\n      key: \"getResponseBody\",\n      value: function getResponseBody(_ref2) {\n        var requestId = _ref2.requestId;\n        return {\n          body: this.interceptor().getData(requestId),\n          base64Encoded: false\n        };\n      }\n    }, {\n      key: \"interceptor\",\n      value: function interceptor() {\n        if (this._interceptor) {\n          return this._interceptor;\n        } else {\n          throw Error('_interceptor can not be null');\n        }\n      }\n    }]);\n\n    return NetworkAgent;\n  }(InspectorAgent);\n\n  NetworkAgent.DOMAIN = 'Network';\n  module.exports = NetworkAgent;\n});","map":[[2,0,11,0],[20,0,13,0],[20,6,13,6,"InspectorAgent"],[20,20,13,20],[20,23,13,23,"require"],[20,34,13,30],[20,73,13,0],[22,0,14,0],[22,6,14,6,"JSInspector"],[22,17,14,17],[22,20,14,20,"require"],[22,31,14,27],[22,67,14,0],[24,0,15,0],[24,6,15,6,"Map"],[24,9,15,9],[24,12,15,12,"require"],[24,23,15,19],[24,64,15,0],[26,0,16,0],[26,6,16,6,"XMLHttpRequest"],[26,20,16,20],[26,23,16,23,"require"],[26,34,16,30],[26,82,16,0],[28,6,143,6,"Interceptor"],[28,17],[29,0,147,2],[29,25,147,14,"agent"],[29,30,147,2],[29,32,147,35],[30,0,147,35],[32,0,148,4],[32,11,148,9,"_agent"],[32,17,148,4],[32,20,148,18,"agent"],[32,25,148,4],[33,0,149,4],[33,11,149,9,"_requests"],[33,20,149,4],[33,23,149,21],[33,27,149,25,"Map"],[33,30,149,21],[33,32,149,4],[34,0,150,3],[38,30,152,10,"requestId"],[38,39],[38,41,152,38],[39,0,153,4],[39,15,153,11],[39,20,153,16,"_requests"],[39,29,153,11],[39,30,153,26,"get"],[39,33,153,11],[39,34,153,30,"requestId"],[39,43,153,11],[39,44,153,4],[40,0,154,3],[43,34,156,14,"id"],[43,36],[43,38,156,26,"url"],[43,41],[43,43,156,39,"method"],[43,49],[43,51,156,55,"headers"],[43,58],[43,60,156,72],[44,0,157,4],[44,12,157,10,"requestId"],[44,21,157,19],[44,24,157,22,"String"],[44,30,157,28],[44,31,157,29,"id"],[44,33,157,28],[44,34,157,4],[46,0,158,4],[46,13,158,9,"_requests"],[46,22,158,4],[46,23,158,19,"set"],[46,26,158,4],[46,27,158,23,"requestId"],[46,36,158,4],[46,38,158,34],[46,40,158,4],[48,0,160,4],[48,12,160,10,"request"],[48,19,160,26],[48,22,160,29],[49,0,161,6,"url"],[49,10,161,6,"url"],[49,13,161,9],[49,15,161,6,"url"],[49,18,160,29],[50,0,162,6,"method"],[50,10,162,6,"method"],[50,16,162,12],[50,18,162,6,"method"],[50,24,160,29],[51,0,163,6,"headers"],[51,10,163,6,"headers"],[51,17,163,13],[51,19,163,6,"headers"],[51,26,160,29],[52,0,164,6,"initialPriority"],[52,10,164,6,"initialPriority"],[52,25,164,21],[52,27,164,23],[53,0,160,29],[53,9,160,4],[54,0,166,4],[54,12,166,10,"event"],[54,17,166,39],[54,20,166,42],[55,0,167,6,"requestId"],[55,10,167,6,"requestId"],[55,19,167,15],[55,21,167,6,"requestId"],[55,30,166,42],[56,0,168,6,"documentURL"],[56,10,168,6,"documentURL"],[56,21,168,17],[56,23,168,19],[56,25,166,42],[57,0,169,6,"frameId"],[57,10,169,6,"frameId"],[57,17,169,13],[57,19,169,15],[57,22,166,42],[58,0,170,6,"loaderId"],[58,10,170,6,"loaderId"],[58,18,170,14],[58,20,170,16],[58,23,166,42],[59,0,171,6,"request"],[59,10,171,6,"request"],[59,17,171,13],[59,19,171,6,"request"],[59,26,166,42],[60,0,172,6,"timestamp"],[60,10,172,6,"timestamp"],[60,19,172,15],[60,21,172,17,"JSInspector"],[60,32,172,28],[60,33,172,29,"getTimestamp"],[60,45,172,17],[60,47,166,42],[61,0,173,6,"initiator"],[61,10,173,6,"initiator"],[61,19,173,15],[61,21,173,17],[62,0,177,8,"type"],[62,12,177,8,"type"],[62,16,177,12],[62,18,177,14],[63,0,173,17],[63,11,166,42],[64,0,179,6,"type"],[64,10,179,6,"type"],[64,14,179,10],[64,16,179,12],[65,0,166,42],[65,9,166,4],[67,0,181,4],[67,13,181,9,"_agent"],[67,19,181,4],[67,20,181,16,"sendEvent"],[67,29,181,4],[67,30,181,26],[67,49,181,4],[67,51,181,47,"event"],[67,56,181,4],[68,0,182,3],[71,39,184,19,"id"],[71,41],[71,43,184,31,"url"],[71,46],[71,48,184,44,"status"],[71,54],[71,56,184,60,"headers"],[71,63],[71,65,184,77],[72,0,185,4],[72,12,185,10,"requestId"],[72,21,185,19],[72,24,185,22,"String"],[72,30,185,28],[72,31,185,29,"id"],[72,33,185,28],[72,34,185,4],[73,0,186,4],[73,12,186,10,"response"],[73,20,186,28],[73,23,186,31],[74,0,187,6,"url"],[74,10,187,6,"url"],[74,13,187,9],[74,15,187,6,"url"],[74,18,186,31],[75,0,188,6,"status"],[75,10,188,6,"status"],[75,16,188,12],[75,18,188,6,"status"],[75,24,186,31],[76,0,189,6,"statusText"],[76,10,189,6,"statusText"],[76,20,189,16],[76,22,189,18,"String"],[76,28,189,24],[76,29,189,25,"status"],[76,35,189,24],[76,36,186,31],[77,0,190,6,"headers"],[77,10,190,6,"headers"],[77,17,190,13],[77,19,190,6,"headers"],[77,26,186,31],[78,0,192,6,"requestHeaders"],[78,10,192,6,"requestHeaders"],[78,24,192,20],[78,26,192,22],[78,28,186,31],[79,0,193,6,"mimeType"],[79,10,193,6,"mimeType"],[79,18,193,14],[79,20,193,16],[79,25,193,21,"_getMimeType"],[79,37,193,16],[79,38,193,34,"headers"],[79,45,193,16],[79,46,186,31],[80,0,194,6,"connectionReused"],[80,10,194,6,"connectionReused"],[80,26,194,22],[80,28,194,24],[80,33,186,31],[81,0,195,6,"connectionId"],[81,10,195,6,"connectionId"],[81,22,195,18],[81,24,195,20],[81,25,195,21],[81,26,186,31],[82,0,196,6,"encodedDataLength"],[82,10,196,6,"encodedDataLength"],[82,27,196,23],[82,29,196,25],[82,30,186,31],[83,0,197,6,"securityState"],[83,10,197,6,"securityState"],[83,23,197,19],[83,25,197,21],[84,0,186,31],[84,9,186,4],[85,0,200,4],[85,12,200,10,"event"],[85,17,200,38],[85,20,200,41],[86,0,201,6,"requestId"],[86,10,201,6,"requestId"],[86,19,201,15],[86,21,201,6,"requestId"],[86,30,200,41],[87,0,202,6,"frameId"],[87,10,202,6,"frameId"],[87,17,202,13],[87,19,202,15],[87,22,200,41],[88,0,203,6,"loaderId"],[88,10,203,6,"loaderId"],[88,18,203,14],[88,20,203,16],[88,23,200,41],[89,0,204,6,"timestamp"],[89,10,204,6,"timestamp"],[89,19,204,15],[89,21,204,17,"JSInspector"],[89,32,204,28],[89,33,204,29,"getTimestamp"],[89,45,204,17],[89,47,200,41],[90,0,205,6,"type"],[90,10,205,6,"type"],[90,14,205,10],[90,16,205,12],[90,23,200,41],[91,0,206,6,"response"],[91,10,206,6,"response"],[91,18,206,14],[91,20,206,6,"response"],[92,0,200,41],[92,9,200,4],[94,0,208,4],[94,13,208,9,"_agent"],[94,19,208,4],[94,20,208,16,"sendEvent"],[94,29,208,4],[94,30,208,26],[94,48,208,4],[94,50,208,46,"event"],[94,55,208,4],[95,0,209,3],[98,35,211,15,"id"],[98,37],[98,39,211,27,"data"],[98,43],[98,45,211,41],[99,0,212,4],[99,12,212,10,"requestId"],[99,21,212,19],[99,24,212,22,"String"],[99,30,212,28],[99,31,212,29,"id"],[99,33,212,28],[99,34,212,4],[100,0,213,4],[100,12,213,10,"existingData"],[100,24,213,22],[100,27,213,25],[100,32,213,30,"_requests"],[100,41,213,25],[100,42,213,40,"get"],[100,45,213,25],[100,46,213,44,"requestId"],[100,55,213,25],[100,60,213,58],[100,62,213,4],[102,0,214,4],[102,13,214,9,"_requests"],[102,22,214,4],[102,23,214,19,"set"],[102,26,214,4],[102,27,214,23,"requestId"],[102,36,214,4],[102,38,214,34,"existingData"],[102,50,214,46],[102,51,214,47,"concat"],[102,57,214,34],[102,58,214,54,"data"],[102,62,214,34],[102,63,214,4],[104,0,215,4],[104,12,215,10,"event"],[104,17,215,29],[104,20,215,32],[105,0,216,6,"requestId"],[105,10,216,6,"requestId"],[105,19,216,15],[105,21,216,6,"requestId"],[105,30,215,32],[106,0,217,6,"timestamp"],[106,10,217,6,"timestamp"],[106,19,217,15],[106,21,217,17,"JSInspector"],[106,32,217,28],[106,33,217,29,"getTimestamp"],[106,45,217,17],[106,47,215,32],[107,0,218,6,"dataLength"],[107,10,218,6,"dataLength"],[107,20,218,16],[107,22,218,18,"data"],[107,26,218,22],[107,27,218,23,"length"],[107,33,215,32],[108,0,219,6,"encodedDataLength"],[108,10,219,6,"encodedDataLength"],[108,27,219,23],[108,29,219,25,"data"],[108,33,219,29],[108,34,219,30,"length"],[109,0,215,32],[109,9,215,4],[111,0,221,4],[111,13,221,9,"_agent"],[111,19,221,4],[111,20,221,16,"sendEvent"],[111,29,221,4],[111,30,221,26],[111,44,221,4],[111,46,221,42,"event"],[111,51,221,4],[112,0,222,3],[115,38,224,18,"id"],[115,40],[115,42,224,30,"encodedDataLength"],[115,59],[115,61,224,57],[116,0,225,4],[116,12,225,10,"event"],[116,17,225,37],[116,20,225,40],[117,0,226,6,"requestId"],[117,10,226,6,"requestId"],[117,19,226,15],[117,21,226,17,"String"],[117,27,226,23],[117,28,226,24,"id"],[117,30,226,23],[117,31,225,40],[118,0,227,6,"timestamp"],[118,10,227,6,"timestamp"],[118,19,227,15],[118,21,227,17,"JSInspector"],[118,32,227,28],[118,33,227,29,"getTimestamp"],[118,45,227,17],[118,47,225,40],[119,0,228,6,"encodedDataLength"],[119,10,228,6,"encodedDataLength"],[119,27,228,23],[119,29,228,25,"encodedDataLength"],[120,0,225,40],[120,9,225,4],[122,0,230,4],[122,13,230,9,"_agent"],[122,19,230,4],[122,20,230,16,"sendEvent"],[122,29,230,4],[122,30,230,26],[122,47,230,4],[122,49,230,45,"event"],[122,54,230,4],[123,0,231,3],[126,36,233,16,"id"],[126,38],[126,40,233,28,"error"],[126,45],[126,47,233,43],[127,0,234,4],[127,12,234,10,"event"],[127,17,234,35],[127,20,234,38],[128,0,235,6,"requestId"],[128,10,235,6,"requestId"],[128,19,235,15],[128,21,235,17,"String"],[128,27,235,23],[128,28,235,24,"id"],[128,30,235,23],[128,31,234,38],[129,0,236,6,"timestamp"],[129,10,236,6,"timestamp"],[129,19,236,15],[129,21,236,17,"JSInspector"],[129,32,236,28],[129,33,236,29,"getTimestamp"],[129,45,236,17],[129,47,234,38],[130,0,237,6,"type"],[130,10,237,6,"type"],[130,14,237,10],[130,16,237,12],[130,23,234,38],[131,0,238,6,"errorText"],[131,10,238,6,"errorText"],[131,19,238,15],[131,21,238,17,"error"],[132,0,234,38],[132,9,234,4],[134,0,240,4],[134,13,240,9,"_agent"],[134,19,240,4],[134,20,240,16,"sendEvent"],[134,29,240,4],[134,30,240,26],[134,45,240,4],[134,47,240,43,"event"],[134,52,240,4],[135,0,241,3],[138,35,243,15,"headers"],[138,42],[138,44,243,40],[139,0,244,4],[139,12,244,10,"contentType"],[139,23,244,21],[139,26,244,24,"headers"],[139,33,244,31],[139,34,244,32],[139,48,244,31],[139,49,244,24],[139,53,244,51],[139,55,244,4],[140,0,245,4],[140,15,245,11,"contentType"],[140,26,245,22],[140,27,245,23,"split"],[140,32,245,11],[140,33,245,29],[140,36,245,11],[140,38,245,34],[140,39,245,11],[140,40,245,4],[141,0,246,3],[147,6,254,6,"NetworkAgent"],[147,18],[158,35,260,66],[159,0,260,66],[159,12,260,10,"maxResourceBufferSize"],[159,33,260,66],[159,41,260,10,"maxResourceBufferSize"],[159,62,260,66],[160,0,260,66],[160,12,260,33,"maxTotalBufferSize"],[160,30,260,66],[160,38,260,33,"maxTotalBufferSize"],[160,56,260,66],[161,0,261,4],[161,13,261,9,"_interceptor"],[161,25,261,4],[161,28,261,24],[161,32,261,28,"Interceptor"],[161,43,261,24],[161,44,261,40],[161,48,261,24],[161,49,261,4],[162,0,262,4,"XMLHttpRequest"],[162,8,262,4,"XMLHttpRequest"],[162,22,262,18],[162,23,262,19,"setInterceptor"],[162,37,262,4],[162,38,262,34],[162,43,262,39,"_interceptor"],[162,55,262,4],[163,0,263,3],[166,32,265,12],[167,0,266,4,"XMLHttpRequest"],[167,8,266,4,"XMLHttpRequest"],[167,22,266,18],[167,23,266,19,"setInterceptor"],[167,37,266,4],[167,38,266,34],[167,42,266,4],[168,0,267,4],[168,13,267,9,"_interceptor"],[168,25,267,4],[168,28,267,24],[168,32,267,4],[169,0,268,3],[172,45,274,46],[173,0,274,46],[173,12,271,4,"requestId"],[173,21,274,46],[173,30,271,4,"requestId"],[173,39,274,46],[174,0,275,4],[174,15,275,11],[175,0,275,12,"body"],[175,10,275,12,"body"],[175,14,275,16],[175,16,275,18],[175,21,275,23,"interceptor"],[175,32,275,18],[175,35,275,37,"getData"],[175,42,275,18],[175,43,275,45,"requestId"],[175,52,275,18],[175,53,275,11],[176,0,275,57,"base64Encoded"],[176,10,275,57,"base64Encoded"],[176,23,275,70],[176,25,275,72],[177,0,275,11],[177,9,275,4],[178,0,276,3],[181,36,278,29],[182,0,279,4],[182,12,279,8],[182,17,279,13,"_interceptor"],[182,29,279,4],[182,31,279,27],[183,0,280,6],[183,17,280,13],[183,22,280,18,"_interceptor"],[183,34,280,6],[184,0,281,5],[184,9,279,4],[184,15,281,11],[185,0,282,6],[185,16,282,12,"Error"],[185,21,282,17],[185,22,282,18],[185,52,282,17],[185,53,282,6],[186,0,283,5],[187,0,284,3],[191,4,254,27,"InspectorAgent"],[191,18],[193,0,254,6,"NetworkAgent"],[193,2,254,6,"NetworkAgent"],[193,14],[193,15,255,9,"DOMAIN"],[193,21],[193,24,255,18],[193,33],[194,0,287,0,"module"],[194,2,287,0,"module"],[194,8,287,6],[194,9,287,7,"exports"],[194,16,287,0],[194,19,287,17,"NetworkAgent"],[194,31,287,0]]},"type":"js/module"}]}