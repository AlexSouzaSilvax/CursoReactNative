{"dependencies":[{"name":"react","data":{"isAsync":false}},{"name":"./../../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useScreens = useScreens;\n  exports.screensEnabled = screensEnabled;\n  exports.ScreenContainer = exports.Screen = exports.NativeScreenContainer = exports.NativeScreen = void 0;\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../../react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n\n  var _jsxFileName = \"/home/alex/Documentos/CursoReactNative/node_modules/react-native-screens/src/screens.native.js\";\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\n  function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  var _components = {\n    Screen: {\n      displayName: \"Screen\"\n    },\n    ScreenContainer: {\n      displayName: \"ScreenContainer\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/alex/Documentos/CursoReactNative/node_modules/react-native-screens/src/screens.native.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var USE_SCREENS = false;\n\n  var getViewManagerConfigCompat = function getViewManagerConfigCompat(name) {\n    return typeof _reactNative.UIManager.getViewManagerConfig !== 'undefined' ? _reactNative.UIManager.getViewManagerConfig(name) : _reactNative.UIManager[name];\n  };\n\n  function useScreens() {\n    var shouldUseScreens = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    USE_SCREENS = shouldUseScreens;\n\n    if (USE_SCREENS && !getViewManagerConfigCompat('RNSScreen')) {\n      console.error(\"Screen native module hasn't been linked. Please check the react-native-screens README for more details\");\n    }\n  }\n\n  function screensEnabled() {\n    return USE_SCREENS;\n  }\n\n  var NativeScreen = (0, _reactNative.requireNativeComponent)('RNSScreen', null);\n  exports.NativeScreen = NativeScreen;\n\n  var AnimatedNativeScreen = _reactNative.Animated.createAnimatedComponent(NativeScreen);\n\n  var NativeScreenContainer = (0, _reactNative.requireNativeComponent)('RNSScreenContainer', null);\n  exports.NativeScreenContainer = NativeScreenContainer;\n\n  var Screen = function (_React$Component) {\n    _inherits(Screen, _React$Component);\n\n    function Screen() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      _classCallCheck(this, Screen);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Screen)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n      _this.setRef = function (ref) {\n        _this._ref = ref;\n        _this.props.onComponentRef && _this.props.onComponentRef(ref);\n      };\n\n      return _this;\n    }\n\n    _createClass(Screen, [{\n      key: \"setNativeProps\",\n      value: function setNativeProps(props) {\n        this._ref.setNativeProps(props);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        if (!USE_SCREENS) {\n          var _this$props = this.props,\n              active = _this$props.active,\n              onComponentRef = _this$props.onComponentRef,\n              props = _objectWithoutProperties(_this$props, [\"active\", \"onComponentRef\"]);\n\n          return _react.default.createElement(_reactNative.Animated.View, _extends({}, props, {\n            ref: this.setRef,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            }\n          }));\n        } else {\n          var _this$props2 = this.props,\n              style = _this$props2.style,\n              children = _this$props2.children,\n              rest = _objectWithoutProperties(_this$props2, [\"style\", \"children\"]);\n\n          return _react.default.createElement(AnimatedNativeScreen, _extends({}, rest, {\n            ref: this.setRef,\n            style: _reactNative.StyleSheet.absoluteFill,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            }\n          }), _react.default.createElement(_reactNative.Animated.View, {\n            style: style,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            }\n          }, children));\n        }\n      }\n    }]);\n\n    return Screen;\n  }(_react.default.Component);\n\n  exports.Screen = Screen;\n  exports.Screen = Screen = _wrapComponent(\"Screen\")(Screen);\n\n  var ScreenContainer = function (_React$Component2) {\n    _inherits(ScreenContainer, _React$Component2);\n\n    function ScreenContainer() {\n      _classCallCheck(this, ScreenContainer);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(ScreenContainer).apply(this, arguments));\n    }\n\n    _createClass(ScreenContainer, [{\n      key: \"render\",\n      value: function render() {\n        if (!USE_SCREENS) {\n          return _react.default.createElement(_reactNative.View, _extends({}, this.props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            }\n          }));\n        } else {\n          return _react.default.createElement(NativeScreenContainer, _extends({}, this.props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            }\n          }));\n        }\n      }\n    }]);\n\n    return ScreenContainer;\n  }(_react.default.Component);\n\n  exports.ScreenContainer = ScreenContainer;\n  exports.ScreenContainer = ScreenContainer = _wrapComponent(\"ScreenContainer\")(ScreenContainer);\n});","map":[[9,0,1,0],[13,0,2,0],[63,0,10,0],[63,6,10,4,"USE_SCREENS"],[63,17,10,15],[63,20,10,18],[63,25,10,0],[65,0,14,0],[65,6,14,6,"getViewManagerConfigCompat"],[65,32,14,32],[65,35,14,35],[65,44,14,6,"getViewManagerConfigCompat"],[65,70,14,35],[65,71,14,35,"name"],[65,75,14,39],[66,0,14,39],[66,11,15,2],[66,18,15,9,"UIManager"],[66,41,15,19,"getViewManagerConfig"],[66,61,15,2],[66,66,15,44],[66,77,15,2],[66,80,16,6,"UIManager"],[66,103,16,16,"getViewManagerConfig"],[66,123,16,6],[66,124,16,37,"name"],[66,128,16,6],[66,129,15,2],[66,132,17,6,"UIManager"],[66,155,17,16,"name"],[66,159,17,6],[66,160,14,39],[67,0,14,39],[67,3,14,0],[69,0,19,7],[69,11,19,16,"useScreens"],[69,21,19,7],[69,24,19,52],[70,0,19,52],[70,8,19,27,"shouldUseScreens"],[70,24,19,52],[70,95,19,46],[70,99,19,52],[71,0,20,2,"USE_SCREENS"],[71,4,20,2,"USE_SCREENS"],[71,15,20,13],[71,18,20,16,"shouldUseScreens"],[71,34,20,2],[73,0,21,2],[73,8,21,6,"USE_SCREENS"],[73,19,21,17],[73,23,21,21],[73,24,21,22,"getViewManagerConfigCompat"],[73,50,21,48],[73,51,21,49],[73,62,21,48],[73,63,21,2],[73,65,21,63],[74,0,22,4,"console"],[74,6,22,4,"console"],[74,13,22,11],[74,14,22,12,"error"],[74,19,22,4],[75,0,25,3],[76,0,26,1],[78,0,28,7],[78,11,28,16,"screensEnabled"],[78,25,28,7],[78,28,28,33],[79,0,29,2],[79,11,29,9,"USE_SCREENS"],[79,22,29,2],[80,0,30,1],[82,0,32,7],[82,6,32,13,"NativeScreen"],[82,18,32,25],[82,21,32,28],[82,62,32,51],[82,73,32,28],[82,75,32,64],[82,79,32,28],[82,80,32,7],[85,0,34,0],[85,6,34,6,"AnimatedNativeScreen"],[85,26,34,26],[85,29,34,29,"Animated"],[85,51,34,38,"createAnimatedComponent"],[85,74,34,29],[85,75,34,62,"NativeScreen"],[85,87,34,29],[85,88,34,0],[87,0,36,7],[87,6,36,13,"NativeScreenContainer"],[87,27,36,34],[87,30,36,37],[87,71,37,2],[87,91,36,37],[87,93,38,2],[87,97,36,37],[87,98,36,7],[90,6,41,13,"Screen"],[90,12],[106,12,45,2,"setRef"],[106,18],[106,21,45,11],[106,31,45,11,"ref"],[106,34,45,14],[106,36,45,18],[107,0,46,4],[107,14,46,9,"_ref"],[107,18,46,4],[107,21,46,16,"ref"],[107,24,46,4],[108,0,47,4],[108,14,47,9,"props"],[108,19,47,4],[108,20,47,15,"onComponentRef"],[108,34,47,4],[108,38,47,33],[108,44,47,38,"props"],[108,49,47,33],[108,50,47,44,"onComponentRef"],[108,64,47,33],[108,65,47,59,"ref"],[108,68,47,33],[108,69,47,4],[109,0,48,3],[109,7],[116,37,42,17,"props"],[116,42],[116,44,42,24],[117,0,43,4],[117,13,43,9,"_ref"],[117,17,43,4],[117,18,43,14,"setNativeProps"],[117,32,43,4],[117,33,43,29,"props"],[117,38,43,4],[118,0,44,3],[121,31,49,11],[122,0,50,4],[122,12,50,8],[122,13,50,9,"USE_SCREENS"],[122,24,50,4],[122,26,50,22],[123,0,50,22],[123,28,56,51],[123,33,56,56,"props"],[123,38,50,22],[124,0,50,22],[124,14,56,14,"active"],[124,20,50,22],[124,35,56,14,"active"],[124,41,50,22],[125,0,50,22],[125,14,56,22,"onComponentRef"],[125,28,50,22],[125,43,56,22,"onComponentRef"],[125,57,50,22],[126,0,50,22],[126,14,56,41,"props"],[126,19,50,22],[128,0,58,6],[128,17,58,13],[128,46,58,14],[128,67,58,13],[128,68,58,23],[128,72,58,13],[128,87,58,32,"props"],[128,92,58,13],[129,0,58,39],[129,12,58,39],[129,15,58,42],[129,17,58,44],[129,22,58,49,"setRef"],[129,28,58,13],[130,0,58,13],[131,0,58,13],[132,0,58,13],[133,0,58,13],[134,0,58,13],[134,13,58,6],[135,0,59,5],[135,9,50,4],[135,15,59,11],[136,0,59,11],[136,29,60,43],[136,34,60,48,"props"],[136,39,59,11],[137,0,59,11],[137,14,60,14,"style"],[137,19,59,11],[137,35,60,14,"style"],[137,40,59,11],[138,0,59,11],[138,14,60,21,"children"],[138,22,59,11],[138,38,60,21,"children"],[138,46,59,11],[139,0,59,11],[139,14,60,34,"rest"],[139,18,59,11],[141,0,61,6],[141,17,62,8],[141,46,62,9],[141,66,62,8],[141,81,63,14,"rest"],[141,85,62,8],[142,0,64,10],[142,12,64,10],[142,15,64,13],[142,17,64,15],[142,22,64,20,"setRef"],[142,28,62,8],[143,0,65,10],[143,12,65,10],[143,17,65,15],[143,19,65,17,"StyleSheet"],[143,43,65,28,"absoluteFill"],[143,55,62,8],[144,0,62,8],[145,0,62,8],[146,0,62,8],[147,0,62,8],[148,0,62,8],[148,14,73,10],[148,43,73,11],[148,64,73,10],[148,65,73,20],[148,69,73,10],[149,0,73,25],[149,12,73,25],[149,17,73,30],[149,19,73,32,"style"],[149,24,73,10],[150,0,73,10],[151,0,73,10],[152,0,73,10],[153,0,73,10],[154,0,73,10],[154,13,73,40,"children"],[154,21,73,10],[154,22,62,8],[154,23,61,6],[155,0,76,5],[156,0,77,3],[160,4,41,28,"React"],[160,19,41,34,"Component"],[160,28],[165,6,80,13,"ScreenContainer"],[165,21],[176,31,81,11],[177,0,82,4],[177,12,82,8],[177,13,82,9,"USE_SCREENS"],[177,24,82,4],[177,26,82,22],[178,0,83,6],[178,17,83,13],[178,46,83,14],[178,63,83,13],[178,78,83,23],[178,83,83,28,"props"],[178,88,83,13],[179,0,83,13],[180,0,83,13],[181,0,83,13],[182,0,83,13],[183,0,83,13],[183,13,83,6],[184,0,84,5],[184,9,82,4],[184,15,84,11],[185,0,85,6],[185,17,85,13],[185,46,85,14],[185,67,85,13],[185,82,85,40],[185,87,85,45,"props"],[185,92,85,13],[186,0,85,13],[187,0,85,13],[188,0,85,13],[189,0,85,13],[190,0,85,13],[190,13,85,6],[191,0,86,5],[192,0,87,3],[196,4,80,37,"React"],[196,19,80,43,"Component"],[196,28]]},"type":"js/module"}]}