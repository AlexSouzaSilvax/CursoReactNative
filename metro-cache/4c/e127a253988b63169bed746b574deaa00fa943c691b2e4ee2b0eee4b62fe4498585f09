{"dependencies":[{"name":"uri-parser","data":{"isAsync":false}},{"name":"url-join","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"react-native/Libraries/Image/AssetRegistry","data":{"isAsync":false}},{"name":"react-native/Libraries/Image/AssetSourceResolver","data":{"isAsync":false}},{"name":"react-native/Libraries/Image/resolveAssetSource","data":{"isAsync":false}},{"name":"expo-file-system","data":{"isAsync":false}},{"name":"expo-constants","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _uriParser = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"uri-parser\"));\n\n  var _urlJoin = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"url-join\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n\n  var _AssetRegistry = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"react-native/Libraries/Image/AssetRegistry\"));\n\n  var _AssetSourceResolver = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"react-native/Libraries/Image/AssetSourceResolver\"));\n\n  var _resolveAssetSource = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"react-native/Libraries/Image/resolveAssetSource\"));\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  var FS, Constants;\n\n  try {\n    FS = _$$_REQUIRE(_dependencyMap[6], \"expo-file-system\").FileSystem;\n  } catch (error) {\n    throw new Error('`expo-asset` requires `expo-file-system` package to be installed and linked.');\n  }\n\n  try {\n    Constants = _$$_REQUIRE(_dependencyMap[7], \"expo-constants\").Constants;\n  } catch (error) {\n    throw new Error('`expo-asset` requires `expo-constants` package to be installed and linked.');\n  }\n\n  var parser = new _uriParser.default.Parser();\n  var bundledAssets = new Set(FS.bundledAssets || []);\n  var assetMapOverride = Constants.manifest && Constants.manifest.assetMapOverride;\n\n  var getManifestBaseUrl = function getManifestBaseUrl(manifestUrl) {\n    var urlComponents = parser.parse(manifestUrl);\n\n    if (urlComponents.protocol === 'exp') {\n      urlComponents.protocol = 'http';\n    } else if (urlComponents.protocol === 'exps') {\n      urlComponents.protocol = 'https';\n    }\n\n    urlComponents.relative = urlComponents.directory;\n    return parser.format(urlComponents);\n  };\n\n  var manifestBaseUrl = Constants.experienceUrl ? getManifestBaseUrl(Constants.experienceUrl) : null;\n\n  var resolveIfRelative = function resolveIfRelative(uri) {\n    var uriComponents = parser.parse(uri);\n\n    if (uriComponents.protocol === '' && manifestBaseUrl) {\n      return (0, _urlJoin.default)(manifestBaseUrl, uri.replace(/^\\.?\\//, ''));\n    } else {\n      return uri;\n    }\n  };\n\n  var pickScale = function pickScale(originalMeta) {\n    var meta = assetMapOverride ? _objectSpread({}, originalMeta, assetMapOverride[originalMeta.hash]) : originalMeta;\n    var scale = meta.scales.length > 1 ? _AssetSourceResolver.default.pickScale(meta.scales, _reactNative.PixelRatio.get()) : 1;\n    var index = meta.scales.findIndex(function (s) {\n      return s === scale;\n    });\n    var hash = meta.fileHashes ? meta.fileHashes[index] || meta.fileHashes[0] : meta.hash;\n    var uri = meta.fileUris ? meta.fileUris[index] || meta.fileUris[0] : meta.uri;\n    var suffix = '/' + meta.name + (scale === 1 ? '' : '@' + scale + 'x') + '.' + meta.type + '?platform=' + _reactNative.Platform.OS + '&hash=' + meta.hash;\n\n    if (uri) {\n      return {\n        uri: resolveIfRelative(uri),\n        hash: hash\n      };\n    }\n\n    var assetUrlOverride = Constants.manifest && Constants.manifest.assetUrlOverride;\n\n    if (assetUrlOverride) {\n      return {\n        uri: resolveIfRelative((0, _urlJoin.default)(assetUrlOverride, hash)),\n        hash: hash\n      };\n    }\n\n    if (/^https?:/.test(meta.httpServerLocation)) {\n      return {\n        uri: meta.httpServerLocation + suffix,\n        hash: hash\n      };\n    }\n\n    if (Constants.manifest && Constants.manifest.developer) {\n      return {\n        uri: Constants.manifest.bundleUrl.match(/^https?:\\/\\/.*?\\//)[0] + meta.httpServerLocation.replace(/^\\/?/, '') + suffix,\n        hash: hash\n      };\n    }\n\n    return {\n      uri: 'https://d1wp6m56sqw74a.cloudfront.net/~assets/' + hash,\n      hash: hash\n    };\n  };\n\n  var getUriInBundle = function getUriInBundle(hash, type) {\n    var assetName = 'asset_' + hash + (type ? '.' + type : '');\n\n    if (__DEV__ || Constants.appOwnership !== 'standalone' || !bundledAssets.has(assetName)) {\n      return null;\n    }\n\n    return \"\" + FS.bundleDirectory + assetName;\n  };\n\n  var Asset = function () {\n    function Asset(_ref) {\n      var name = _ref.name,\n          type = _ref.type,\n          hash = _ref.hash,\n          uri = _ref.uri,\n          width = _ref.width,\n          height = _ref.height;\n\n      _classCallCheck(this, Asset);\n\n      this.name = name;\n      this.type = type;\n      this.hash = hash;\n      this.uri = uri;\n      this.localUri = getUriInBundle(hash, type);\n\n      if (typeof width === 'number') {\n        this.width = width;\n      }\n\n      if (typeof height === 'number') {\n        this.height = height;\n      }\n\n      this.downloading = false;\n      this.downloaded = !!this.localUri;\n      this.downloadCallbacks = [];\n    }\n\n    _createClass(Asset, [{\n      key: \"downloadAsync\",\n      value: function downloadAsync() {\n        var _this = this;\n\n        var localUri, exists, md5, _ref2, _ref3;\n\n        return regeneratorRuntime.async(function downloadAsync$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.downloaded) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                if (!this.downloading) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 5;\n                return regeneratorRuntime.awrap(new Promise(function (resolve, reject) {\n                  return _this.downloadCallbacks.push({\n                    resolve: resolve,\n                    reject: reject\n                  });\n                }));\n\n              case 5:\n                return _context.abrupt(\"return\");\n\n              case 6:\n                this.downloading = true;\n                _context.prev = 7;\n                localUri = FS.cacheDirectory + \"ExponentAsset-\" + this.hash + \".\" + this.type;\n                _context.next = 11;\n                return regeneratorRuntime.awrap(FS.getInfoAsync(localUri, {\n                  cache: true,\n                  md5: true\n                }));\n\n              case 11:\n                _ref2 = _context.sent;\n                exists = _ref2.exists;\n                md5 = _ref2.md5;\n\n                if (!(!exists || md5 !== this.hash)) {\n                  _context.next = 21;\n                  break;\n                }\n\n                _context.next = 17;\n                return regeneratorRuntime.awrap(FS.downloadAsync(this.uri, localUri, {\n                  cache: true,\n                  md5: true\n                }));\n\n              case 17:\n                _ref3 = _context.sent;\n                md5 = _ref3.md5;\n\n                if (!(md5 !== this.hash)) {\n                  _context.next = 21;\n                  break;\n                }\n\n                throw new Error(\"Downloaded file for asset '\" + this.name + \".\" + this.type + \"' \" + (\"Located at \" + this.uri + \" \") + \"failed MD5 integrity check\");\n\n              case 21:\n                this.localUri = localUri;\n                this.downloaded = true;\n                this.downloadCallbacks.forEach(function (_ref4) {\n                  var resolve = _ref4.resolve;\n                  return resolve();\n                });\n                _context.next = 30;\n                break;\n\n              case 26:\n                _context.prev = 26;\n                _context.t0 = _context[\"catch\"](7);\n                this.downloadCallbacks.forEach(function (_ref5) {\n                  var reject = _ref5.reject;\n                  return reject(_context.t0);\n                });\n                throw _context.t0;\n\n              case 30:\n                _context.prev = 30;\n                this.downloading = false;\n                this.downloadCallbacks = [];\n                return _context.finish(30);\n\n              case 34:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, this, [[7, 26, 30, 34]]);\n      }\n    }], [{\n      key: \"loadAsync\",\n      value: function loadAsync(moduleId) {\n        var moduleIds = typeof moduleId === 'number' ? [moduleId] : moduleId;\n        return Promise.all(moduleIds.map(function (m) {\n          return Asset.fromModule(m).downloadAsync();\n        }));\n      }\n    }, {\n      key: \"fromModule\",\n      value: function fromModule(moduleId) {\n        var meta = _AssetRegistry.default.getAssetByID(moduleId);\n\n        return Asset.fromMetadata(meta);\n      }\n    }, {\n      key: \"fromMetadata\",\n      value: function fromMetadata(meta) {\n        var metaHash = meta.hash;\n\n        if (Asset.byHash[metaHash]) {\n          return Asset.byHash[metaHash];\n        }\n\n        var _pickScale = pickScale(meta),\n            uri = _pickScale.uri,\n            hash = _pickScale.hash;\n\n        var asset = new Asset({\n          name: meta.name,\n          type: meta.type,\n          hash: hash,\n          uri: uri,\n          width: meta.width,\n          height: meta.height\n        });\n        Asset.byHash[metaHash] = asset;\n        return asset;\n      }\n    }]);\n\n    return Asset;\n  }();\n\n  exports.default = Asset;\n  Asset.byHash = {};\n\n  _resolveAssetSource.default.setCustomSourceTransformer(function (resolver) {\n    var asset = Asset.fromMetadata(resolver.asset);\n    return resolver.fromSource(asset.downloaded ? asset.localUri : asset.uri);\n  });\n});","map":[[7,0,1,0],[9,0,2,0],[11,0,3,0],[13,0,4,0],[15,0,5,0],[17,0,6,0],[31,0,8,0],[31,6,8,4,"FS"],[31,8,8,0],[31,10,8,8,"Constants"],[31,19,8,0],[33,0,10,0],[33,6,10,4],[34,0,11,2,"FS"],[34,4,11,2,"FS"],[34,6,11,4],[34,9,11,7,"require"],[34,20,11,14],[34,59,11,7],[34,60,11,35,"FileSystem"],[34,70,11,2],[35,0,12,1],[35,3,10,0],[35,4,12,2],[35,11,12,9,"error"],[35,16,12,2],[35,18,12,16],[36,0,13,2],[36,10,13,8],[36,14,13,12,"Error"],[36,19,13,8],[36,20,13,18],[36,98,13,8],[36,99,13,2],[37,0,14,1],[39,0,16,0],[39,6,16,4],[40,0,17,2,"Constants"],[40,4,17,2,"Constants"],[40,13,17,11],[40,16,17,14,"require"],[40,27,17,21],[40,64,17,14],[40,65,17,40,"Constants"],[40,74,17,2],[41,0,18,1],[41,3,16,0],[41,4,18,2],[41,11,18,9,"error"],[41,16,18,2],[41,18,18,16],[42,0,19,2],[42,10,19,8],[42,14,19,12,"Error"],[42,19,19,8],[42,20,19,18],[42,96,19,8],[42,97,19,2],[43,0,20,1],[45,0,22,0],[45,6,22,6,"parser"],[45,12,22,12],[45,15,22,15],[45,19,22,19,"uriparser"],[45,38,22,29,"Parser"],[45,44,22,15],[45,46,22,0],[46,0,25,0],[46,6,25,6,"bundledAssets"],[46,19,25,19],[46,22,25,22],[46,26,25,26,"Set"],[46,29,25,22],[46,30,25,30,"FS"],[46,32,25,32],[46,33,25,33,"bundledAssets"],[46,46,25,30],[46,50,25,50],[46,52,25,22],[46,53,25,0],[47,0,28,0],[47,6,28,6,"assetMapOverride"],[47,22,28,22],[47,25,28,25,"Constants"],[47,34,28,34],[47,35,28,35,"manifest"],[47,43,28,25],[47,47,28,47,"Constants"],[47,56,28,56],[47,57,28,57,"manifest"],[47,65,28,47],[47,66,28,66,"assetMapOverride"],[47,82,28,0],[49,0,31,0],[49,6,31,6,"getManifestBaseUrl"],[49,24,31,24],[49,27,31,27],[49,36,31,6,"getManifestBaseUrl"],[49,54,31,27],[49,55,31,27,"manifestUrl"],[49,66,31,38],[49,68,31,42],[50,0,32,2],[50,8,32,8,"urlComponents"],[50,21,32,21],[50,24,32,24,"parser"],[50,30,32,30],[50,31,32,31,"parse"],[50,36,32,24],[50,37,32,37,"manifestUrl"],[50,48,32,24],[50,49,32,2],[52,0,35,2],[52,8,35,6,"urlComponents"],[52,21,35,19],[52,22,35,20,"protocol"],[52,30,35,6],[52,35,35,33],[52,40,35,2],[52,42,35,40],[53,0,36,4,"urlComponents"],[53,6,36,4,"urlComponents"],[53,19,36,17],[53,20,36,18,"protocol"],[53,28,36,4],[53,31,36,29],[53,37,36,4],[54,0,37,3],[54,5,35,2],[54,11,37,9],[54,15,37,13,"urlComponents"],[54,28,37,26],[54,29,37,27,"protocol"],[54,37,37,13],[54,42,37,40],[54,48,37,9],[54,50,37,48],[55,0,38,4,"urlComponents"],[55,6,38,4,"urlComponents"],[55,19,38,17],[55,20,38,18,"protocol"],[55,28,38,4],[55,31,38,29],[55,38,38,4],[56,0,39,3],[58,0,42,2,"urlComponents"],[58,4,42,2,"urlComponents"],[58,17,42,15],[58,18,42,16,"relative"],[58,26,42,2],[58,29,42,27,"urlComponents"],[58,42,42,40],[58,43,42,41,"directory"],[58,52,42,2],[59,0,43,2],[59,11,43,9,"parser"],[59,17,43,15],[59,18,43,16,"format"],[59,24,43,9],[59,25,43,23,"urlComponents"],[59,38,43,9],[59,39,43,2],[60,0,44,1],[60,3,31,0],[62,0,47,0],[62,6,47,6,"manifestBaseUrl"],[62,21,47,21],[62,24,47,24,"Constants"],[62,33,47,33],[62,34,47,34,"experienceUrl"],[62,47,47,24],[62,50,48,4,"getManifestBaseUrl"],[62,68,48,22],[62,69,48,23,"Constants"],[62,78,48,32],[62,79,48,33,"experienceUrl"],[62,92,48,22],[62,93,47,24],[62,96,49,4],[62,100,47,0],[64,0,52,0],[64,6,52,6,"resolveIfRelative"],[64,23,52,23],[64,26,52,26],[64,35,52,6,"resolveIfRelative"],[64,52,52,26],[64,53,52,26,"uri"],[64,56,52,29],[64,58,52,33],[65,0,53,2],[65,8,53,8,"uriComponents"],[65,21,53,21],[65,24,53,24,"parser"],[65,30,53,30],[65,31,53,31,"parse"],[65,36,53,24],[65,37,53,37,"uri"],[65,40,53,24],[65,41,53,2],[67,0,54,2],[67,8,54,6,"uriComponents"],[67,21,54,19],[67,22,54,20,"protocol"],[67,30,54,6],[67,35,54,33],[67,37,54,6],[67,41,54,39,"manifestBaseUrl"],[67,56,54,2],[67,58,54,56],[68,0,56,4],[68,13,56,11],[68,35,56,19,"manifestBaseUrl"],[68,50,56,11],[68,52,56,36,"uri"],[68,55,56,39],[68,56,56,40,"replace"],[68,63,56,36],[68,64,56,48],[68,72,56,36],[68,74,56,58],[68,76,56,36],[68,77,56,11],[68,78,56,4],[69,0,57,3],[69,5,54,2],[69,11,57,9],[70,0,58,4],[70,13,58,11,"uri"],[70,16,58,4],[71,0,59,3],[72,0,60,1],[72,3,52,0],[74,0,64,0],[74,6,64,6,"pickScale"],[74,15,64,15],[74,18,64,18],[74,27,64,6,"pickScale"],[74,36,64,18],[74,37,64,18,"originalMeta"],[74,49,64,30],[74,51,64,34],[75,0,66,2],[75,8,66,8,"meta"],[75,12,66,12],[75,15,66,15,"assetMapOverride"],[75,31,66,31],[75,52,67,11,"originalMeta"],[75,64,66,31],[75,66,67,28,"assetMapOverride"],[75,82,67,44],[75,83,67,45,"originalMeta"],[75,95,67,57],[75,96,67,58,"hash"],[75,100,67,44],[75,101,66,31],[75,105,68,6,"originalMeta"],[75,117,66,2],[76,0,72,2],[76,8,72,8,"scale"],[76,13,72,13],[76,16,73,4,"meta"],[76,20,73,8],[76,21,73,9,"scales"],[76,27,73,4],[76,28,73,16,"length"],[76,34,73,4],[76,37,73,25],[76,38,73,4],[76,41,73,29,"AssetSourceResolver"],[76,70,73,49,"pickScale"],[76,79,73,29],[76,80,73,59,"meta"],[76,84,73,63],[76,85,73,64,"scales"],[76,91,73,29],[76,93,73,72,"PixelRatio"],[76,117,73,83,"get"],[76,120,73,72],[76,122,73,29],[76,123,73,4],[76,126,73,92],[76,127,72,2],[77,0,74,2],[77,8,74,8,"index"],[77,13,74,13],[77,16,74,16,"meta"],[77,20,74,20],[77,21,74,21,"scales"],[77,27,74,16],[77,28,74,28,"findIndex"],[77,37,74,16],[77,38,74,38],[77,48,74,38,"s"],[77,49,74,39],[78,0,74,39],[78,13,74,43,"s"],[78,14,74,44],[78,19,74,49,"scale"],[78,24,74,39],[79,0,74,39],[79,5,74,16],[79,6,74,2],[80,0,75,2],[80,8,75,8,"hash"],[80,12,75,12],[80,15,75,15,"meta"],[80,19,75,19],[80,20,75,20,"fileHashes"],[80,30,75,15],[80,33,75,33,"meta"],[80,37,75,37],[80,38,75,38,"fileHashes"],[80,48,75,33],[80,49,75,49,"index"],[80,54,75,33],[80,59,75,59,"meta"],[80,63,75,63],[80,64,75,64,"fileHashes"],[80,74,75,59],[80,75,75,75],[80,76,75,59],[80,77,75,15],[80,80,75,80,"meta"],[80,84,75,84],[80,85,75,85,"hash"],[80,89,75,2],[81,0,76,2],[81,8,76,8,"uri"],[81,11,76,11],[81,14,76,14,"meta"],[81,18,76,18],[81,19,76,19,"fileUris"],[81,27,76,14],[81,30,76,30,"meta"],[81,34,76,34],[81,35,76,35,"fileUris"],[81,43,76,30],[81,44,76,44,"index"],[81,49,76,30],[81,54,76,54,"meta"],[81,58,76,58],[81,59,76,59,"fileUris"],[81,67,76,54],[81,68,76,68],[81,69,76,54],[81,70,76,14],[81,73,76,73,"meta"],[81,77,76,77],[81,78,76,78,"uri"],[81,81,76,2],[82,0,78,2],[82,8,78,8,"suffix"],[82,14,78,14],[82,17,79,4],[82,23,80,4,"meta"],[82,27,80,8],[82,28,80,9,"name"],[82,32,79,4],[82,36,81,5,"scale"],[82,41,81,10],[82,46,81,15],[82,47,81,5],[82,50,81,19],[82,52,81,5],[82,55,81,24],[82,61,81,30,"scale"],[82,66,81,24],[82,69,81,38],[82,72,79,4],[82,76,82,4],[82,79,79,4],[82,82,83,4,"meta"],[82,86,83,8],[82,87,83,9,"type"],[82,91,79,4],[82,94,84,4],[82,106,79,4],[82,109,85,4,"Platform"],[82,131,85,13,"OS"],[82,133,79,4],[82,136,86,4],[82,144,79,4],[82,147,87,4,"meta"],[82,151,87,8],[82,152,87,9,"hash"],[82,156,78,2],[84,0,90,2],[84,8,90,6,"uri"],[84,11,90,2],[84,13,90,11],[85,0,91,4],[85,13,91,11],[86,0,92,6,"uri"],[86,8,92,6,"uri"],[86,11,92,9],[86,13,92,11,"resolveIfRelative"],[86,30,92,28],[86,31,92,29,"uri"],[86,34,92,28],[86,35,91,11],[87,0,93,6,"hash"],[87,8,93,6,"hash"],[87,12,93,10],[87,14,93,6,"hash"],[88,0,91,11],[88,7,91,4],[89,0,95,3],[91,0,98,2],[91,8,98,8,"assetUrlOverride"],[91,24,98,24],[91,27,98,27,"Constants"],[91,36,98,36],[91,37,98,37,"manifest"],[91,45,98,27],[91,49,98,49,"Constants"],[91,58,98,58],[91,59,98,59,"manifest"],[91,67,98,49],[91,68,98,68,"assetUrlOverride"],[91,84,98,2],[93,0,99,2],[93,8,99,6,"assetUrlOverride"],[93,24,99,2],[93,26,99,24],[94,0,100,4],[94,13,100,11],[95,0,101,6,"uri"],[95,8,101,6,"uri"],[95,11,101,9],[95,13,101,11,"resolveIfRelative"],[95,30,101,28],[95,31,101,29],[95,53,101,37,"assetUrlOverride"],[95,69,101,29],[95,71,101,55,"hash"],[95,75,101,29],[95,76,101,28],[95,77,100,11],[96,0,102,6,"hash"],[96,8,102,6,"hash"],[96,12,102,10],[96,14,102,6,"hash"],[97,0,100,11],[97,7,100,4],[98,0,104,3],[100,0,106,2],[100,8,106,6],[100,19,106,17,"test"],[100,23,106,6],[100,24,106,22,"meta"],[100,28,106,26],[100,29,106,27,"httpServerLocation"],[100,47,106,6],[100,48,106,2],[100,50,106,48],[101,0,109,4],[101,13,109,11],[102,0,110,6,"uri"],[102,8,110,6,"uri"],[102,11,110,9],[102,13,110,11,"meta"],[102,17,110,15],[102,18,110,16,"httpServerLocation"],[102,36,110,11],[102,39,110,37,"suffix"],[102,45,109,11],[103,0,111,6,"hash"],[103,8,111,6,"hash"],[103,12,111,10],[103,14,111,6,"hash"],[104,0,109,11],[104,7,109,4],[105,0,113,3],[107,0,115,2],[107,8,115,6,"Constants"],[107,17,115,15],[107,18,115,16,"manifest"],[107,26,115,6],[107,30,115,28,"Constants"],[107,39,115,37],[107,40,115,38,"manifest"],[107,48,115,28],[107,49,115,47,"developer"],[107,58,115,2],[107,60,115,58],[108,0,117,4],[108,13,117,11],[109,0,118,6,"uri"],[109,8,118,6,"uri"],[109,11,118,9],[109,13,119,8,"Constants"],[109,22,119,17],[109,23,119,18,"manifest"],[109,31,119,8],[109,32,119,27,"bundleUrl"],[109,41,119,8],[109,42,119,37,"match"],[109,47,119,8],[109,48,119,43],[109,67,119,8],[109,69,119,64],[109,70,119,8],[109,74,120,8,"meta"],[109,78,120,12],[109,79,120,13,"httpServerLocation"],[109,97,120,8],[109,98,120,32,"replace"],[109,105,120,8],[109,106,120,40],[109,112,120,8],[109,114,120,48],[109,116,120,8],[109,117,119,8],[109,120,121,8,"suffix"],[109,126,117,11],[110,0,122,6,"hash"],[110,8,122,6,"hash"],[110,12,122,10],[110,14,122,6,"hash"],[111,0,117,11],[111,7,117,4],[112,0,124,3],[114,0,127,2],[114,11,127,9],[115,0,128,4,"uri"],[115,6,128,4,"uri"],[115,9,128,7],[115,11,128,9],[115,62,128,60,"hash"],[115,66,127,9],[116,0,129,4,"hash"],[116,6,129,4,"hash"],[116,10,129,8],[116,12,129,4,"hash"],[117,0,127,9],[117,5,127,2],[118,0,131,1],[118,3,64,0],[120,0,135,0],[120,6,135,6,"getUriInBundle"],[120,20,135,20],[120,23,135,23],[120,32,135,6,"getUriInBundle"],[120,46,135,23],[120,47,135,24,"hash"],[120,51,135,23],[120,53,135,30,"type"],[120,57,135,23],[120,59,135,39],[121,0,136,2],[121,8,136,8,"assetName"],[121,17,136,17],[121,20,136,20],[121,31,136,31,"hash"],[121,35,136,20],[121,39,136,39,"type"],[121,43,136,43],[121,46,136,46],[121,52,136,52,"type"],[121,56,136,43],[121,59,136,59],[121,61,136,20],[121,62,136,2],[123,0,137,2],[123,8,137,6,"__DEV__"],[123,15,137,13],[123,19,137,17,"Constants"],[123,28,137,26],[123,29,137,27,"appOwnership"],[123,41,137,17],[123,46,137,44],[123,58,137,6],[123,62,137,60],[123,63,137,61,"bundledAssets"],[123,76,137,74],[123,77,137,75,"has"],[123,80,137,61],[123,81,137,79,"assetName"],[123,90,137,61],[123,91,137,2],[123,93,137,91],[124,0,138,4],[124,13,138,11],[124,17,138,4],[125,0,139,3],[127,0,140,2],[127,16,140,12,"FS"],[127,18,140,14],[127,19,140,15,"bundleDirectory"],[127,34,140,2],[127,37,140,33,"assetName"],[127,46,140,2],[128,0,141,1],[128,3,135,0],[130,6,143,21,"Asset"],[130,11],[131,0,146,2],[131,25,146,56],[132,0,146,56],[132,10,146,16,"name"],[132,14,146,56],[132,22,146,16,"name"],[132,26,146,56],[133,0,146,56],[133,10,146,22,"type"],[133,14,146,56],[133,22,146,22,"type"],[133,26,146,56],[134,0,146,56],[134,10,146,28,"hash"],[134,14,146,56],[134,22,146,28,"hash"],[134,26,146,56],[135,0,146,56],[135,10,146,34,"uri"],[135,13,146,56],[135,21,146,34,"uri"],[135,24,146,56],[136,0,146,56],[136,10,146,39,"width"],[136,15,146,56],[136,23,146,39,"width"],[136,28,146,56],[137,0,146,56],[137,10,146,46,"height"],[137,16,146,56],[137,24,146,46,"height"],[137,30,146,56],[139,0,146,56],[141,0,147,4],[141,11,147,9,"name"],[141,15,147,4],[141,18,147,16,"name"],[141,22,147,4],[142,0,148,4],[142,11,148,9,"type"],[142,15,148,4],[142,18,148,16,"type"],[142,22,148,4],[143,0,149,4],[143,11,149,9,"hash"],[143,15,149,4],[143,18,149,16,"hash"],[143,22,149,4],[144,0,150,4],[144,11,150,9,"uri"],[144,14,150,4],[144,17,150,15,"uri"],[144,20,150,4],[145,0,151,4],[145,11,151,9,"localUri"],[145,19,151,4],[145,22,151,20,"getUriInBundle"],[145,36,151,34],[145,37,151,35,"hash"],[145,41,151,34],[145,43,151,41,"type"],[145,47,151,34],[145,48,151,4],[147,0,152,4],[147,10,152,8],[147,17,152,15,"width"],[147,22,152,8],[147,27,152,25],[147,35,152,4],[147,37,152,35],[148,0,153,6],[148,13,153,11,"width"],[148,18,153,6],[148,21,153,19,"width"],[148,26,153,6],[149,0,154,5],[151,0,155,4],[151,10,155,8],[151,17,155,15,"height"],[151,23,155,8],[151,28,155,26],[151,36,155,4],[151,38,155,36],[152,0,156,6],[152,13,156,11,"height"],[152,19,156,6],[152,22,156,20,"height"],[152,28,156,6],[153,0,157,5],[155,0,159,4],[155,11,159,9,"downloading"],[155,22,159,4],[155,25,159,23],[155,30,159,4],[156,0,160,4],[156,11,160,9,"downloaded"],[156,21,160,4],[156,24,160,22],[156,25,160,23],[156,26,160,24],[156,31,160,29,"localUri"],[156,39,160,4],[157,0,161,4],[157,11,161,9,"downloadCallbacks"],[157,28,161,4],[157,31,161,29],[157,33,161,4],[158,0,162,3],[171,21,197,8],[171,26,197,13,"downloaded"],[171,36],[179,21,200,8],[179,26,200,13,"downloading"],[179,37],[185,48,201,12],[185,52,201,16,"Promise"],[185,59,201,12],[185,60,201,24],[185,70,201,25,"resolve"],[185,77,201,24],[185,79,201,34,"reject"],[185,85,201,24],[186,0,201,24],[186,25,201,45],[186,30,201,49],[186,31,201,50,"downloadCallbacks"],[186,48,201,45],[186,49,201,68,"push"],[186,53,201,45],[186,54,201,73],[187,0,201,75,"resolve"],[187,20,201,75,"resolve"],[187,27,201,82],[187,29,201,75,"resolve"],[187,36,201,73],[188,0,201,84,"reject"],[188,20,201,84,"reject"],[188,26,201,90],[188,28,201,84,"reject"],[189,0,201,73],[189,19,201,45],[189,20,201,24],[190,0,201,24],[190,17,201,12],[190,18],[196,0,204,4],[196,21,204,9,"downloading"],[196,32,204,4],[196,35,204,23],[196,39,204,4],[198,0,206,12,"localUri"],[198,16,206,12,"localUri"],[198,24],[198,27,206,26,"FS"],[198,29,206,28],[198,30,206,29,"cacheDirectory"],[198,44],[198,66,206,60],[198,71,206,65,"hash"],[198,75],[198,84,206,73],[198,89,206,78,"type"],[198,93],[200,48,208,31,"FS"],[200,50,208,33],[200,51,208,34,"getInfoAsync"],[200,63,208,31],[200,64,208,47,"localUri"],[200,72,208,31],[200,74,208,57],[201,0,209,8,"cache"],[201,18,209,8,"cache"],[201,23,209,13],[201,25,209,15],[201,29,208,57],[202,0,210,8,"md5"],[202,18,210,8,"md5"],[202,21,210,11],[202,23,210,13],[203,0,208,57],[203,17,208,31],[203,18],[207,0,208,9,"exists"],[207,16,208,9,"exists"],[207,22],[207,31,208,9,"exists"],[207,37],[208,0,208,17,"md5"],[208,16,208,17,"md5"],[208,19],[208,28,208,17,"md5"],[208,31],[210,22,212,10],[210,23,212,11,"exists"],[210,29,212,10],[210,33,212,21,"md5"],[210,36,212,24],[210,41,212,29],[210,46,212,34,"hash"],[210,50],[216,48,213,25,"FS"],[216,50,213,27],[216,51,213,28,"downloadAsync"],[216,64,213,25],[216,65,213,42],[216,70,213,47,"uri"],[216,73,213,25],[216,75,213,52,"localUri"],[216,83,213,25],[216,85,213,62],[217,0,214,10,"cache"],[217,18,214,10,"cache"],[217,23,214,15],[217,25,214,17],[217,29,213,62],[218,0,215,10,"md5"],[218,18,215,10,"md5"],[218,21,215,13],[218,23,215,15],[219,0,213,62],[219,17,213,25],[219,18],[223,0,213,11,"md5"],[223,16,213,11,"md5"],[223,19],[223,28,213,11,"md5"],[223,31],[225,22,217,12,"md5"],[225,25,217,15],[225,30,217,20],[225,35,217,25,"hash"],[225,39],[230,22,218,16],[230,26,218,20,"Error"],[230,31,218,16],[230,32,219,12],[230,64,219,42],[230,69,219,47,"name"],[230,73,219,12],[230,82,219,55],[230,87,219,60,"type"],[230,91,219,12],[230,118,220,28],[230,123,220,33,"uri"],[230,126,219,12],[230,164,218,16],[230,165],[233,0,226,6],[233,21,226,11,"localUri"],[233,29,226,6],[233,32,226,22,"localUri"],[233,40,226,6],[234,0,227,6],[234,21,227,11,"downloaded"],[234,31,227,6],[234,34,227,24],[234,38,227,6],[235,0,228,6],[235,21,228,11,"downloadCallbacks"],[235,38,228,6],[235,39,228,29,"forEach"],[235,46,228,6],[235,47,228,37],[236,0,228,37],[236,22,228,40,"resolve"],[236,29,228,37],[236,38,228,40,"resolve"],[236,45,228,37],[237,0,228,37],[237,25,228,54,"resolve"],[237,32,228,61],[237,34,228,37],[238,0,228,37],[238,17,228,6],[245,0,230,6],[245,21,230,11,"downloadCallbacks"],[245,38,230,6],[245,39,230,29,"forEach"],[245,46,230,6],[245,47,230,37],[246,0,230,37],[246,22,230,40,"reject"],[246,28,230,37],[246,37,230,40,"reject"],[246,43,230,37],[247,0,230,37],[247,25,230,53,"reject"],[247,31,230,59],[247,44,230,37],[248,0,230,37],[248,17,230,6],[253,0,233,6],[253,21,233,11,"downloading"],[253,32,233,6],[253,35,233,25],[253,40,233,6],[254,0,234,6],[254,21,234,11,"downloadCallbacks"],[254,38,234,6],[254,41,234,31],[254,43,234,6],[266,32,164,19,"moduleId"],[266,40],[266,42,164,29],[267,0,165,4],[267,12,165,8,"moduleIds"],[267,21,165,17],[267,24,165,20],[267,31,165,27,"moduleId"],[267,39,165,20],[267,44,165,40],[267,52,165,20],[267,55,165,51],[267,56,165,52,"moduleId"],[267,64,165,51],[267,65,165,20],[267,68,165,64,"moduleId"],[267,76,165,4],[268,0,166,4],[268,15,166,11,"Promise"],[268,22,166,18],[268,23,166,19,"all"],[268,26,166,11],[268,27,166,23,"moduleIds"],[268,36,166,32],[268,37,166,33,"map"],[268,40,166,23],[268,41,166,37],[268,51,166,37,"m"],[268,52,166,38],[269,0,166,38],[269,17,166,42,"Asset"],[269,22,166,47],[269,23,166,48,"fromModule"],[269,33,166,42],[269,34,166,59,"m"],[269,35,166,42],[269,37,166,62,"downloadAsync"],[269,50,166,42],[269,52,166,38],[270,0,166,38],[270,9,166,23],[270,10,166,11],[270,11,166,4],[271,0,167,3],[274,33,169,20,"moduleId"],[274,41],[274,43,169,30],[275,0,170,4],[275,12,170,10,"meta"],[275,16,170,14],[275,19,170,17,"AssetRegistry"],[275,42,170,31,"getAssetByID"],[275,54,170,17],[275,55,170,44,"moduleId"],[275,63,170,17],[275,64,170,4],[277,0,171,4],[277,15,171,11,"Asset"],[277,20,171,16],[277,21,171,17,"fromMetadata"],[277,33,171,11],[277,34,171,30,"meta"],[277,38,171,11],[277,39,171,4],[278,0,172,3],[281,35,174,22,"meta"],[281,39],[281,41,174,28],[282,0,177,4],[282,12,177,10,"metaHash"],[282,20,177,18],[282,23,177,21,"meta"],[282,27,177,25],[282,28,177,26,"hash"],[282,32,177,4],[284,0,178,4],[284,12,178,8,"Asset"],[284,17,178,13],[284,18,178,14,"byHash"],[284,24,178,8],[284,25,178,21,"metaHash"],[284,33,178,8],[284,34,178,4],[284,36,178,32],[285,0,179,6],[285,17,179,13,"Asset"],[285,22,179,18],[285,23,179,19,"byHash"],[285,29,179,13],[285,30,179,26,"metaHash"],[285,38,179,13],[285,39,179,6],[286,0,180,5],[288,0,174,28],[288,25,182,26,"pickScale"],[288,34,182,35],[288,35,182,36,"meta"],[288,39,182,35],[288,40,174,28],[289,0,174,28],[289,12,182,12,"uri"],[289,15,174,28],[289,29,182,12,"uri"],[289,32,174,28],[290,0,174,28],[290,12,182,17,"hash"],[290,16,174,28],[290,30,182,17,"hash"],[290,34,174,28],[292,0,184,4],[292,12,184,10,"asset"],[292,17,184,15],[292,20,184,18],[292,24,184,22,"Asset"],[292,29,184,18],[292,30,184,28],[293,0,185,6,"name"],[293,10,185,6,"name"],[293,14,185,10],[293,16,185,12,"meta"],[293,20,185,16],[293,21,185,17,"name"],[293,25,184,28],[294,0,186,6,"type"],[294,10,186,6,"type"],[294,14,186,10],[294,16,186,12,"meta"],[294,20,186,16],[294,21,186,17,"type"],[294,25,184,28],[295,0,187,6,"hash"],[295,10,187,6,"hash"],[295,14,187,10],[295,16,187,6,"hash"],[295,20,184,28],[296,0,188,6,"uri"],[296,10,188,6,"uri"],[296,13,188,9],[296,15,188,6,"uri"],[296,18,184,28],[297,0,189,6,"width"],[297,10,189,6,"width"],[297,15,189,11],[297,17,189,13,"meta"],[297,21,189,17],[297,22,189,18,"width"],[297,27,184,28],[298,0,190,6,"height"],[298,10,190,6,"height"],[298,16,190,12],[298,18,190,14,"meta"],[298,22,190,18],[298,23,190,19,"height"],[299,0,184,28],[299,9,184,18],[299,10,184,4],[300,0,192,4,"Asset"],[300,8,192,4,"Asset"],[300,13,192,9],[300,14,192,10,"byHash"],[300,20,192,4],[300,21,192,17,"metaHash"],[300,29,192,4],[300,33,192,29,"asset"],[300,38,192,4],[301,0,193,4],[301,15,193,11,"asset"],[301,20,193,4],[302,0,194,3],[309,0,143,21,"Asset"],[309,2,143,21,"Asset"],[309,7],[309,8,144,9,"byHash"],[309,14],[309,17,144,18],[309,19],[311,0,240,0,"resolveAssetSource"],[311,30,240,19,"setCustomSourceTransformer"],[311,56,240,0],[311,57,240,46],[311,67,240,46,"resolver"],[311,75,240,54],[311,77,240,58],[312,0,241,2],[312,8,241,8,"asset"],[312,13,241,13],[312,16,241,16,"Asset"],[312,21,241,21],[312,22,241,22,"fromMetadata"],[312,34,241,16],[312,35,241,35,"resolver"],[312,43,241,43],[312,44,241,44,"asset"],[312,49,241,16],[312,50,241,2],[313,0,242,2],[313,11,242,9,"resolver"],[313,19,242,17],[313,20,242,18,"fromSource"],[313,30,242,9],[313,31,242,29,"asset"],[313,36,242,34],[313,37,242,35,"downloaded"],[313,47,242,29],[313,50,242,48,"asset"],[313,55,242,53],[313,56,242,54,"localUri"],[313,64,242,29],[313,67,242,65,"asset"],[313,72,242,70],[313,73,242,71,"uri"],[313,76,242,9],[313,77,242,2],[314,0,243,1],[314,3,240,0]]},"type":"js/module"}]}