{"dependencies":[{"name":"react","data":{"isAsync":false}},{"name":"./../../../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"prop-types","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"./MapMarker","data":{"isAsync":false}},{"name":"./MapPolyline","data":{"isAsync":false}},{"name":"./MapPolygon","data":{"isAsync":false}},{"name":"./MapCircle","data":{"isAsync":false}},{"name":"./MapCallout","data":{"isAsync":false}},{"name":"./MapOverlay","data":{"isAsync":false}},{"name":"./MapUrlTile","data":{"isAsync":false}},{"name":"./MapLocalTile","data":{"isAsync":false}},{"name":"./AnimatedRegion","data":{"isAsync":false}},{"name":"./decorateMapComponent","data":{"isAsync":false}},{"name":"./ProviderConstants","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = exports.ProviderPropType = exports.Animated = exports.MAP_TYPES = void 0;\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../../../react-transform-hmr/lib/index.js\"));\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"prop-types\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[3], \"react-native\");\n\n  var _MapMarker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./MapMarker\"));\n\n  var _MapPolyline = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./MapPolyline\"));\n\n  var _MapPolygon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./MapPolygon\"));\n\n  var _MapCircle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./MapCircle\"));\n\n  var _MapCallout = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"./MapCallout\"));\n\n  var _MapOverlay = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./MapOverlay\"));\n\n  var _MapUrlTile = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./MapUrlTile\"));\n\n  var _MapLocalTile = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"./MapLocalTile\"));\n\n  var _AnimatedRegion = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"./AnimatedRegion\"));\n\n  var _decorateMapComponent = _$$_REQUIRE(_dependencyMap[13], \"./decorateMapComponent\");\n\n  var ProviderConstants = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[14], \"./ProviderConstants\"));\n\n  var _jsxFileName = \"/home/alex/Documentos/CursoReactNative/node_modules/react-native-maps/lib/components/MapView.js\";\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\n  function _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\n  function _iterableToArray(iter) { if ((typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\") in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\n  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  var _components = {\n    MapView: {\n      displayName: \"MapView\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/alex/Documentos/CursoReactNative/node_modules/react-native-maps/lib/components/MapView.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var MAP_TYPES = {\n    STANDARD: 'standard',\n    SATELLITE: 'satellite',\n    HYBRID: 'hybrid',\n    TERRAIN: 'terrain',\n    NONE: 'none',\n    MUTEDSTANDARD: 'mutedStandard'\n  };\n  exports.MAP_TYPES = MAP_TYPES;\n  var GOOGLE_MAPS_ONLY_TYPES = [MAP_TYPES.TERRAIN, MAP_TYPES.NONE];\n  var viewConfig = {\n    uiViewClassName: 'AIR<provider>Map',\n    validAttributes: {\n      region: true\n    }\n  };\n  var viewPropTypes = _reactNative.ViewPropTypes || _reactNative.View.propTypes;\n\n  var propTypes = _objectSpread({}, viewPropTypes, {\n    provider: _propTypes.default.oneOf(['google']),\n    style: viewPropTypes.style,\n    customMapStyle: _propTypes.default.array,\n    customMapStyleString: _propTypes.default.string,\n    showsUserLocation: _propTypes.default.bool,\n    userLocationAnnotationTitle: _propTypes.default.string,\n    showsMyLocationButton: _propTypes.default.bool,\n    followsUserLocation: _propTypes.default.bool,\n    showsPointsOfInterest: _propTypes.default.bool,\n    showsCompass: _propTypes.default.bool,\n    zoomEnabled: _propTypes.default.bool,\n    zoomControlEnabled: _propTypes.default.bool,\n    rotateEnabled: _propTypes.default.bool,\n    cacheEnabled: _propTypes.default.bool,\n    loadingEnabled: _propTypes.default.bool,\n    loadingBackgroundColor: _reactNative.ColorPropType,\n    loadingIndicatorColor: _reactNative.ColorPropType,\n    scrollEnabled: _propTypes.default.bool,\n    pitchEnabled: _propTypes.default.bool,\n    toolbarEnabled: _propTypes.default.bool,\n    moveOnMarkerPress: _propTypes.default.bool,\n    showsScale: _propTypes.default.bool,\n    showsBuildings: _propTypes.default.bool,\n    showsTraffic: _propTypes.default.bool,\n    showsIndoors: _propTypes.default.bool,\n    showsIndoorLevelPicker: _propTypes.default.bool,\n    mapType: _propTypes.default.oneOf(Object.values(MAP_TYPES)),\n    region: _propTypes.default.shape({\n      latitude: _propTypes.default.number.isRequired,\n      longitude: _propTypes.default.number.isRequired,\n      latitudeDelta: _propTypes.default.number.isRequired,\n      longitudeDelta: _propTypes.default.number.isRequired\n    }),\n    initialRegion: _propTypes.default.shape({\n      latitude: _propTypes.default.number.isRequired,\n      longitude: _propTypes.default.number.isRequired,\n      latitudeDelta: _propTypes.default.number.isRequired,\n      longitudeDelta: _propTypes.default.number.isRequired\n    }),\n    liteMode: _propTypes.default.bool,\n    mapPadding: _reactNative.EdgeInsetsPropType,\n    paddingAdjustmentBehavior: _propTypes.default.oneOf(['always', 'automatic', 'never']),\n    maxDelta: _propTypes.default.number,\n    minDelta: _propTypes.default.number,\n    legalLabelInsets: _reactNative.EdgeInsetsPropType,\n    onMapReady: _propTypes.default.func,\n    onKmlReady: _propTypes.default.func,\n    onRegionChange: _propTypes.default.func,\n    onRegionChangeComplete: _propTypes.default.func,\n    onPress: _propTypes.default.func,\n    onLongPress: _propTypes.default.func,\n    onUserLocationChange: _propTypes.default.func,\n    onPanDrag: _propTypes.default.func,\n    onPoiClick: _propTypes.default.func,\n    onMarkerPress: _propTypes.default.func,\n    onMarkerSelect: _propTypes.default.func,\n    onMarkerDeselect: _propTypes.default.func,\n    onCalloutPress: _propTypes.default.func,\n    onMarkerDragStart: _propTypes.default.func,\n    onMarkerDrag: _propTypes.default.func,\n    onMarkerDragEnd: _propTypes.default.func,\n    minZoomLevel: _propTypes.default.number,\n    maxZoomLevel: _propTypes.default.number,\n    kmlSrc: _propTypes.default.string,\n    onIndoorLevelActivated: _propTypes.default.func,\n    onIndoorBuildingFocused: _propTypes.default.func\n  });\n\n  var MapView = function (_React$Component) {\n    _inherits(MapView, _React$Component);\n\n    function MapView(props) {\n      var _this;\n\n      _classCallCheck(this, MapView);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(MapView).call(this, props));\n      _this.state = {\n        isReady: _reactNative.Platform.OS === 'ios'\n      };\n      _this._onMapReady = _this._onMapReady.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n      _this._onMarkerPress = _this._onMarkerPress.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n      _this._onChange = _this._onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n      _this._onLayout = _this._onLayout.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n      return _this;\n    }\n\n    _createClass(MapView, [{\n      key: \"getChildContext\",\n      value: function getChildContext() {\n        return {\n          provider: this.props.provider\n        };\n      }\n    }, {\n      key: \"componentWillUpdate\",\n      value: function componentWillUpdate(nextProps) {\n        var a = this.__lastRegion;\n        var b = nextProps.region;\n        if (!a || !b) return;\n\n        if (a.latitude !== b.latitude || a.longitude !== b.longitude || a.latitudeDelta !== b.latitudeDelta || a.longitudeDelta !== b.longitudeDelta) {\n          this.map.setNativeProps({\n            region: b\n          });\n        }\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var isReady = this.state.isReady;\n\n        if (isReady) {\n          this._updateStyle();\n        }\n      }\n    }, {\n      key: \"_updateStyle\",\n      value: function _updateStyle() {\n        var customMapStyle = this.props.customMapStyle;\n        this.map.setNativeProps({\n          customMapStyleString: JSON.stringify(customMapStyle)\n        });\n      }\n    }, {\n      key: \"_onMapReady\",\n      value: function _onMapReady() {\n        var _this$props = this.props,\n            region = _this$props.region,\n            initialRegion = _this$props.initialRegion,\n            onMapReady = _this$props.onMapReady;\n\n        if (region) {\n          this.map.setNativeProps({\n            region: region\n          });\n        } else if (initialRegion) {\n          this.map.setNativeProps({\n            initialRegion: initialRegion\n          });\n        }\n\n        this._updateStyle();\n\n        this.setState({\n          isReady: true\n        }, function () {\n          if (onMapReady) onMapReady();\n        });\n      }\n    }, {\n      key: \"_onLayout\",\n      value: function _onLayout(e) {\n        var layout = e.nativeEvent.layout;\n        if (!layout.width || !layout.height) return;\n\n        if (this.state.isReady && !this.__layoutCalled) {\n          var _this$props2 = this.props,\n              region = _this$props2.region,\n              initialRegion = _this$props2.initialRegion;\n\n          if (region) {\n            this.__layoutCalled = true;\n            this.map.setNativeProps({\n              region: region\n            });\n          } else if (initialRegion) {\n            this.__layoutCalled = true;\n            this.map.setNativeProps({\n              initialRegion: initialRegion\n            });\n          }\n        }\n\n        if (this.props.onLayout) {\n          this.props.onLayout(e);\n        }\n      }\n    }, {\n      key: \"_onMarkerPress\",\n      value: function _onMarkerPress(event) {\n        if (this.props.onMarkerPress) {\n          this.props.onMarkerPress(event.nativeEvent);\n        }\n      }\n    }, {\n      key: \"_onChange\",\n      value: function _onChange(event) {\n        this.__lastRegion = event.nativeEvent.region;\n\n        if (event.nativeEvent.continuous) {\n          if (this.props.onRegionChange) {\n            this.props.onRegionChange(event.nativeEvent.region);\n          }\n        } else if (this.props.onRegionChangeComplete) {\n          this.props.onRegionChangeComplete(event.nativeEvent.region);\n        }\n      }\n    }, {\n      key: \"animateToNavigation\",\n      value: function animateToNavigation(location, bearing, angle, duration) {\n        this._runCommand('animateToNavigation', [location, bearing, angle, duration || 500]);\n      }\n    }, {\n      key: \"animateToRegion\",\n      value: function animateToRegion(region, duration) {\n        this._runCommand('animateToRegion', [region, duration || 500]);\n      }\n    }, {\n      key: \"animateToCoordinate\",\n      value: function animateToCoordinate(latLng, duration) {\n        this._runCommand('animateToCoordinate', [latLng, duration || 500]);\n      }\n    }, {\n      key: \"animateToBearing\",\n      value: function animateToBearing(bearing, duration) {\n        this._runCommand('animateToBearing', [bearing, duration || 500]);\n      }\n    }, {\n      key: \"animateToViewingAngle\",\n      value: function animateToViewingAngle(angle, duration) {\n        this._runCommand('animateToViewingAngle', [angle, duration || 500]);\n      }\n    }, {\n      key: \"fitToElements\",\n      value: function fitToElements(animated) {\n        this._runCommand('fitToElements', [animated]);\n      }\n    }, {\n      key: \"fitToSuppliedMarkers\",\n      value: function fitToSuppliedMarkers(markers) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var _options$edgePadding = options.edgePadding,\n            edgePadding = _options$edgePadding === void 0 ? {\n          top: 0,\n          right: 0,\n          bottom: 0,\n          left: 0\n        } : _options$edgePadding,\n            _options$animated = options.animated,\n            animated = _options$animated === void 0 ? true : _options$animated;\n\n        this._runCommand('fitToSuppliedMarkers', [markers, edgePadding, animated]);\n      }\n    }, {\n      key: \"fitToCoordinates\",\n      value: function fitToCoordinates() {\n        var coordinates = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var _options$edgePadding2 = options.edgePadding,\n            edgePadding = _options$edgePadding2 === void 0 ? {\n          top: 0,\n          right: 0,\n          bottom: 0,\n          left: 0\n        } : _options$edgePadding2,\n            _options$animated2 = options.animated,\n            animated = _options$animated2 === void 0 ? true : _options$animated2;\n\n        this._runCommand('fitToCoordinates', [coordinates, edgePadding, animated]);\n      }\n    }, {\n      key: \"setMapBoundaries\",\n      value: function setMapBoundaries(northEast, southWest) {\n        this._runCommand('setMapBoundaries', [northEast, southWest]);\n      }\n    }, {\n      key: \"setIndoorActiveLevelIndex\",\n      value: function setIndoorActiveLevelIndex(activeLevelIndex) {\n        this._runCommand('setIndoorActiveLevelIndex', [activeLevelIndex]);\n      }\n    }, {\n      key: \"takeSnapshot\",\n      value: function takeSnapshot(args) {\n        var _this2 = this;\n\n        if (_reactNative.Platform.OS === 'ios' && arguments.length === 4) {\n          console.warn('Old takeSnapshot API has been deprecated; will be removed in the near future');\n          var width = arguments[0];\n          var height = arguments[1];\n          var region = arguments[2];\n          var callback = arguments[3];\n\n          this._runCommand('takeSnapshot', [width || 0, height || 0, region || {}, 'png', 1, 'legacy', callback]);\n\n          return undefined;\n        }\n\n        var config = {\n          width: args.width || 0,\n          height: args.height || 0,\n          region: args.region || {},\n          format: args.format || 'png',\n          quality: args.quality || 1.0,\n          result: args.result || 'file'\n        };\n        if (config.format !== 'png' && config.format !== 'jpg') throw new Error('Invalid format specified');\n        if (config.result !== 'file' && config.result !== 'base64') throw new Error('Invalid result specified');\n\n        if (_reactNative.Platform.OS === 'android') {\n          return _reactNative.NativeModules.AirMapModule.takeSnapshot(this._getHandle(), config);\n        } else if (_reactNative.Platform.OS === 'ios') {\n          return new Promise(function (resolve, reject) {\n            _this2._runCommand('takeSnapshot', [config.width, config.height, config.region, config.format, config.quality, config.result, function (err, snapshot) {\n              if (err) {\n                reject(err);\n              } else {\n                resolve(snapshot);\n              }\n            }]);\n          });\n        }\n\n        return Promise.reject('takeSnapshot not supported on this platform');\n      }\n    }, {\n      key: \"pointForCoordinate\",\n      value: function pointForCoordinate(coordinate) {\n        if (_reactNative.Platform.OS === 'android') {\n          return _reactNative.NativeModules.AirMapModule.pointForCoordinate(this._getHandle(), coordinate);\n        } else if (_reactNative.Platform.OS === 'ios') {\n          return this._runCommand('pointForCoordinate', [coordinate]);\n        }\n\n        return Promise.reject('pointForCoordinate not supported on this platform');\n      }\n    }, {\n      key: \"coordinateForPoint\",\n      value: function coordinateForPoint(point) {\n        if (_reactNative.Platform.OS === 'android') {\n          return _reactNative.NativeModules.AirMapModule.coordinateForPoint(this._getHandle(), point);\n        } else if (_reactNative.Platform.OS === 'ios') {\n          return this._runCommand('coordinateForPoint', [point]);\n        }\n\n        return Promise.reject('coordinateForPoint not supported on this platform');\n      }\n    }, {\n      key: \"_uiManagerCommand\",\n      value: function _uiManagerCommand(name) {\n        return _reactNative.NativeModules.UIManager[(0, _decorateMapComponent.getAirMapName)(this.props.provider)].Commands[name];\n      }\n    }, {\n      key: \"_mapManagerCommand\",\n      value: function _mapManagerCommand(name) {\n        return _reactNative.NativeModules[(0, _decorateMapComponent.getAirMapName)(this.props.provider) + \"Manager\"][name];\n      }\n    }, {\n      key: \"_getHandle\",\n      value: function _getHandle() {\n        return (0, _reactNative.findNodeHandle)(this.map);\n      }\n    }, {\n      key: \"_runCommand\",\n      value: function _runCommand(name, args) {\n        switch (_reactNative.Platform.OS) {\n          case 'android':\n            return _reactNative.NativeModules.UIManager.dispatchViewManagerCommand(this._getHandle(), this._uiManagerCommand(name), args);\n\n          case 'ios':\n            return this._mapManagerCommand(name).apply(void 0, [this._getHandle()].concat(_toConsumableArray(args)));\n\n          default:\n            return Promise.reject(\"Invalid platform was passed: \" + _reactNative.Platform.OS);\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this3 = this;\n\n        var props;\n\n        if (this.state.isReady) {\n          props = _objectSpread({\n            region: null,\n            initialRegion: null,\n            onMarkerPress: this._onMarkerPress,\n            onChange: this._onChange,\n            onMapReady: this._onMapReady,\n            onLayout: this._onLayout\n          }, this.props);\n\n          if (_reactNative.Platform.OS === 'ios' && props.provider === ProviderConstants.PROVIDER_DEFAULT && GOOGLE_MAPS_ONLY_TYPES.includes(props.mapType)) {\n            props.mapType = MAP_TYPES.standard;\n          }\n\n          props.handlePanDrag = !!props.onPanDrag;\n        } else {\n          props = {\n            style: this.props.style,\n            region: null,\n            initialRegion: null,\n            onMarkerPress: this._onMarkerPress,\n            onChange: this._onChange,\n            onMapReady: this._onMapReady,\n            onLayout: this._onLayout\n          };\n        }\n\n        if (_reactNative.Platform.OS === 'android' && this.props.liteMode) {\n          return _react.default.createElement(AIRMapLite, _extends({\n            ref: function ref(_ref) {\n              _this3.map = _ref;\n            }\n          }, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 783\n            }\n          }));\n        }\n\n        var AIRMap = getAirMapComponent(this.props.provider);\n        return _react.default.createElement(AIRMap, _extends({\n          ref: function ref(_ref2) {\n            _this3.map = _ref2;\n          }\n        }, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 793\n          }\n        }));\n      }\n    }]);\n\n    return MapView;\n  }(_react.default.Component);\n\n  MapView = _wrapComponent(\"MapView\")(MapView);\n  MapView.propTypes = propTypes;\n  MapView.viewConfig = viewConfig;\n  MapView.childContextTypes = _decorateMapComponent.contextTypes;\n  MapView.MAP_TYPES = MAP_TYPES;\n\n  var nativeComponent = function nativeComponent(Component) {\n    return (0, _reactNative.requireNativeComponent)(Component, MapView, {\n      nativeOnly: {\n        onChange: true,\n        onMapReady: true,\n        onKmlReady: true,\n        handlePanDrag: true\n      }\n    });\n  };\n\n  var airMaps = {\n    default: nativeComponent('AIRMap')\n  };\n\n  if (_reactNative.Platform.OS === 'android') {\n    airMaps.google = airMaps.default;\n  } else {\n    airMaps.google = _decorateMapComponent.googleMapIsInstalled ? nativeComponent('AIRGoogleMap') : (0, _decorateMapComponent.createNotSupportedComponent)('react-native-maps: AirGoogleMaps dir must be added to your xCode project to support GoogleMaps on iOS.');\n  }\n\n  var getAirMapComponent = function getAirMapComponent(provider) {\n    return airMaps[provider || 'default'];\n  };\n\n  var AIRMapLite = _reactNative.NativeModules.UIManager.AIRMapLite && (0, _reactNative.requireNativeComponent)('AIRMapLite', MapView, {\n    nativeOnly: {\n      onChange: true,\n      onMapReady: true,\n      handlePanDrag: true\n    }\n  });\n\n  var Animated = _reactNative.Animated.createAnimatedComponent(MapView);\n\n  exports.Animated = Animated;\n\n  var ProviderPropType = _propTypes.default.oneOf(Object.values(ProviderConstants));\n\n  exports.ProviderPropType = ProviderPropType;\n  MapView.Marker = _MapMarker.default;\n  MapView.Polyline = _MapPolyline.default;\n  MapView.Polygon = _MapPolygon.default;\n  MapView.Circle = _MapCircle.default;\n  MapView.UrlTile = _MapUrlTile.default;\n  MapView.LocalTile = _MapLocalTile.default;\n  MapView.Overlay = _MapOverlay.default;\n  MapView.Callout = _MapCallout.default;\n\n  _extends(MapView, ProviderConstants);\n\n  MapView.ProviderPropType = ProviderPropType;\n  MapView.Animated = Animated;\n  MapView.AnimatedRegion = _AnimatedRegion.default;\n  var _default2 = MapView;\n  exports.default = _default2;\n});","map":[[7,0,2,0],[11,0,1,0],[13,0,3,0],[15,0,14,0],[17,0,15,0],[19,0,16,0],[21,0,17,0],[23,0,18,0],[25,0,19,0],[27,0,20,0],[29,0,21,0],[31,0,22,0],[33,0,23,0],[35,0,29,0],[92,0,31,7],[92,6,31,13,"MAP_TYPES"],[92,15,31,22],[92,18,31,25],[93,0,32,2,"STANDARD"],[93,4,32,2,"STANDARD"],[93,12,32,10],[93,14,32,12],[93,24,31,25],[94,0,33,2,"SATELLITE"],[94,4,33,2,"SATELLITE"],[94,13,33,11],[94,15,33,13],[94,26,31,25],[95,0,34,2,"HYBRID"],[95,4,34,2,"HYBRID"],[95,10,34,8],[95,12,34,10],[95,20,31,25],[96,0,35,2,"TERRAIN"],[96,4,35,2,"TERRAIN"],[96,11,35,9],[96,13,35,11],[96,22,31,25],[97,0,36,2,"NONE"],[97,4,36,2,"NONE"],[97,8,36,6],[97,10,36,8],[97,16,31,25],[98,0,37,2,"MUTEDSTANDARD"],[98,4,37,2,"MUTEDSTANDARD"],[98,17,37,15],[98,19,37,17],[99,0,31,25],[99,3,31,7],[101,0,40,0],[101,6,40,6,"GOOGLE_MAPS_ONLY_TYPES"],[101,28,40,28],[101,31,40,31],[101,32,41,2,"MAP_TYPES"],[101,41,41,11],[101,42,41,12,"TERRAIN"],[101,49,40,31],[101,51,42,2,"MAP_TYPES"],[101,60,42,11],[101,61,42,12,"NONE"],[101,65,40,31],[101,66,40,0],[102,0,45,0],[102,6,45,6,"viewConfig"],[102,16,45,16],[102,19,45,19],[103,0,46,2,"uiViewClassName"],[103,4,46,2,"uiViewClassName"],[103,19,46,17],[103,21,46,19],[103,39,45,19],[104,0,47,2,"validAttributes"],[104,4,47,2,"validAttributes"],[104,19,47,17],[104,21,47,19],[105,0,48,4,"region"],[105,6,48,4,"region"],[105,12,48,10],[105,14,48,12],[106,0,47,19],[107,0,45,19],[107,3,45,0],[108,0,53,0],[108,6,53,6,"viewPropTypes"],[108,19,53,19],[108,22,53,22,"ViewPropTypes"],[108,52,53,39,"View"],[108,70,53,44,"propTypes"],[108,79,53,0],[110,0,55,0],[110,6,55,6,"propTypes"],[110,15,55,15],[110,36,56,5,"viewPropTypes"],[110,49,55,15],[111,0,62,2,"provider"],[111,4,62,2,"provider"],[111,12,62,10],[111,14,62,12,"PropTypes"],[111,33,62,22,"oneOf"],[111,38,62,12],[111,39,62,28],[111,40,63,4],[111,48,62,28],[111,49,62,12],[111,50,55,15],[112,0,70,2,"style"],[112,4,70,2,"style"],[112,9,70,7],[112,11,70,9,"viewPropTypes"],[112,24,70,22],[112,25,70,23,"style"],[112,30,55,15],[113,0,78,2,"customMapStyle"],[113,4,78,2,"customMapStyle"],[113,18,78,16],[113,20,78,18,"PropTypes"],[113,39,78,28,"array"],[113,44,55,15],[114,0,85,2,"customMapStyleString"],[114,4,85,2,"customMapStyleString"],[114,24,85,22],[114,26,85,24,"PropTypes"],[114,45,85,34,"string"],[114,51,55,15],[115,0,97,2,"showsUserLocation"],[115,4,97,2,"showsUserLocation"],[115,21,97,19],[115,23,97,21,"PropTypes"],[115,42,97,31,"bool"],[115,46,55,15],[116,0,106,2,"userLocationAnnotationTitle"],[116,4,106,2,"userLocationAnnotationTitle"],[116,31,106,29],[116,33,106,31,"PropTypes"],[116,52,106,41,"string"],[116,58,55,15],[117,0,114,2,"showsMyLocationButton"],[117,4,114,2,"showsMyLocationButton"],[117,25,114,23],[117,27,114,25,"PropTypes"],[117,46,114,35,"bool"],[117,50,55,15],[118,0,123,2,"followsUserLocation"],[118,4,123,2,"followsUserLocation"],[118,23,123,21],[118,25,123,23,"PropTypes"],[118,44,123,33,"bool"],[118,48,55,15],[119,0,130,2,"showsPointsOfInterest"],[119,4,130,2,"showsPointsOfInterest"],[119,25,130,23],[119,27,130,25,"PropTypes"],[119,46,130,35,"bool"],[119,50,55,15],[120,0,138,2,"showsCompass"],[120,4,138,2,"showsCompass"],[120,16,138,14],[120,18,138,16,"PropTypes"],[120,37,138,26,"bool"],[120,41,55,15],[121,0,145,2,"zoomEnabled"],[121,4,145,2,"zoomEnabled"],[121,15,145,13],[121,17,145,15,"PropTypes"],[121,36,145,25,"bool"],[121,40,55,15],[122,0,153,2,"zoomControlEnabled"],[122,4,153,2,"zoomControlEnabled"],[122,22,153,20],[122,24,153,22,"PropTypes"],[122,43,153,32,"bool"],[122,47,55,15],[123,0,160,2,"rotateEnabled"],[123,4,160,2,"rotateEnabled"],[123,17,160,15],[123,19,160,17,"PropTypes"],[123,38,160,27,"bool"],[123,42,55,15],[124,0,167,2,"cacheEnabled"],[124,4,167,2,"cacheEnabled"],[124,16,167,14],[124,18,167,16,"PropTypes"],[124,37,167,26,"bool"],[124,41,55,15],[125,0,174,2,"loadingEnabled"],[125,4,174,2,"loadingEnabled"],[125,18,174,16],[125,20,174,18,"PropTypes"],[125,39,174,28,"bool"],[125,43,55,15],[126,0,181,2,"loadingBackgroundColor"],[126,4,181,2,"loadingBackgroundColor"],[126,26,181,24],[126,28,181,26,"ColorPropType"],[126,54,55,15],[127,0,188,2,"loadingIndicatorColor"],[127,4,188,2,"loadingIndicatorColor"],[127,25,188,23],[127,27,188,25,"ColorPropType"],[127,53,55,15],[128,0,195,2,"scrollEnabled"],[128,4,195,2,"scrollEnabled"],[128,17,195,15],[128,19,195,17,"PropTypes"],[128,38,195,27,"bool"],[128,42,55,15],[129,0,202,2,"pitchEnabled"],[129,4,202,2,"pitchEnabled"],[129,16,202,14],[129,18,202,16,"PropTypes"],[129,37,202,26,"bool"],[129,41,55,15],[130,0,210,2,"toolbarEnabled"],[130,4,210,2,"toolbarEnabled"],[130,18,210,16],[130,20,210,18,"PropTypes"],[130,39,210,28,"bool"],[130,43,55,15],[131,0,218,2,"moveOnMarkerPress"],[131,4,218,2,"moveOnMarkerPress"],[131,21,218,19],[131,23,218,21,"PropTypes"],[131,42,218,31,"bool"],[131,46,55,15],[132,0,225,2,"showsScale"],[132,4,225,2,"showsScale"],[132,14,225,12],[132,16,225,14,"PropTypes"],[132,35,225,24,"bool"],[132,39,55,15],[133,0,231,2,"showsBuildings"],[133,4,231,2,"showsBuildings"],[133,18,231,16],[133,20,231,18,"PropTypes"],[133,39,231,28,"bool"],[133,43,55,15],[134,0,237,2,"showsTraffic"],[134,4,237,2,"showsTraffic"],[134,16,237,14],[134,18,237,16,"PropTypes"],[134,37,237,26,"bool"],[134,41,55,15],[135,0,245,2,"showsIndoors"],[135,4,245,2,"showsIndoors"],[135,16,245,14],[135,18,245,16,"PropTypes"],[135,37,245,26,"bool"],[135,41,55,15],[136,0,253,2,"showsIndoorLevelPicker"],[136,4,253,2,"showsIndoorLevelPicker"],[136,26,253,24],[136,28,253,26,"PropTypes"],[136,47,253,36,"bool"],[136,51,55,15],[137,0,264,2,"mapType"],[137,4,264,2,"mapType"],[137,11,264,9],[137,13,264,11,"PropTypes"],[137,32,264,21,"oneOf"],[137,37,264,11],[137,38,264,27,"Object"],[137,44,264,33],[137,45,264,34,"values"],[137,51,264,27],[137,52,264,41,"MAP_TYPES"],[137,61,264,27],[137,62,264,11],[137,63,55,15],[138,0,272,2,"region"],[138,4,272,2,"region"],[138,10,272,8],[138,12,272,10,"PropTypes"],[138,31,272,20,"shape"],[138,36,272,10],[138,37,272,26],[139,0,276,4,"latitude"],[139,6,276,4,"latitude"],[139,14,276,12],[139,16,276,14,"PropTypes"],[139,35,276,24,"number"],[139,41,276,14],[139,42,276,31,"isRequired"],[139,52,272,26],[140,0,277,4,"longitude"],[140,6,277,4,"longitude"],[140,15,277,13],[140,17,277,15,"PropTypes"],[140,36,277,25,"number"],[140,42,277,15],[140,43,277,32,"isRequired"],[140,53,272,26],[141,0,283,4,"latitudeDelta"],[141,6,283,4,"latitudeDelta"],[141,19,283,17],[141,21,283,19,"PropTypes"],[141,40,283,29,"number"],[141,46,283,19],[141,47,283,36,"isRequired"],[141,57,272,26],[142,0,284,4,"longitudeDelta"],[142,6,284,4,"longitudeDelta"],[142,20,284,18],[142,22,284,20,"PropTypes"],[142,41,284,30,"number"],[142,47,284,20],[142,48,284,37,"isRequired"],[143,0,272,26],[143,5,272,10],[143,6,55,15],[144,0,295,2,"initialRegion"],[144,4,295,2,"initialRegion"],[144,17,295,15],[144,19,295,17,"PropTypes"],[144,38,295,27,"shape"],[144,43,295,17],[144,44,295,33],[145,0,299,4,"latitude"],[145,6,299,4,"latitude"],[145,14,299,12],[145,16,299,14,"PropTypes"],[145,35,299,24,"number"],[145,41,299,14],[145,42,299,31,"isRequired"],[145,52,295,33],[146,0,300,4,"longitude"],[146,6,300,4,"longitude"],[146,15,300,13],[146,17,300,15,"PropTypes"],[146,36,300,25,"number"],[146,42,300,15],[146,43,300,32,"isRequired"],[146,53,295,33],[147,0,306,4,"latitudeDelta"],[147,6,306,4,"latitudeDelta"],[147,19,306,17],[147,21,306,19,"PropTypes"],[147,40,306,29,"number"],[147,46,306,19],[147,47,306,36,"isRequired"],[147,57,295,33],[148,0,307,4,"longitudeDelta"],[148,6,307,4,"longitudeDelta"],[148,20,307,18],[148,22,307,20,"PropTypes"],[148,41,307,30,"number"],[148,47,307,20],[148,48,307,37,"isRequired"],[149,0,295,33],[149,5,295,17],[149,6,55,15],[150,0,316,2,"liteMode"],[150,4,316,2,"liteMode"],[150,12,316,10],[150,14,316,12,"PropTypes"],[150,33,316,22,"bool"],[150,37,55,15],[151,0,325,2,"mapPadding"],[151,4,325,2,"mapPadding"],[151,14,325,12],[151,16,325,14,"EdgeInsetsPropType"],[151,47,55,15],[152,0,334,2,"paddingAdjustmentBehavior"],[152,4,334,2,"paddingAdjustmentBehavior"],[152,29,334,27],[152,31,334,29,"PropTypes"],[152,50,334,39,"oneOf"],[152,55,334,29],[152,56,334,45],[152,57,334,46],[152,65,334,45],[152,67,334,56],[152,78,334,45],[152,80,334,69],[152,87,334,45],[152,88,334,29],[152,89,55,15],[153,0,341,2,"maxDelta"],[153,4,341,2,"maxDelta"],[153,12,341,10],[153,14,341,12,"PropTypes"],[153,33,341,22,"number"],[153,39,55,15],[154,0,348,2,"minDelta"],[154,4,348,2,"minDelta"],[154,12,348,10],[154,14,348,12,"PropTypes"],[154,33,348,22,"number"],[154,39,55,15],[155,0,354,2,"legalLabelInsets"],[155,4,354,2,"legalLabelInsets"],[155,20,354,18],[155,22,354,20,"EdgeInsetsPropType"],[155,53,55,15],[156,0,359,2,"onMapReady"],[156,4,359,2,"onMapReady"],[156,14,359,12],[156,16,359,14,"PropTypes"],[156,35,359,24,"func"],[156,39,55,15],[157,0,364,2,"onKmlReady"],[157,4,364,2,"onKmlReady"],[157,14,364,12],[157,16,364,14,"PropTypes"],[157,35,364,24,"func"],[157,39,55,15],[158,0,369,2,"onRegionChange"],[158,4,369,2,"onRegionChange"],[158,18,369,16],[158,20,369,18,"PropTypes"],[158,39,369,28,"func"],[158,43,55,15],[159,0,374,2,"onRegionChangeComplete"],[159,4,374,2,"onRegionChangeComplete"],[159,26,374,24],[159,28,374,26,"PropTypes"],[159,47,374,36,"func"],[159,51,55,15],[160,0,379,2,"onPress"],[160,4,379,2,"onPress"],[160,11,379,9],[160,13,379,11,"PropTypes"],[160,32,379,21,"func"],[160,36,55,15],[161,0,384,2,"onLongPress"],[161,4,384,2,"onLongPress"],[161,15,384,13],[161,17,384,15,"PropTypes"],[161,36,384,25,"func"],[161,40,55,15],[162,0,389,2,"onUserLocationChange"],[162,4,389,2,"onUserLocationChange"],[162,24,389,22],[162,26,389,24,"PropTypes"],[162,45,389,34,"func"],[162,49,55,15],[163,0,394,2,"onPanDrag"],[163,4,394,2,"onPanDrag"],[163,13,394,11],[163,15,394,13,"PropTypes"],[163,34,394,23,"func"],[163,38,55,15],[164,0,399,2,"onPoiClick"],[164,4,399,2,"onPoiClick"],[164,14,399,12],[164,16,399,14,"PropTypes"],[164,35,399,24,"func"],[164,39,55,15],[165,0,404,2,"onMarkerPress"],[165,4,404,2,"onMarkerPress"],[165,17,404,15],[165,19,404,17,"PropTypes"],[165,38,404,27,"func"],[165,42,55,15],[166,0,412,2,"onMarkerSelect"],[166,4,412,2,"onMarkerSelect"],[166,18,412,16],[166,20,412,18,"PropTypes"],[166,39,412,28,"func"],[166,43,55,15],[167,0,420,2,"onMarkerDeselect"],[167,4,420,2,"onMarkerDeselect"],[167,20,420,18],[167,22,420,20,"PropTypes"],[167,41,420,30,"func"],[167,45,55,15],[168,0,425,2,"onCalloutPress"],[168,4,425,2,"onCalloutPress"],[168,18,425,16],[168,20,425,18,"PropTypes"],[168,39,425,28,"func"],[168,43,55,15],[169,0,430,2,"onMarkerDragStart"],[169,4,430,2,"onMarkerDragStart"],[169,21,430,19],[169,23,430,21,"PropTypes"],[169,42,430,31,"func"],[169,46,55,15],[170,0,435,2,"onMarkerDrag"],[170,4,435,2,"onMarkerDrag"],[170,16,435,14],[170,18,435,16,"PropTypes"],[170,37,435,26,"func"],[170,41,55,15],[171,0,441,2,"onMarkerDragEnd"],[171,4,441,2,"onMarkerDragEnd"],[171,19,441,17],[171,21,441,19,"PropTypes"],[171,40,441,29,"func"],[171,44,55,15],[172,0,446,2,"minZoomLevel"],[172,4,446,2,"minZoomLevel"],[172,16,446,14],[172,18,446,16,"PropTypes"],[172,37,446,26,"number"],[172,43,55,15],[173,0,451,2,"maxZoomLevel"],[173,4,451,2,"maxZoomLevel"],[173,16,451,14],[173,18,451,16,"PropTypes"],[173,37,451,26,"number"],[173,43,55,15],[174,0,456,2,"kmlSrc"],[174,4,456,2,"kmlSrc"],[174,10,456,8],[174,12,456,10,"PropTypes"],[174,31,456,20,"string"],[174,37,55,15],[175,0,461,2,"onIndoorLevelActivated"],[175,4,461,2,"onIndoorLevelActivated"],[175,26,461,24],[175,28,461,26,"PropTypes"],[175,47,461,36,"func"],[175,51,55,15],[176,0,466,2,"onIndoorBuildingFocused"],[176,4,466,2,"onIndoorBuildingFocused"],[176,27,466,25],[176,29,466,27,"PropTypes"],[176,48,466,37,"func"],[177,0,55,15],[177,4,55,0],[179,6,469,6,"MapView"],[179,13],[182,0,470,2],[182,21,470,14,"props"],[182,26,470,2],[182,28,470,21],[183,0,470,21],[185,0,470,21],[187,0,471,4],[187,83,471,10,"props"],[187,88,471,4],[188,0,473,4],[188,12,473,9,"state"],[188,17,473,4],[188,20,473,17],[189,0,474,6,"isReady"],[189,8,474,6,"isReady"],[189,15,474,13],[189,17,474,15,"Platform"],[189,39,474,24,"OS"],[189,41,474,15],[189,46,474,31],[190,0,473,17],[190,7,473,4],[191,0,477,4],[191,12,477,9,"_onMapReady"],[191,23,477,4],[191,26,477,23],[191,32,477,28,"_onMapReady"],[191,43,477,23],[191,44,477,40,"bind"],[191,48,477,23],[191,103,477,4],[192,0,478,4],[192,12,478,9,"_onMarkerPress"],[192,26,478,4],[192,29,478,26],[192,35,478,31,"_onMarkerPress"],[192,49,478,26],[192,50,478,46,"bind"],[192,54,478,26],[192,109,478,4],[193,0,479,4],[193,12,479,9,"_onChange"],[193,21,479,4],[193,24,479,21],[193,30,479,26,"_onChange"],[193,39,479,21],[193,40,479,36,"bind"],[193,44,479,21],[193,99,479,4],[194,0,480,4],[194,12,480,9,"_onLayout"],[194,21,480,4],[194,24,480,21],[194,30,480,26,"_onLayout"],[194,39,480,21],[194,40,480,36,"bind"],[194,44,480,21],[194,99,480,4],[195,0,470,21],[196,0,481,3],[200,40,483,20],[201,0,484,4],[201,15,484,11],[202,0,484,13,"provider"],[202,10,484,13,"provider"],[202,18,484,21],[202,20,484,23],[202,25,484,28,"props"],[202,30,484,23],[202,31,484,34,"provider"],[203,0,484,11],[203,9,484,4],[204,0,485,3],[207,42,487,22,"nextProps"],[207,51],[207,53,487,33],[208,0,488,4],[208,12,488,10,"a"],[208,13,488,11],[208,16,488,14],[208,21,488,19,"__lastRegion"],[208,33,488,4],[209,0,489,4],[209,12,489,10,"b"],[209,13,489,11],[209,16,489,14,"nextProps"],[209,25,489,23],[209,26,489,24,"region"],[209,32,489,4],[210,0,490,4],[210,12,490,8],[210,13,490,9,"a"],[210,14,490,8],[210,18,490,14],[210,19,490,15,"b"],[210,20,490,4],[210,22,490,18],[212,0,491,4],[212,12,492,6,"a"],[212,13,492,7],[212,14,492,8,"latitude"],[212,22,492,6],[212,27,492,21,"b"],[212,28,492,22],[212,29,492,23,"latitude"],[212,37,492,6],[212,41,493,6,"a"],[212,42,493,7],[212,43,493,8,"longitude"],[212,52,493,6],[212,57,493,22,"b"],[212,58,493,23],[212,59,493,24,"longitude"],[212,68,492,6],[212,72,494,6,"a"],[212,73,494,7],[212,74,494,8,"latitudeDelta"],[212,87,494,6],[212,92,494,26,"b"],[212,93,494,27],[212,94,494,28,"latitudeDelta"],[212,107,492,6],[212,111,495,6,"a"],[212,112,495,7],[212,113,495,8,"longitudeDelta"],[212,127,495,6],[212,132,495,27,"b"],[212,133,495,28],[212,134,495,29,"longitudeDelta"],[212,148,491,4],[212,150,496,6],[213,0,497,6],[213,15,497,11,"map"],[213,18,497,6],[213,19,497,15,"setNativeProps"],[213,33,497,6],[213,34,497,30],[214,0,497,32,"region"],[214,12,497,32,"region"],[214,18,497,38],[214,20,497,40,"b"],[215,0,497,30],[215,11,497,6],[216,0,498,5],[217,0,499,3],[220,42,501,22],[221,0,501,22],[221,12,502,12,"isReady"],[221,19,501,22],[221,22,502,24],[221,27,502,29,"state"],[221,32,501,22],[221,33,502,12,"isReady"],[221,40,501,22],[223,0,503,4],[223,12,503,8,"isReady"],[223,19,503,4],[223,21,503,17],[224,0,504,6],[224,15,504,11,"_updateStyle"],[224,27,504,6],[225,0,505,5],[226,0,506,3],[229,37,508,17],[230,0,508,17],[230,12,509,12,"customMapStyle"],[230,26,508,17],[230,29,509,31],[230,34,509,36,"props"],[230,39,508,17],[230,40,509,12,"customMapStyle"],[230,54,508,17],[231,0,510,4],[231,13,510,9,"map"],[231,16,510,4],[231,17,510,13,"setNativeProps"],[231,31,510,4],[231,32,510,28],[232,0,510,30,"customMapStyleString"],[232,10,510,30,"customMapStyleString"],[232,30,510,50],[232,32,510,52,"JSON"],[232,36,510,56],[232,37,510,57,"stringify"],[232,46,510,52],[232,47,510,67,"customMapStyle"],[232,61,510,52],[233,0,510,28],[233,9,510,4],[234,0,511,3],[237,36,513,16],[238,0,513,16],[238,26,514,50],[238,31,514,55,"props"],[238,36,513,16],[239,0,513,16],[239,12,514,12,"region"],[239,18,513,16],[239,33,514,12,"region"],[239,39,513,16],[240,0,513,16],[240,12,514,20,"initialRegion"],[240,25,513,16],[240,40,514,20,"initialRegion"],[240,53,513,16],[241,0,513,16],[241,12,514,35,"onMapReady"],[241,22,513,16],[241,37,514,35,"onMapReady"],[241,47,513,16],[243,0,515,4],[243,12,515,8,"region"],[243,18,515,4],[243,20,515,16],[244,0,516,6],[244,15,516,11,"map"],[244,18,516,6],[244,19,516,15,"setNativeProps"],[244,33,516,6],[244,34,516,30],[245,0,516,32,"region"],[245,12,516,32,"region"],[245,18,516,38],[245,20,516,32,"region"],[246,0,516,30],[246,11,516,6],[247,0,517,5],[247,9,515,4],[247,15,517,11],[247,19,517,15,"initialRegion"],[247,32,517,11],[247,34,517,30],[248,0,518,6],[248,15,518,11,"map"],[248,18,518,6],[248,19,518,15,"setNativeProps"],[248,33,518,6],[248,34,518,30],[249,0,518,32,"initialRegion"],[249,12,518,32,"initialRegion"],[249,25,518,45],[249,27,518,32,"initialRegion"],[250,0,518,30],[250,11,518,6],[251,0,519,5],[253,0,520,4],[253,13,520,9,"_updateStyle"],[253,25,520,4],[255,0,521,4],[255,13,521,9,"setState"],[255,21,521,4],[255,22,521,18],[256,0,521,20,"isReady"],[256,10,521,20,"isReady"],[256,17,521,27],[256,19,521,29],[257,0,521,18],[257,9,521,4],[257,11,521,37],[257,23,521,43],[258,0,522,6],[258,14,522,10,"onMapReady"],[258,24,522,6],[258,26,522,22,"onMapReady"],[258,36,522,32],[259,0,523,5],[259,9,521,4],[260,0,524,3],[263,32,526,12,"e"],[263,33],[263,35,526,15],[264,0,526,15],[264,12,527,12,"layout"],[264,18,526,15],[264,21,527,23,"e"],[264,22,527,24],[264,23,527,25,"nativeEvent"],[264,34,526,15],[264,35,527,12,"layout"],[264,41,526,15],[265,0,528,4],[265,12,528,8],[265,13,528,9,"layout"],[265,19,528,15],[265,20,528,16,"width"],[265,25,528,8],[265,29,528,25],[265,30,528,26,"layout"],[265,36,528,32],[265,37,528,33,"height"],[265,43,528,4],[265,45,528,41],[267,0,529,4],[267,12,529,8],[267,17,529,13,"state"],[267,22,529,8],[267,23,529,19,"isReady"],[267,30,529,8],[267,34,529,30],[267,35,529,31],[267,40,529,36,"__layoutCalled"],[267,54,529,4],[267,56,529,52],[268,0,529,52],[268,29,530,40],[268,34,530,45,"props"],[268,39,529,52],[269,0,529,52],[269,14,530,14,"region"],[269,20,529,52],[269,36,530,14,"region"],[269,42,529,52],[270,0,529,52],[270,14,530,22,"initialRegion"],[270,27,529,52],[270,43,530,22,"initialRegion"],[270,56,529,52],[272,0,531,6],[272,14,531,10,"region"],[272,20,531,6],[272,22,531,18],[273,0,532,8],[273,17,532,13,"__layoutCalled"],[273,31,532,8],[273,34,532,30],[273,38,532,8],[274,0,533,8],[274,17,533,13,"map"],[274,20,533,8],[274,21,533,17,"setNativeProps"],[274,35,533,8],[274,36,533,32],[275,0,533,34,"region"],[275,14,533,34,"region"],[275,20,533,40],[275,22,533,34,"region"],[276,0,533,32],[276,13,533,8],[277,0,534,7],[277,11,531,6],[277,17,534,13],[277,21,534,17,"initialRegion"],[277,34,534,13],[277,36,534,32],[278,0,535,8],[278,17,535,13,"__layoutCalled"],[278,31,535,8],[278,34,535,30],[278,38,535,8],[279,0,536,8],[279,17,536,13,"map"],[279,20,536,8],[279,21,536,17,"setNativeProps"],[279,35,536,8],[279,36,536,32],[280,0,536,34,"initialRegion"],[280,14,536,34,"initialRegion"],[280,27,536,47],[280,29,536,34,"initialRegion"],[281,0,536,32],[281,13,536,8],[282,0,537,7],[283,0,538,5],[285,0,539,4],[285,12,539,8],[285,17,539,13,"props"],[285,22,539,8],[285,23,539,19,"onLayout"],[285,31,539,4],[285,33,539,29],[286,0,540,6],[286,15,540,11,"props"],[286,20,540,6],[286,21,540,17,"onLayout"],[286,29,540,6],[286,30,540,26,"e"],[286,31,540,6],[287,0,541,5],[288,0,542,3],[291,37,544,17,"event"],[291,42],[291,44,544,24],[292,0,545,4],[292,12,545,8],[292,17,545,13,"props"],[292,22,545,8],[292,23,545,19,"onMarkerPress"],[292,36,545,4],[292,38,545,34],[293,0,546,6],[293,15,546,11,"props"],[293,20,546,6],[293,21,546,17,"onMarkerPress"],[293,34,546,6],[293,35,546,31,"event"],[293,40,546,36],[293,41,546,37,"nativeEvent"],[293,52,546,6],[294,0,547,5],[295,0,548,3],[298,32,550,12,"event"],[298,37],[298,39,550,19],[299,0,551,4],[299,13,551,9,"__lastRegion"],[299,25,551,4],[299,28,551,24,"event"],[299,33,551,29],[299,34,551,30,"nativeEvent"],[299,45,551,24],[299,46,551,42,"region"],[299,52,551,4],[301,0,552,4],[301,12,552,8,"event"],[301,17,552,13],[301,18,552,14,"nativeEvent"],[301,29,552,8],[301,30,552,26,"continuous"],[301,40,552,4],[301,42,552,38],[302,0,553,6],[302,14,553,10],[302,19,553,15,"props"],[302,24,553,10],[302,25,553,21,"onRegionChange"],[302,39,553,6],[302,41,553,37],[303,0,554,8],[303,17,554,13,"props"],[303,22,554,8],[303,23,554,19,"onRegionChange"],[303,37,554,8],[303,38,554,34,"event"],[303,43,554,39],[303,44,554,40,"nativeEvent"],[303,55,554,34],[303,56,554,52,"region"],[303,62,554,8],[304,0,555,7],[305,0,556,5],[305,9,552,4],[305,15,556,11],[305,19,556,15],[305,24,556,20,"props"],[305,29,556,15],[305,30,556,26,"onRegionChangeComplete"],[305,52,556,11],[305,54,556,50],[306,0,557,6],[306,15,557,11,"props"],[306,20,557,6],[306,21,557,17,"onRegionChangeComplete"],[306,43,557,6],[306,44,557,40,"event"],[306,49,557,45],[306,50,557,46,"nativeEvent"],[306,61,557,40],[306,62,557,58,"region"],[306,68,557,6],[307,0,558,5],[308,0,559,3],[311,42,561,22,"location"],[311,50],[311,52,561,32,"bearing"],[311,59],[311,61,561,41,"angle"],[311,66],[311,68,561,48,"duration"],[311,76],[311,78,561,58],[312,0,562,4],[312,13,562,9,"_runCommand"],[312,24,562,4],[312,25,562,21],[312,46,562,4],[312,48,562,44],[312,49,562,45,"location"],[312,57,562,44],[312,59,562,55,"bearing"],[312,66,562,44],[312,68,562,64,"angle"],[312,73,562,44],[312,75,562,71,"duration"],[312,83,562,79],[312,87,562,83],[312,90,562,44],[312,91,562,4],[313,0,563,3],[316,38,565,18,"region"],[316,44],[316,46,565,26,"duration"],[316,54],[316,56,565,36],[317,0,566,4],[317,13,566,9,"_runCommand"],[317,24,566,4],[317,25,566,21],[317,42,566,4],[317,44,566,40],[317,45,566,41,"region"],[317,51,566,40],[317,53,566,49,"duration"],[317,61,566,57],[317,65,566,61],[317,68,566,40],[317,69,566,4],[318,0,567,3],[321,42,569,22,"latLng"],[321,48],[321,50,569,30,"duration"],[321,58],[321,60,569,40],[322,0,570,4],[322,13,570,9,"_runCommand"],[322,24,570,4],[322,25,570,21],[322,46,570,4],[322,48,570,44],[322,49,570,45,"latLng"],[322,55,570,44],[322,57,570,53,"duration"],[322,65,570,61],[322,69,570,65],[322,72,570,44],[322,73,570,4],[323,0,571,3],[326,39,573,19,"bearing"],[326,46],[326,48,573,28,"duration"],[326,56],[326,58,573,38],[327,0,574,4],[327,13,574,9,"_runCommand"],[327,24,574,4],[327,25,574,21],[327,43,574,4],[327,45,574,41],[327,46,574,42,"bearing"],[327,53,574,41],[327,55,574,51,"duration"],[327,63,574,59],[327,67,574,63],[327,70,574,41],[327,71,574,4],[328,0,575,3],[331,44,577,24,"angle"],[331,49],[331,51,577,31,"duration"],[331,59],[331,61,577,41],[332,0,578,4],[332,13,578,9,"_runCommand"],[332,24,578,4],[332,25,578,21],[332,48,578,4],[332,50,578,46],[332,51,578,47,"angle"],[332,56,578,46],[332,58,578,54,"duration"],[332,66,578,62],[332,70,578,66],[332,73,578,46],[332,74,578,4],[333,0,579,3],[336,36,581,16,"animated"],[336,44],[336,46,581,26],[337,0,582,4],[337,13,582,9,"_runCommand"],[337,24,582,4],[337,25,582,21],[337,40,582,4],[337,42,582,38],[337,43,582,39,"animated"],[337,51,582,38],[337,52,582,4],[338,0,583,3],[341,43,585,23,"markers"],[341,50],[341,52,585,46],[342,0,585,46],[342,12,585,32,"options"],[342,19,585,46],[342,90,585,42],[342,92,585,46],[343,0,585,46],[343,35,589,8,"options"],[343,42,585,46],[343,43,587,6,"edgePadding"],[343,54,585,46],[344,0,585,46],[344,12,587,6,"edgePadding"],[344,23,585,46],[344,60,587,20],[345,0,587,22,"top"],[345,10,587,22,"top"],[345,13,587,25],[345,15,587,27],[345,16,587,20],[346,0,587,30,"right"],[346,10,587,30,"right"],[346,15,587,35],[346,17,587,37],[346,18,587,20],[347,0,587,40,"bottom"],[347,10,587,40,"bottom"],[347,16,587,46],[347,18,587,48],[347,19,587,20],[348,0,587,51,"left"],[348,10,587,51,"left"],[348,14,587,55],[348,16,587,57],[349,0,587,20],[349,9,585,46],[350,0,585,46],[350,32,589,8,"options"],[350,39,585,46],[350,40,588,6,"animated"],[350,48,585,46],[351,0,585,46],[351,12,588,6,"animated"],[351,20,585,46],[351,54,588,17],[351,58,585,46],[353,0,591,4],[353,13,591,9,"_runCommand"],[353,24,591,4],[353,25,591,21],[353,47,591,4],[353,49,591,45],[353,50,591,46,"markers"],[353,57,591,45],[353,59,591,55,"edgePadding"],[353,70,591,45],[353,72,591,68,"animated"],[353,80,591,45],[353,81,591,4],[354,0,592,3],[357,41,594,51],[358,0,594,51],[358,12,594,19,"coordinates"],[358,23,594,51],[358,94,594,33],[358,96,594,51],[359,0,594,51],[359,12,594,37,"options"],[359,19,594,51],[359,90,594,47],[359,92,594,51],[360,0,594,51],[360,36,598,8,"options"],[360,43,594,51],[360,44,596,6,"edgePadding"],[360,55,594,51],[361,0,594,51],[361,12,596,6,"edgePadding"],[361,23,594,51],[361,61,596,20],[362,0,596,22,"top"],[362,10,596,22,"top"],[362,13,596,25],[362,15,596,27],[362,16,596,20],[363,0,596,30,"right"],[363,10,596,30,"right"],[363,15,596,35],[363,17,596,37],[363,18,596,20],[364,0,596,40,"bottom"],[364,10,596,40,"bottom"],[364,16,596,46],[364,18,596,48],[364,19,596,20],[365,0,596,51,"left"],[365,10,596,51,"left"],[365,14,596,55],[365,16,596,57],[366,0,596,20],[366,9,594,51],[367,0,594,51],[367,33,598,8,"options"],[367,40,594,51],[367,41,597,6,"animated"],[367,49,594,51],[368,0,594,51],[368,12,597,6,"animated"],[368,20,594,51],[368,55,597,17],[368,59,594,51],[370,0,600,4],[370,13,600,9,"_runCommand"],[370,24,600,4],[370,25,600,21],[370,43,600,4],[370,45,600,41],[370,46,600,42,"coordinates"],[370,57,600,41],[370,59,600,55,"edgePadding"],[370,70,600,41],[370,72,600,68,"animated"],[370,80,600,41],[370,81,600,4],[371,0,601,3],[374,39,603,19,"northEast"],[374,48],[374,50,603,30,"southWest"],[374,59],[374,61,603,41],[375,0,604,4],[375,13,604,9,"_runCommand"],[375,24,604,4],[375,25,604,21],[375,43,604,4],[375,45,604,41],[375,46,604,42,"northEast"],[375,55,604,41],[375,57,604,53,"southWest"],[375,66,604,41],[375,67,604,4],[376,0,605,3],[379,48,607,28,"activeLevelIndex"],[379,64],[379,66,607,46],[380,0,608,4],[380,13,608,9,"_runCommand"],[380,24,608,4],[380,25,608,21],[380,52,608,4],[380,54,608,50],[380,55,608,51,"activeLevelIndex"],[380,71,608,50],[380,72,608,4],[381,0,609,3],[384,35,625,15,"args"],[384,39],[384,41,625,21],[385,0,625,21],[387,0,629,4],[387,12,629,8,"Platform"],[387,34,629,17,"OS"],[387,36,629,8],[387,41,629,24],[387,46,629,8],[387,50,629,34,"arguments"],[387,59,629,43],[387,60,629,44,"length"],[387,66,629,34],[387,71,629,55],[387,72,629,4],[387,74,629,59],[388,0,630,6,"console"],[388,10,630,6,"console"],[388,17,630,13],[388,18,630,14,"warn"],[388,22,630,6],[388,23,630,19],[388,101,630,6],[389,0,631,6],[389,14,631,12,"width"],[389,19,631,17],[389,22,631,20,"arguments"],[389,31,631,29],[389,32,631,30],[389,33,631,29],[389,34,631,6],[390,0,632,6],[390,14,632,12,"height"],[390,20,632,18],[390,23,632,21,"arguments"],[390,32,632,30],[390,33,632,31],[390,34,632,30],[390,35,632,6],[391,0,633,6],[391,14,633,12,"region"],[391,20,633,18],[391,23,633,21,"arguments"],[391,32,633,30],[391,33,633,31],[391,34,633,30],[391,35,633,6],[392,0,634,6],[392,14,634,12,"callback"],[392,22,634,20],[392,25,634,23,"arguments"],[392,34,634,32],[392,35,634,33],[392,36,634,32],[392,37,634,6],[394,0,635,6],[394,15,635,11,"_runCommand"],[394,26,635,6],[394,27,635,23],[394,41,635,6],[394,43,635,39],[394,44,636,8,"width"],[394,49,636,13],[394,53,636,17],[394,54,635,39],[394,56,637,8,"height"],[394,62,637,14],[394,66,637,18],[394,67,635,39],[394,69,638,8,"region"],[394,75,638,14],[394,79,638,18],[394,81,635,39],[394,83,639,8],[394,88,635,39],[394,90,640,8],[394,91,635,39],[394,93,641,8],[394,101,635,39],[394,103,642,8,"callback"],[394,111,635,39],[394,112,635,6],[396,0,644,6],[396,17,644,13,"undefined"],[396,26,644,6],[397,0,645,5],[399,0,648,4],[399,12,648,10,"config"],[399,18,648,16],[399,21,648,19],[400,0,649,6,"width"],[400,10,649,6,"width"],[400,15,649,11],[400,17,649,13,"args"],[400,21,649,17],[400,22,649,18,"width"],[400,27,649,13],[400,31,649,27],[400,32,648,19],[401,0,650,6,"height"],[401,10,650,6,"height"],[401,16,650,12],[401,18,650,14,"args"],[401,22,650,18],[401,23,650,19,"height"],[401,29,650,14],[401,33,650,29],[401,34,648,19],[402,0,651,6,"region"],[402,10,651,6,"region"],[402,16,651,12],[402,18,651,14,"args"],[402,22,651,18],[402,23,651,19,"region"],[402,29,651,14],[402,33,651,29],[402,35,648,19],[403,0,652,6,"format"],[403,10,652,6,"format"],[403,16,652,12],[403,18,652,14,"args"],[403,22,652,18],[403,23,652,19,"format"],[403,29,652,14],[403,33,652,29],[403,38,648,19],[404,0,653,6,"quality"],[404,10,653,6,"quality"],[404,17,653,13],[404,19,653,15,"args"],[404,23,653,19],[404,24,653,20,"quality"],[404,31,653,15],[404,35,653,31],[404,38,648,19],[405,0,654,6,"result"],[405,10,654,6,"result"],[405,16,654,12],[405,18,654,14,"args"],[405,22,654,18],[405,23,654,19,"result"],[405,29,654,14],[405,33,654,29],[406,0,648,19],[406,9,648,4],[407,0,656,4],[407,12,656,9,"config"],[407,18,656,15],[407,19,656,16,"format"],[407,25,656,9],[407,30,656,27],[407,35,656,8],[407,39,657,9,"config"],[407,45,657,15],[407,46,657,16,"format"],[407,52,657,9],[407,57,657,27],[407,62,656,4],[407,64,657,35],[407,70,657,41],[407,74,657,45,"Error"],[407,79,657,41],[407,80,657,51],[407,106,657,41],[407,107,657,35],[408,0,658,4],[408,12,658,9,"config"],[408,18,658,15],[408,19,658,16,"result"],[408,25,658,9],[408,30,658,27],[408,36,658,8],[408,40,659,9,"config"],[408,46,659,15],[408,47,659,16,"result"],[408,53,659,9],[408,58,659,27],[408,66,658,4],[408,68,659,38],[408,74,659,44],[408,78,659,48,"Error"],[408,83,659,44],[408,84,659,54],[408,110,659,44],[408,111,659,38],[410,0,662,4],[410,12,662,8,"Platform"],[410,34,662,17,"OS"],[410,36,662,8],[410,41,662,24],[410,50,662,4],[410,52,662,35],[411,0,663,6],[411,17,663,13,"NativeModules"],[411,44,663,27,"AirMapModule"],[411,56,663,13],[411,57,663,40,"takeSnapshot"],[411,69,663,13],[411,70,663,53],[411,75,663,58,"_getHandle"],[411,85,663,53],[411,87,663,13],[411,89,663,72,"config"],[411,95,663,13],[411,96,663,6],[412,0,664,5],[412,9,662,4],[412,15,664,11],[412,19,664,15,"Platform"],[412,41,664,24,"OS"],[412,43,664,15],[412,48,664,31],[412,53,664,11],[412,55,664,38],[413,0,665,6],[413,17,665,13],[413,21,665,17,"Promise"],[413,28,665,13],[413,29,665,25],[413,39,665,26,"resolve"],[413,46,665,25],[413,48,665,35,"reject"],[413,54,665,25],[413,56,665,46],[414,0,666,8],[414,12,666,8],[414,18,666,12],[414,19,666,13,"_runCommand"],[414,30,666,8],[414,31,666,25],[414,45,666,8],[414,47,666,41],[414,48,667,10,"config"],[414,54,667,16],[414,55,667,17,"width"],[414,60,666,41],[414,62,668,10,"config"],[414,68,668,16],[414,69,668,17,"height"],[414,75,666,41],[414,77,669,10,"config"],[414,83,669,16],[414,84,669,17,"region"],[414,90,666,41],[414,92,670,10,"config"],[414,98,670,16],[414,99,670,17,"format"],[414,105,666,41],[414,107,671,10,"config"],[414,113,671,16],[414,114,671,17,"quality"],[414,121,666,41],[414,123,672,10,"config"],[414,129,672,16],[414,130,672,17,"result"],[414,136,666,41],[414,138,673,10],[414,148,673,11,"err"],[414,151,673,10],[414,153,673,16,"snapshot"],[414,161,673,10],[414,163,673,29],[415,0,674,12],[415,18,674,16,"err"],[415,21,674,12],[415,23,674,21],[416,0,675,14,"reject"],[416,16,675,14,"reject"],[416,22,675,20],[416,23,675,21,"err"],[416,26,675,20],[416,27,675,14],[417,0,676,13],[417,15,674,12],[417,21,676,19],[418,0,677,14,"resolve"],[418,16,677,14,"resolve"],[418,23,677,21],[418,24,677,22,"snapshot"],[418,32,677,21],[418,33,677,14],[419,0,678,13],[420,0,679,11],[420,13,666,41],[420,14,666,8],[421,0,681,7],[421,11,665,13],[421,12,665,6],[422,0,682,5],[424,0,683,4],[424,15,683,11,"Promise"],[424,22,683,18],[424,23,683,19,"reject"],[424,29,683,11],[424,30,683,26],[424,75,683,11],[424,76,683,4],[425,0,684,3],[428,41,695,21,"coordinate"],[428,51],[428,53,695,33],[429,0,696,4],[429,12,696,8,"Platform"],[429,34,696,17,"OS"],[429,36,696,8],[429,41,696,24],[429,50,696,4],[429,52,696,35],[430,0,697,6],[430,17,697,13,"NativeModules"],[430,44,697,27,"AirMapModule"],[430,56,697,13],[430,57,697,40,"pointForCoordinate"],[430,75,697,13],[430,76,697,59],[430,81,697,64,"_getHandle"],[430,91,697,59],[430,93,697,13],[430,95,697,78,"coordinate"],[430,105,697,13],[430,106,697,6],[431,0,698,5],[431,9,696,4],[431,15,698,11],[431,19,698,15,"Platform"],[431,41,698,24,"OS"],[431,43,698,15],[431,48,698,31],[431,53,698,11],[431,55,698,38],[432,0,699,6],[432,17,699,13],[432,22,699,18,"_runCommand"],[432,33,699,13],[432,34,699,30],[432,54,699,13],[432,56,699,52],[432,57,699,53,"coordinate"],[432,67,699,52],[432,68,699,13],[432,69,699,6],[433,0,700,5],[435,0,701,4],[435,15,701,11,"Promise"],[435,22,701,18],[435,23,701,19,"reject"],[435,29,701,11],[435,30,701,26],[435,81,701,11],[435,82,701,4],[436,0,702,3],[439,41,713,21,"point"],[439,46],[439,48,713,28],[440,0,714,4],[440,12,714,8,"Platform"],[440,34,714,17,"OS"],[440,36,714,8],[440,41,714,24],[440,50,714,4],[440,52,714,35],[441,0,715,6],[441,17,715,13,"NativeModules"],[441,44,715,27,"AirMapModule"],[441,56,715,13],[441,57,715,40,"coordinateForPoint"],[441,75,715,13],[441,76,715,59],[441,81,715,64,"_getHandle"],[441,91,715,59],[441,93,715,13],[441,95,715,78,"point"],[441,100,715,13],[441,101,715,6],[442,0,716,5],[442,9,714,4],[442,15,716,11],[442,19,716,15,"Platform"],[442,41,716,24,"OS"],[442,43,716,15],[442,48,716,31],[442,53,716,11],[442,55,716,38],[443,0,717,6],[443,17,717,13],[443,22,717,18,"_runCommand"],[443,33,717,13],[443,34,717,30],[443,54,717,13],[443,56,717,52],[443,57,717,53,"point"],[443,62,717,52],[443,63,717,13],[443,64,717,6],[444,0,718,5],[446,0,719,4],[446,15,719,11,"Promise"],[446,22,719,18],[446,23,719,19,"reject"],[446,29,719,11],[446,30,719,26],[446,81,719,11],[446,82,719,4],[447,0,720,3],[450,40,722,20,"name"],[450,44],[450,46,722,26],[451,0,723,4],[451,15,723,11,"NativeModules"],[451,42,723,25,"UIManager"],[451,51,723,11],[451,52,723,35],[451,93,723,49],[451,98,723,54,"props"],[451,103,723,49],[451,104,723,60,"provider"],[451,112,723,35],[451,113,723,11],[451,115,723,71,"Commands"],[451,123,723,11],[451,124,723,80,"name"],[451,128,723,11],[451,129,723,4],[452,0,724,3],[455,41,726,21,"name"],[455,45],[455,47,726,27],[456,0,727,4],[456,15,727,11,"NativeModules"],[456,42,727,28],[456,83,727,42],[456,88,727,47,"props"],[456,93,727,42],[456,94,727,53,"provider"],[456,102,727,28],[456,103,727,11],[456,117,727,73,"name"],[456,121,727,11],[456,122,727,4],[457,0,728,3],[460,35,730,15],[461,0,731,4],[461,15,731,11],[461,48,731,26],[461,53,731,31,"map"],[461,56,731,11],[461,57,731,4],[462,0,732,3],[465,34,734,14,"name"],[465,38],[465,40,734,20,"args"],[465,44],[465,46,734,26],[466,0,735,4],[466,16,735,12,"Platform"],[466,38,735,21,"OS"],[466,40,735,4],[467,0,736,6],[467,15,736,11],[467,24,736,6],[468,0,737,8],[468,19,737,15,"NativeModules"],[468,46,737,29,"UIManager"],[468,55,737,15],[468,56,737,39,"dispatchViewManagerCommand"],[468,82,737,15],[468,83,738,10],[468,88,738,15,"_getHandle"],[468,98,738,10],[468,100,737,15],[468,102,739,10],[468,107,739,15,"_uiManagerCommand"],[468,124,739,10],[468,125,739,33,"name"],[468,129,739,10],[468,130,737,15],[468,132,740,10,"args"],[468,136,737,15],[468,137,737,8],[470,0,743,6],[470,15,743,11],[470,20,743,6],[471,0,744,8],[471,19,744,15],[471,24,744,20,"_mapManagerCommand"],[471,42,744,15],[471,43,744,39,"name"],[471,47,744,15],[471,64,744,45],[471,69,744,50,"_getHandle"],[471,79,744,45],[471,81,744,15],[471,109,744,67,"args"],[471,113,744,15],[471,116,744,8],[473,0,746,6],[474,0,747,8],[474,19,747,15,"Promise"],[474,26,747,22],[474,27,747,23,"reject"],[474,33,747,15],[474,68,747,62,"Platform"],[474,90,747,71,"OS"],[474,92,747,15],[474,93,747,8],[475,0,735,4],[476,0,749,3],[479,31,751,11],[480,0,751,11],[482,0,752,4],[482,12,752,8,"props"],[482,17,752,4],[484,0,754,4],[484,12,754,8],[484,17,754,13,"state"],[484,22,754,8],[484,23,754,19,"isReady"],[484,30,754,4],[484,32,754,28],[485,0,755,6,"props"],[485,10,755,6,"props"],[485,15,755,11],[486,0,756,8,"region"],[486,12,756,8,"region"],[486,18,756,14],[486,20,756,16],[486,24,755,11],[487,0,757,8,"initialRegion"],[487,12,757,8,"initialRegion"],[487,25,757,21],[487,27,757,23],[487,31,755,11],[488,0,758,8,"onMarkerPress"],[488,12,758,8,"onMarkerPress"],[488,25,758,21],[488,27,758,23],[488,32,758,28,"_onMarkerPress"],[488,46,755,11],[489,0,759,8,"onChange"],[489,12,759,8,"onChange"],[489,20,759,16],[489,22,759,18],[489,27,759,23,"_onChange"],[489,36,755,11],[490,0,760,8,"onMapReady"],[490,12,760,8,"onMapReady"],[490,22,760,18],[490,24,760,20],[490,29,760,25,"_onMapReady"],[490,40,755,11],[491,0,761,8,"onLayout"],[491,12,761,8,"onLayout"],[491,20,761,16],[491,22,761,18],[491,27,761,23,"_onLayout"],[492,0,755,11],[492,13,762,11],[492,18,762,16,"props"],[492,23,755,11],[492,24,755,6],[494,0,764,6],[494,14,764,10,"Platform"],[494,36,764,19,"OS"],[494,38,764,10],[494,43,764,26],[494,48,764,10],[494,52,764,35,"props"],[494,57,764,40],[494,58,764,41,"provider"],[494,66,764,35],[494,71,764,54,"ProviderConstants"],[494,88,764,71],[494,89,764,72,"PROVIDER_DEFAULT"],[494,105,764,10],[494,109,765,11,"GOOGLE_MAPS_ONLY_TYPES"],[494,131,765,33],[494,132,765,34,"includes"],[494,140,765,11],[494,141,765,43,"props"],[494,146,765,48],[494,147,765,49,"mapType"],[494,154,765,11],[494,155,764,6],[494,157,765,59],[495,0,766,8,"props"],[495,12,766,8,"props"],[495,17,766,13],[495,18,766,14,"mapType"],[495,25,766,8],[495,28,766,24,"MAP_TYPES"],[495,37,766,33],[495,38,766,34,"standard"],[495,46,766,8],[496,0,767,7],[498,0,768,6,"props"],[498,10,768,6,"props"],[498,15,768,11],[498,16,768,12,"handlePanDrag"],[498,29,768,6],[498,32,768,28],[498,33,768,29],[498,34,768,30,"props"],[498,39,768,35],[498,40,768,36,"onPanDrag"],[498,49,768,6],[499,0,769,5],[499,9,754,4],[499,15,769,11],[500,0,770,6,"props"],[500,10,770,6,"props"],[500,15,770,11],[500,18,770,14],[501,0,771,8,"style"],[501,12,771,8,"style"],[501,17,771,13],[501,19,771,15],[501,24,771,20,"props"],[501,29,771,15],[501,30,771,26,"style"],[501,35,770,14],[502,0,772,8,"region"],[502,12,772,8,"region"],[502,18,772,14],[502,20,772,16],[502,24,770,14],[503,0,773,8,"initialRegion"],[503,12,773,8,"initialRegion"],[503,25,773,21],[503,27,773,23],[503,31,770,14],[504,0,774,8,"onMarkerPress"],[504,12,774,8,"onMarkerPress"],[504,25,774,21],[504,27,774,23],[504,32,774,28,"_onMarkerPress"],[504,46,770,14],[505,0,775,8,"onChange"],[505,12,775,8,"onChange"],[505,20,775,16],[505,22,775,18],[505,27,775,23,"_onChange"],[505,36,770,14],[506,0,776,8,"onMapReady"],[506,12,776,8,"onMapReady"],[506,22,776,18],[506,24,776,20],[506,29,776,25,"_onMapReady"],[506,40,770,14],[507,0,777,8,"onLayout"],[507,12,777,8,"onLayout"],[507,20,777,16],[507,22,777,18],[507,27,777,23,"_onLayout"],[508,0,770,14],[508,11,770,6],[509,0,779,5],[511,0,781,4],[511,12,781,8,"Platform"],[511,34,781,17,"OS"],[511,36,781,8],[511,41,781,24],[511,50,781,8],[511,54,781,37],[511,59,781,42,"props"],[511,64,781,37],[511,65,781,48,"liteMode"],[511,73,781,4],[511,75,781,58],[512,0,782,6],[512,17,783,8],[512,46,783,9],[512,56,783,8],[513,0,784,10],[513,12,784,10],[513,15,784,13],[513,17,784,15],[513,30,784,15,"ref"],[513,34,784,18],[513,36,784,22],[514,0,784,24],[514,14,784,24],[514,20,784,28],[514,21,784,29,"map"],[514,24,784,24],[514,27,784,35,"ref"],[514,31,784,24],[515,0,784,41],[516,0,783,8],[516,13,785,14,"props"],[516,18,783,8],[517,0,783,8],[518,0,783,8],[519,0,783,8],[520,0,783,8],[521,0,783,8],[521,13,782,6],[522,0,788,5],[524,0,790,4],[524,12,790,10,"AIRMap"],[524,18,790,16],[524,21,790,19,"getAirMapComponent"],[524,39,790,37],[524,40,790,38],[524,45,790,43,"props"],[524,50,790,38],[524,51,790,49,"provider"],[524,59,790,37],[524,60,790,4],[525,0,792,4],[525,15,793,6],[525,44,793,7],[525,50,793,6],[526,0,794,8],[526,10,794,8],[526,13,794,11],[526,15,794,13],[526,28,794,13,"ref"],[526,33,794,16],[526,35,794,20],[527,0,794,22],[527,12,794,22],[527,18,794,26],[527,19,794,27,"map"],[527,22,794,22],[527,25,794,33,"ref"],[527,30,794,22],[528,0,794,39],[529,0,793,6],[529,11,795,12,"props"],[529,16,793,6],[530,0,793,6],[531,0,793,6],[532,0,793,6],[533,0,793,6],[534,0,793,6],[534,11,792,4],[535,0,798,3],[539,4,469,22,"React"],[539,19,469,28,"Component"],[539,28],[542,0,801,0,"MapView"],[542,2,801,0,"MapView"],[542,9,801,7],[542,10,801,8,"propTypes"],[542,19,801,0],[542,22,801,20,"propTypes"],[542,31,801,0],[543,0,802,0,"MapView"],[543,2,802,0,"MapView"],[543,9,802,7],[543,10,802,8,"viewConfig"],[543,20,802,0],[543,23,802,21,"viewConfig"],[543,33,802,0],[544,0,803,0,"MapView"],[544,2,803,0,"MapView"],[544,9,803,7],[544,10,803,8,"childContextTypes"],[544,27,803,0],[544,30,803,28,"childContextTypes"],[544,64,803,0],[545,0,805,0,"MapView"],[545,2,805,0,"MapView"],[545,9,805,7],[545,10,805,8,"MAP_TYPES"],[545,19,805,0],[545,22,805,20,"MAP_TYPES"],[545,31,805,0],[547,0,807,0],[547,6,807,6,"nativeComponent"],[547,21,807,21],[547,24,807,24],[547,33,807,6,"nativeComponent"],[547,48,807,24],[547,49,807,24,"Component"],[547,58,807,33],[548,0,807,33],[548,11,807,37],[548,52,807,60,"Component"],[548,61,807,37],[548,63,807,71,"MapView"],[548,70,807,37],[548,72,807,80],[549,0,808,2,"nativeOnly"],[549,6,808,2,"nativeOnly"],[549,16,808,12],[549,18,808,14],[550,0,809,4,"onChange"],[550,8,809,4,"onChange"],[550,16,809,12],[550,18,809,14],[550,22,808,14],[551,0,810,4,"onMapReady"],[551,8,810,4,"onMapReady"],[551,18,810,14],[551,20,810,16],[551,24,808,14],[552,0,811,4,"onKmlReady"],[552,8,811,4,"onKmlReady"],[552,18,811,14],[552,20,811,16],[552,24,808,14],[553,0,812,4,"handlePanDrag"],[553,8,812,4,"handlePanDrag"],[553,21,812,17],[553,23,812,19],[554,0,808,14],[555,0,807,80],[555,5,807,37],[555,6,807,33],[556,0,807,33],[556,3,807,0],[558,0,815,0],[558,6,815,6,"airMaps"],[558,13,815,13],[558,16,815,16],[559,0,816,2,"default"],[559,4,816,2,"default"],[559,11,816,9],[559,13,816,11,"nativeComponent"],[559,28,816,26],[559,29,816,27],[559,37,816,26],[560,0,815,16],[560,3,815,0],[562,0,818,0],[562,6,818,4,"Platform"],[562,28,818,13,"OS"],[562,30,818,4],[562,35,818,20],[562,44,818,0],[562,46,818,31],[563,0,819,2,"airMaps"],[563,4,819,2,"airMaps"],[563,11,819,9],[563,12,819,10,"google"],[563,18,819,2],[563,21,819,19,"airMaps"],[563,28,819,26],[563,29,819,27,"default"],[563,36,819,2],[564,0,820,1],[564,3,818,0],[564,9,820,7],[565,0,821,2,"airMaps"],[565,4,821,2,"airMaps"],[565,11,821,9],[565,12,821,10,"google"],[565,18,821,2],[565,21,821,19,"googleMapIsInstalled"],[565,66,821,42,"nativeComponent"],[565,81,821,57],[565,82,821,58],[565,96,821,57],[565,97,821,19],[565,100,822,4],[565,155,822,32],[565,259,822,4],[565,260,821,2],[566,0,823,1],[568,0,824,0],[568,6,824,6,"getAirMapComponent"],[568,24,824,24],[568,27,824,27],[568,36,824,6,"getAirMapComponent"],[568,54,824,27],[568,55,824,27,"provider"],[568,63,824,35],[569,0,824,35],[569,11,824,39,"airMaps"],[569,18,824,46],[569,19,824,47,"provider"],[569,27,824,55],[569,31,824,59],[569,40,824,46],[569,41,824,35],[570,0,824,35],[570,3,824,0],[572,0,826,0],[572,6,826,6,"AIRMapLite"],[572,16,826,16],[572,19,826,19,"NativeModules"],[572,46,826,33,"UIManager"],[572,55,826,19],[572,56,826,43,"AIRMapLite"],[572,66,826,19],[572,70,827,2],[572,111,827,25],[572,123,827,2],[572,125,827,39,"MapView"],[572,132,827,2],[572,134,827,48],[573,0,828,4,"nativeOnly"],[573,4,828,4,"nativeOnly"],[573,14,828,14],[573,16,828,16],[574,0,829,6,"onChange"],[574,6,829,6,"onChange"],[574,14,829,14],[574,16,829,16],[574,20,828,16],[575,0,830,6,"onMapReady"],[575,6,830,6,"onMapReady"],[575,16,830,16],[575,18,830,18],[575,22,828,16],[576,0,831,6,"handlePanDrag"],[576,6,831,6,"handlePanDrag"],[576,19,831,19],[576,21,831,21],[577,0,828,16],[578,0,827,48],[578,3,827,2],[578,4,826,0],[580,0,835,7],[580,6,835,13,"Animated"],[580,14,835,21],[580,17,835,24,"RNAnimated"],[580,39,835,35,"createAnimatedComponent"],[580,62,835,24],[580,63,835,59,"MapView"],[580,70,835,24],[580,71,835,7],[584,0,837,7],[584,6,837,13,"ProviderPropType"],[584,22,837,29],[584,25,837,32,"PropTypes"],[584,44,837,42,"oneOf"],[584,49,837,32],[584,50,837,48,"Object"],[584,56,837,54],[584,57,837,55,"values"],[584,63,837,48],[584,64,837,62,"ProviderConstants"],[584,81,837,48],[584,82,837,32],[584,83,837,7],[587,0,847,0,"MapView"],[587,2,847,0,"MapView"],[587,9,847,7],[587,10,847,8,"Marker"],[587,16,847,0],[587,19,847,17,"MapMarker"],[587,37,847,0],[588,0,848,0,"MapView"],[588,2,848,0,"MapView"],[588,9,848,7],[588,10,848,8,"Polyline"],[588,18,848,0],[588,21,848,19,"MapPolyline"],[588,41,848,0],[589,0,849,0,"MapView"],[589,2,849,0,"MapView"],[589,9,849,7],[589,10,849,8,"Polygon"],[589,17,849,0],[589,20,849,18,"MapPolygon"],[589,39,849,0],[590,0,850,0,"MapView"],[590,2,850,0,"MapView"],[590,9,850,7],[590,10,850,8,"Circle"],[590,16,850,0],[590,19,850,17,"MapCircle"],[590,37,850,0],[591,0,851,0,"MapView"],[591,2,851,0,"MapView"],[591,9,851,7],[591,10,851,8,"UrlTile"],[591,17,851,0],[591,20,851,18,"MapUrlTile"],[591,39,851,0],[592,0,852,0,"MapView"],[592,2,852,0,"MapView"],[592,9,852,7],[592,10,852,8,"LocalTile"],[592,19,852,0],[592,22,852,20,"MapLocalTile"],[592,43,852,0],[593,0,853,0,"MapView"],[593,2,853,0,"MapView"],[593,9,853,7],[593,10,853,8,"Overlay"],[593,17,853,0],[593,20,853,18,"MapOverlay"],[593,39,853,0],[594,0,854,0,"MapView"],[594,2,854,0,"MapView"],[594,9,854,7],[594,10,854,8,"Callout"],[594,17,854,0],[594,20,854,18,"MapCallout"],[594,39,854,0],[596,0,855,0],[596,11,855,14,"MapView"],[596,18,855,0],[596,20,855,23,"ProviderConstants"],[596,37,855,0],[598,0,856,0,"MapView"],[598,2,856,0,"MapView"],[598,9,856,7],[598,10,856,8,"ProviderPropType"],[598,26,856,0],[598,29,856,27,"ProviderPropType"],[598,45,856,0],[599,0,858,0,"MapView"],[599,2,858,0,"MapView"],[599,9,858,7],[599,10,858,8,"Animated"],[599,18,858,0],[599,21,858,19,"Animated"],[599,29,858,0],[600,0,859,0,"MapView"],[600,2,859,0,"MapView"],[600,9,859,7],[600,10,859,8,"AnimatedRegion"],[600,24,859,0],[600,27,859,25,"AnimatedRegion"],[600,50,859,0],[601,18,861,15,"MapView"],[601,25]]},"type":"js/module"}]}