{"dependencies":[{"name":"../AnimatedEvent","data":{"isAsync":false}},{"name":"./AnimatedNode","data":{"isAsync":false}},{"name":"./AnimatedStyle","data":{"isAsync":false}},{"name":"../NativeAnimatedHelper","data":{"isAsync":false}},{"name":"../../../Renderer/shims/ReactNative","data":{"isAsync":false}},{"name":"fbjs/lib/invariant","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\n  function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  var _require = _$$_REQUIRE(_dependencyMap[0], \"../AnimatedEvent\"),\n      AnimatedEvent = _require.AnimatedEvent;\n\n  var AnimatedNode = _$$_REQUIRE(_dependencyMap[1], \"./AnimatedNode\");\n\n  var AnimatedStyle = _$$_REQUIRE(_dependencyMap[2], \"./AnimatedStyle\");\n\n  var NativeAnimatedHelper = _$$_REQUIRE(_dependencyMap[3], \"../NativeAnimatedHelper\");\n\n  var ReactNative = _$$_REQUIRE(_dependencyMap[4], \"../../../Renderer/shims/ReactNative\");\n\n  var invariant = _$$_REQUIRE(_dependencyMap[5], \"fbjs/lib/invariant\");\n\n  var AnimatedProps = function (_AnimatedNode) {\n    _inherits(AnimatedProps, _AnimatedNode);\n\n    function AnimatedProps(props, callback) {\n      var _this;\n\n      _classCallCheck(this, AnimatedProps);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedProps).call(this));\n\n      if (props.style) {\n        props = _objectSpread({}, props, {\n          style: new AnimatedStyle(props.style)\n        });\n      }\n\n      _this._props = props;\n      _this._callback = callback;\n\n      _this.__attach();\n\n      return _this;\n    }\n\n    _createClass(AnimatedProps, [{\n      key: \"__getValue\",\n      value: function __getValue() {\n        var props = {};\n\n        for (var key in this._props) {\n          var value = this._props[key];\n\n          if (value instanceof AnimatedNode) {\n            if (!value.__isNative || value instanceof AnimatedStyle) {\n              props[key] = value.__getValue();\n            }\n          } else if (value instanceof AnimatedEvent) {\n            props[key] = value.__getHandler();\n          } else {\n            props[key] = value;\n          }\n        }\n\n        return props;\n      }\n    }, {\n      key: \"__getAnimatedValue\",\n      value: function __getAnimatedValue() {\n        var props = {};\n\n        for (var key in this._props) {\n          var value = this._props[key];\n\n          if (value instanceof AnimatedNode) {\n            props[key] = value.__getAnimatedValue();\n          }\n        }\n\n        return props;\n      }\n    }, {\n      key: \"__attach\",\n      value: function __attach() {\n        for (var key in this._props) {\n          var value = this._props[key];\n\n          if (value instanceof AnimatedNode) {\n            value.__addChild(this);\n          }\n        }\n      }\n    }, {\n      key: \"__detach\",\n      value: function __detach() {\n        if (this.__isNative && this._animatedView) {\n          this.__disconnectAnimatedView();\n        }\n\n        for (var key in this._props) {\n          var value = this._props[key];\n\n          if (value instanceof AnimatedNode) {\n            value.__removeChild(this);\n          }\n        }\n\n        _get(_getPrototypeOf(AnimatedProps.prototype), \"__detach\", this).call(this);\n      }\n    }, {\n      key: \"update\",\n      value: function update() {\n        this._callback();\n      }\n    }, {\n      key: \"__makeNative\",\n      value: function __makeNative() {\n        if (!this.__isNative) {\n          this.__isNative = true;\n\n          for (var key in this._props) {\n            var value = this._props[key];\n\n            if (value instanceof AnimatedNode) {\n              value.__makeNative();\n            }\n          }\n\n          if (this._animatedView) {\n            this.__connectAnimatedView();\n          }\n        }\n      }\n    }, {\n      key: \"setNativeView\",\n      value: function setNativeView(animatedView) {\n        if (this._animatedView === animatedView) {\n          return;\n        }\n\n        this._animatedView = animatedView;\n\n        if (this.__isNative) {\n          this.__connectAnimatedView();\n        }\n      }\n    }, {\n      key: \"__connectAnimatedView\",\n      value: function __connectAnimatedView() {\n        invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n        var nativeViewTag = ReactNative.findNodeHandle(this._animatedView);\n        invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n        NativeAnimatedHelper.API.connectAnimatedNodeToView(this.__getNativeTag(), nativeViewTag);\n      }\n    }, {\n      key: \"__disconnectAnimatedView\",\n      value: function __disconnectAnimatedView() {\n        invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n        var nativeViewTag = ReactNative.findNodeHandle(this._animatedView);\n        invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n        NativeAnimatedHelper.API.disconnectAnimatedNodeFromView(this.__getNativeTag(), nativeViewTag);\n      }\n    }, {\n      key: \"__getNativeConfig\",\n      value: function __getNativeConfig() {\n        var propsConfig = {};\n\n        for (var propKey in this._props) {\n          var value = this._props[propKey];\n\n          if (value instanceof AnimatedNode) {\n            propsConfig[propKey] = value.__getNativeTag();\n          }\n        }\n\n        return {\n          type: 'props',\n          props: propsConfig\n        };\n      }\n    }]);\n\n    return AnimatedProps;\n  }(AnimatedNode);\n\n  module.exports = AnimatedProps;\n});","map":[[2,0,10,0],[28,17,12,24,"require"],[28,28,12,31],[28,67],[29,6,12,7,"AnimatedEvent"],[29,19],[29,31,12,7,"AnimatedEvent"],[29,44],[31,0,13,0],[31,6,13,6,"AnimatedNode"],[31,18,13,18],[31,21,13,21,"require"],[31,32,13,28],[31,69,13,0],[33,0,14,0],[33,6,14,6,"AnimatedStyle"],[33,19,14,19],[33,22,14,22,"require"],[33,33,14,29],[33,71,14,0],[35,0,15,0],[35,6,15,6,"NativeAnimatedHelper"],[35,26,15,26],[35,29,15,29,"require"],[35,40,15,36],[35,86,15,0],[37,0,16,0],[37,6,16,6,"ReactNative"],[37,17,16,17],[37,20,16,20,"require"],[37,31,16,27],[37,89,16,0],[39,0,18,0],[39,6,18,6,"invariant"],[39,15,18,15],[39,18,18,18,"require"],[39,29,18,25],[39,70,18,0],[41,6,20,6,"AnimatedProps"],[41,19],[44,0,25,2],[44,27,25,14,"props"],[44,32,25,2],[44,34,25,29,"callback"],[44,42,25,2],[44,44,25,51],[45,0,25,51],[47,0,25,51],[49,0,26,4],[51,0,27,4],[51,10,27,8,"props"],[51,15,27,13],[51,16,27,14,"style"],[51,21,27,4],[51,23,27,21],[52,0,28,6,"props"],[52,8,28,6,"props"],[52,13,28,11],[52,34,29,11,"props"],[52,39,28,11],[53,0,30,8,"style"],[53,10,30,8,"style"],[53,15,30,13],[53,17,30,15],[53,21,30,19,"AnimatedStyle"],[53,34,30,15],[53,35,30,33,"props"],[53,40,30,38],[53,41,30,39,"style"],[53,46,30,15],[54,0,28,11],[54,10,28,6],[55,0,32,5],[57,0,33,4],[57,12,33,9,"_props"],[57,18,33,4],[57,21,33,18,"props"],[57,26,33,4],[58,0,34,4],[58,12,34,9,"_callback"],[58,21,34,4],[58,24,34,21,"callback"],[58,32,34,4],[60,0,35,4],[60,12,35,9,"__attach"],[60,20,35,4],[62,0,25,51],[63,0,36,3],[67,35,38,23],[68,0,39,4],[68,12,39,10,"props"],[68,17,39,15],[68,20,39,18],[68,22,39,4],[70,0,40,4],[70,13,40,9],[70,17,40,15,"key"],[70,20,40,4],[70,24,40,22],[70,29,40,27,"_props"],[70,35,40,4],[70,37,40,35],[71,0,41,6],[71,14,41,12,"value"],[71,19,41,17],[71,22,41,20],[71,27,41,25,"_props"],[71,33,41,20],[71,34,41,32,"key"],[71,37,41,20],[71,38,41,6],[73,0,42,6],[73,14,42,10,"value"],[73,19,42,15],[73,31,42,27,"AnimatedNode"],[73,43,42,6],[73,45,42,41],[74,0,43,8],[74,16,43,12],[74,17,43,13,"value"],[74,22,43,18],[74,23,43,19,"__isNative"],[74,33,43,12],[74,37,43,33,"value"],[74,42,43,38],[74,54,43,50,"AnimatedStyle"],[74,67,43,8],[74,69,43,65],[75,0,46,10,"props"],[75,14,46,10,"props"],[75,19,46,15],[75,20,46,16,"key"],[75,23,46,15],[75,24,46,10],[75,27,46,23,"value"],[75,32,46,28],[75,33,46,29,"__getValue"],[75,43,46,23],[75,45,46,10],[76,0,47,9],[77,0,48,7],[77,11,42,6],[77,17,48,13],[77,21,48,17,"value"],[77,26,48,22],[77,38,48,34,"AnimatedEvent"],[77,51,48,13],[77,53,48,49],[78,0,49,8,"props"],[78,12,49,8,"props"],[78,17,49,13],[78,18,49,14,"key"],[78,21,49,13],[78,22,49,8],[78,25,49,21,"value"],[78,30,49,26],[78,31,49,27,"__getHandler"],[78,43,49,21],[78,45,49,8],[79,0,50,7],[79,11,48,13],[79,17,50,13],[80,0,51,8,"props"],[80,12,51,8,"props"],[80,17,51,13],[80,18,51,14,"key"],[80,21,51,13],[80,22,51,8],[80,25,51,21,"value"],[80,30,51,8],[81,0,52,7],[82,0,53,5],[84,0,54,4],[84,15,54,11,"props"],[84,20,54,4],[85,0,55,3],[88,43,57,31],[89,0,58,4],[89,12,58,10,"props"],[89,17,58,15],[89,20,58,18],[89,22,58,4],[91,0,59,4],[91,13,59,9],[91,17,59,15,"key"],[91,20,59,4],[91,24,59,22],[91,29,59,27,"_props"],[91,35,59,4],[91,37,59,35],[92,0,60,6],[92,14,60,12,"value"],[92,19,60,17],[92,22,60,20],[92,27,60,25,"_props"],[92,33,60,20],[92,34,60,32,"key"],[92,37,60,20],[92,38,60,6],[94,0,61,6],[94,14,61,10,"value"],[94,19,61,15],[94,31,61,27,"AnimatedNode"],[94,43,61,6],[94,45,61,41],[95,0,62,8,"props"],[95,12,62,8,"props"],[95,17,62,13],[95,18,62,14,"key"],[95,21,62,13],[95,22,62,8],[95,25,62,21,"value"],[95,30,62,26],[95,31,62,27,"__getAnimatedValue"],[95,49,62,21],[95,51,62,8],[96,0,63,7],[97,0,64,5],[99,0,65,4],[99,15,65,11,"props"],[99,20,65,4],[100,0,66,3],[103,33,68,19],[104,0,69,4],[104,13,69,9],[104,17,69,15,"key"],[104,20,69,4],[104,24,69,22],[104,29,69,27,"_props"],[104,35,69,4],[104,37,69,35],[105,0,70,6],[105,14,70,12,"value"],[105,19,70,17],[105,22,70,20],[105,27,70,25,"_props"],[105,33,70,20],[105,34,70,32,"key"],[105,37,70,20],[105,38,70,6],[107,0,71,6],[107,14,71,10,"value"],[107,19,71,15],[107,31,71,27,"AnimatedNode"],[107,43,71,6],[107,45,71,41],[108,0,72,8,"value"],[108,12,72,8,"value"],[108,17,72,13],[108,18,72,14,"__addChild"],[108,28,72,8],[108,29,72,25],[108,33,72,8],[109,0,73,7],[110,0,74,5],[111,0,75,3],[114,33,77,19],[115,0,78,4],[115,12,78,8],[115,17,78,13,"__isNative"],[115,27,78,8],[115,31,78,27],[115,36,78,32,"_animatedView"],[115,49,78,4],[115,51,78,47],[116,0,79,6],[116,15,79,11,"__disconnectAnimatedView"],[116,39,79,6],[117,0,80,5],[119,0,81,4],[119,13,81,9],[119,17,81,15,"key"],[119,20,81,4],[119,24,81,22],[119,29,81,27,"_props"],[119,35,81,4],[119,37,81,35],[120,0,82,6],[120,14,82,12,"value"],[120,19,82,17],[120,22,82,20],[120,27,82,25,"_props"],[120,33,82,20],[120,34,82,32,"key"],[120,37,82,20],[120,38,82,6],[122,0,83,6],[122,14,83,10,"value"],[122,19,83,15],[122,31,83,27,"AnimatedNode"],[122,43,83,6],[122,45,83,41],[123,0,84,8,"value"],[123,12,84,8,"value"],[123,17,84,13],[123,18,84,14,"__removeChild"],[123,31,84,8],[123,32,84,28],[123,36,84,8],[124,0,85,7],[125,0,86,5],[127,0,87,4],[128,0,88,3],[131,31,90,17],[132,0,91,4],[132,13,91,9,"_callback"],[132,22,91,4],[133,0,92,3],[136,37,94,23],[137,0,95,4],[137,12,95,8],[137,13,95,9],[137,18,95,14,"__isNative"],[137,28,95,4],[137,30,95,26],[138,0,96,6],[138,15,96,11,"__isNative"],[138,25,96,6],[138,28,96,24],[138,32,96,6],[140,0,97,6],[140,15,97,11],[140,19,97,17,"key"],[140,22,97,6],[140,26,97,24],[140,31,97,29,"_props"],[140,37,97,6],[140,39,97,37],[141,0,98,8],[141,16,98,14,"value"],[141,21,98,19],[141,24,98,22],[141,29,98,27,"_props"],[141,35,98,22],[141,36,98,34,"key"],[141,39,98,22],[141,40,98,8],[143,0,99,8],[143,16,99,12,"value"],[143,21,99,17],[143,33,99,29,"AnimatedNode"],[143,45,99,8],[143,47,99,43],[144,0,100,10,"value"],[144,14,100,10,"value"],[144,19,100,15],[144,20,100,16,"__makeNative"],[144,32,100,10],[145,0,101,9],[146,0,102,7],[148,0,103,6],[148,14,103,10],[148,19,103,15,"_animatedView"],[148,32,103,6],[148,34,103,30],[149,0,104,8],[149,17,104,13,"__connectAnimatedView"],[149,38,104,8],[150,0,105,7],[151,0,106,5],[152,0,107,3],[155,36,109,16,"animatedView"],[155,48],[155,50,109,41],[156,0,110,4],[156,12,110,8],[156,17,110,13,"_animatedView"],[156,30,110,8],[156,35,110,31,"animatedView"],[156,47,110,4],[156,49,110,45],[157,0,111,6],[158,0,112,5],[160,0,113,4],[160,13,113,9,"_animatedView"],[160,26,113,4],[160,29,113,25,"animatedView"],[160,41,113,4],[162,0,114,4],[162,12,114,8],[162,17,114,13,"__isNative"],[162,27,114,4],[162,29,114,25],[163,0,115,6],[163,15,115,11,"__connectAnimatedView"],[163,36,115,6],[164,0,116,5],[165,0,117,3],[168,46,119,32],[169,0,120,4,"invariant"],[169,8,120,4,"invariant"],[169,17,120,13],[169,18,120,14],[169,23,120,19,"__isNative"],[169,33,120,13],[169,35,120,31],[169,75,120,13],[169,76,120,4],[170,0,121,4],[170,12,121,10,"nativeViewTag"],[170,25,121,32],[170,28,121,35,"ReactNative"],[170,39,121,46],[170,40,121,47,"findNodeHandle"],[170,54,121,35],[170,55,122,6],[170,60,122,11,"_animatedView"],[170,73,121,35],[170,74,121,4],[171,0,124,4,"invariant"],[171,8,124,4,"invariant"],[171,17,124,13],[171,18,125,6,"nativeViewTag"],[171,31,125,19],[171,35,125,23],[171,39,124,13],[171,41,126,6],[171,92,124,13],[171,93,124,4],[172,0,128,4,"NativeAnimatedHelper"],[172,8,128,4,"NativeAnimatedHelper"],[172,28,128,24],[172,29,128,25,"API"],[172,32,128,4],[172,33,128,29,"connectAnimatedNodeToView"],[172,58,128,4],[172,59,129,6],[172,64,129,11,"__getNativeTag"],[172,78,129,6],[172,80,128,4],[172,82,130,6,"nativeViewTag"],[172,95,128,4],[173,0,132,3],[176,49,134,35],[177,0,135,4,"invariant"],[177,8,135,4,"invariant"],[177,17,135,13],[177,18,135,14],[177,23,135,19,"__isNative"],[177,33,135,13],[177,35,135,31],[177,75,135,13],[177,76,135,4],[178,0,136,4],[178,12,136,10,"nativeViewTag"],[178,25,136,32],[178,28,136,35,"ReactNative"],[178,39,136,46],[178,40,136,47,"findNodeHandle"],[178,54,136,35],[178,55,137,6],[178,60,137,11,"_animatedView"],[178,73,136,35],[178,74,136,4],[179,0,139,4,"invariant"],[179,8,139,4,"invariant"],[179,17,139,13],[179,18,140,6,"nativeViewTag"],[179,31,140,19],[179,35,140,23],[179,39,139,13],[179,41,141,6],[179,92,139,13],[179,93,139,4],[180,0,143,4,"NativeAnimatedHelper"],[180,8,143,4,"NativeAnimatedHelper"],[180,28,143,24],[180,29,143,25,"API"],[180,32,143,4],[180,33,143,29,"disconnectAnimatedNodeFromView"],[180,63,143,4],[180,64,144,6],[180,69,144,11,"__getNativeTag"],[180,83,144,6],[180,85,143,4],[180,87,145,6,"nativeViewTag"],[180,100,143,4],[181,0,147,3],[184,42,149,30],[185,0,150,4],[185,12,150,10,"propsConfig"],[185,23,150,21],[185,26,150,24],[185,28,150,4],[187,0,151,4],[187,13,151,9],[187,17,151,15,"propKey"],[187,24,151,4],[187,28,151,26],[187,33,151,31,"_props"],[187,39,151,4],[187,41,151,39],[188,0,152,6],[188,14,152,12,"value"],[188,19,152,17],[188,22,152,20],[188,27,152,25,"_props"],[188,33,152,20],[188,34,152,32,"propKey"],[188,41,152,20],[188,42,152,6],[190,0,153,6],[190,14,153,10,"value"],[190,19,153,15],[190,31,153,27,"AnimatedNode"],[190,43,153,6],[190,45,153,41],[191,0,154,8,"propsConfig"],[191,12,154,8,"propsConfig"],[191,23,154,19],[191,24,154,20,"propKey"],[191,31,154,19],[191,32,154,8],[191,35,154,31,"value"],[191,40,154,36],[191,41,154,37,"__getNativeTag"],[191,55,154,31],[191,57,154,8],[192,0,155,7],[193,0,156,5],[195,0,157,4],[195,15,157,11],[196,0,158,6,"type"],[196,10,158,6,"type"],[196,14,158,10],[196,16,158,12],[196,23,157,11],[197,0,159,6,"props"],[197,10,159,6,"props"],[197,15,159,11],[197,17,159,13,"propsConfig"],[198,0,157,11],[198,9,157,4],[199,0,161,3],[203,4,20,28,"AnimatedNode"],[203,16],[205,0,164,0,"module"],[205,2,164,0,"module"],[205,8,164,6],[205,9,164,7,"exports"],[205,16,164,0],[205,19,164,17,"AnimatedProps"],[205,32,164,0]]},"type":"js/module"}]}