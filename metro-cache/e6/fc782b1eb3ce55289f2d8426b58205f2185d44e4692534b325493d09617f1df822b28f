{"dependencies":[{"name":"react","data":{"isAsync":false}},{"name":"./../../../../../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"prop-types","data":{"isAsync":false}},{"name":"./react-native","data":{"isAsync":false}},{"name":"./ensure-native-module-available","data":{"isAsync":false}},{"name":"./icon-button","data":{"isAsync":false}},{"name":"./tab-bar-item-ios","data":{"isAsync":false}},{"name":"./toolbar-android","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createIconSet;\n  exports.DEFAULT_ICON_COLOR = exports.DEFAULT_ICON_SIZE = exports.NativeIconAPI = void 0;\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../../../../../react-transform-hmr/lib/index.js\"));\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"prop-types\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[3], \"./react-native\");\n\n  var _ensureNativeModuleAvailable = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./ensure-native-module-available\"));\n\n  var _iconButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./icon-button\"));\n\n  var _tabBarItemIos = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./tab-bar-item-ios\"));\n\n  var _toolbarAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./toolbar-android\"));\n\n  var _jsxFileName = \"/home/alex/Documentos/CursoReactNative/node_modules/@expo/vector-icons/vendor/react-native-vector-icons/lib/create-icon-set.js\";\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\n  function _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\n  function _iterableToArray(iter) { if ((typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\") in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\n  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\n  function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  var _components = {\n    Icon: {\n      displayName: \"Icon\",\n      isInFunction: true\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/alex/Documentos/CursoReactNative/node_modules/@expo/vector-icons/vendor/react-native-vector-icons/lib/create-icon-set.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var NativeIconAPI = _reactNative.NativeModules.RNVectorIconsManager || _reactNative.NativeModules.RNVectorIconsModule;\n  exports.NativeIconAPI = NativeIconAPI;\n  var DEFAULT_ICON_SIZE = 12;\n  exports.DEFAULT_ICON_SIZE = DEFAULT_ICON_SIZE;\n  var DEFAULT_ICON_COLOR = 'black';\n  exports.DEFAULT_ICON_COLOR = DEFAULT_ICON_COLOR;\n\n  function createIconSet(glyphMap, fontFamily, fontFile, fontStyle) {\n    var fontBasename = fontFile ? fontFile.replace(/\\.(otf|ttf)$/, '') : fontFamily;\n\n    var fontReference = _reactNative.Platform.select({\n      windows: \"Assets/\" + fontFile + \"#\" + fontFamily,\n      android: fontBasename,\n      web: fontBasename,\n      default: fontFamily\n    });\n\n    var IconNamePropType = _propTypes.default.oneOf(Object.keys(glyphMap));\n\n    var Icon = function (_PureComponent) {\n      _inherits(Icon, _PureComponent);\n\n      function Icon() {\n        var _getPrototypeOf2;\n\n        var _this;\n\n        _classCallCheck(this, Icon);\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Icon)).call.apply(_getPrototypeOf2, [this].concat(args)));\n        _this.root = null;\n\n        _this.handleRef = function (ref) {\n          _this.root = ref;\n        };\n\n        return _this;\n      }\n\n      _createClass(Icon, [{\n        key: \"setNativeProps\",\n        value: function setNativeProps(nativeProps) {\n          if (this.root) {\n            this.root.setNativeProps(nativeProps);\n          }\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var _this$props = this.props,\n              name = _this$props.name,\n              size = _this$props.size,\n              color = _this$props.color,\n              style = _this$props.style,\n              children = _this$props.children,\n              props = _objectWithoutProperties(_this$props, [\"name\", \"size\", \"color\", \"style\", \"children\"]);\n\n          var glyph = name ? glyphMap[name] || '?' : '';\n\n          if (typeof glyph === 'number') {\n            glyph = String.fromCharCode(glyph);\n          }\n\n          var styleDefaults = {\n            fontSize: size,\n            color: color\n          };\n          var styleOverrides = {\n            fontFamily: fontReference,\n            fontWeight: 'normal',\n            fontStyle: 'normal'\n          };\n          props.style = [styleDefaults, style, styleOverrides, fontStyle || {}];\n          props.ref = this.handleRef;\n          return _react.default.createElement(_reactNative.Text, _extends({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            }\n          }), glyph, children);\n        }\n      }]);\n\n      return Icon;\n    }(_react.PureComponent);\n\n    Icon.propTypes = {\n      allowFontScaling: _propTypes.default.bool,\n      name: IconNamePropType,\n      size: _propTypes.default.number,\n      color: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n      children: _propTypes.default.node,\n      style: _propTypes.default.any\n    };\n    Icon.defaultProps = {\n      size: DEFAULT_ICON_SIZE,\n      allowFontScaling: false\n    };\n    Icon = _wrapComponent(\"Icon\")(Icon);\n    var imageSourceCache = {};\n\n    function getImageSource(name) {\n      var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_ICON_SIZE;\n      var color = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_ICON_COLOR;\n      (0, _ensureNativeModuleAvailable.default)();\n      var glyph = glyphMap[name] || '?';\n\n      if (typeof glyph === 'number') {\n        glyph = String.fromCharCode(glyph);\n      }\n\n      var processedColor = (0, _reactNative.processColor)(color);\n      var cacheKey = glyph + \":\" + size + \":\" + processedColor;\n\n      var scale = _reactNative.PixelRatio.get();\n\n      return new Promise(function (resolve, reject) {\n        var cached = imageSourceCache[cacheKey];\n\n        if (typeof cached !== 'undefined') {\n          if (!cached || cached instanceof Error) {\n            reject(cached);\n          } else {\n            resolve({\n              uri: cached,\n              scale: scale\n            });\n          }\n        } else {\n          NativeIconAPI.getImageForFont(fontReference, glyph, size, processedColor, function (err, image) {\n            var error = typeof err === 'string' ? new Error(err) : err;\n            imageSourceCache[cacheKey] = image || error || false;\n\n            if (!error && image) {\n              resolve({\n                uri: image,\n                scale: scale\n              });\n            } else {\n              reject(error);\n            }\n          });\n        }\n      });\n    }\n\n    function loadFont() {\n      var file = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : fontFile;\n\n      if (_reactNative.Platform.OS === 'ios') {\n        (0, _ensureNativeModuleAvailable.default)();\n\n        if (!file) {\n          return Promise.reject(new Error('Unable to load font, because no file was specified. '));\n        }\n\n        return NativeIconAPI.loadFontWithFileName.apply(NativeIconAPI, _toConsumableArray(file.split('.')));\n      }\n\n      return Promise.resolve();\n    }\n\n    function hasIcon(name) {\n      return Object.prototype.hasOwnProperty.call(glyphMap, name);\n    }\n\n    function getRawGlyphMap() {\n      return glyphMap;\n    }\n\n    function getFontFamily() {\n      return fontReference;\n    }\n\n    Icon.Button = (0, _iconButton.default)(Icon);\n    Icon.TabBarItem = (0, _tabBarItemIos.default)(IconNamePropType, getImageSource);\n    Icon.TabBarItemIOS = Icon.TabBarItem;\n    Icon.ToolbarAndroid = (0, _toolbarAndroid.default)(IconNamePropType, getImageSource);\n    Icon.getImageSource = getImageSource;\n    Icon.loadFont = loadFont;\n    Icon.hasIcon = hasIcon;\n    Icon.getRawGlyphMap = getRawGlyphMap;\n    Icon.getFontFamily = getFontFamily;\n    return Icon;\n  }\n});","map":[[8,0,1,0],[12,0,2,0],[14,0,3,0],[16,0,11,0],[18,0,12,0],[20,0,13,0],[22,0,14,0],[80,0,16,7],[80,6,16,13,"NativeIconAPI"],[80,19,16,26],[80,22,17,2,"NativeModules"],[80,49,17,16,"RNVectorIconsManager"],[80,69,17,2],[80,73,17,40,"NativeModules"],[80,100,17,54,"RNVectorIconsModule"],[80,119,16,7],[82,0,19,7],[82,6,19,13,"DEFAULT_ICON_SIZE"],[82,23,19,30],[82,26,19,33],[82,28,19,7],[84,0,20,7],[84,6,20,13,"DEFAULT_ICON_COLOR"],[84,24,20,31],[84,27,20,34],[84,34,20,7],[87,0,22,15],[87,11,22,24,"createIconSet"],[87,24,22,15],[87,25,23,2,"glyphMap"],[87,33,22,15],[87,35,24,2,"fontFamily"],[87,45,22,15],[87,47,25,2,"fontFile"],[87,55,22,15],[87,57,26,2,"fontStyle"],[87,66,22,15],[87,68,27,2],[88,0,29,2],[88,8,29,8,"fontBasename"],[88,20,29,20],[88,23,29,23,"fontFile"],[88,31,29,31],[88,34,30,6,"fontFile"],[88,42,30,14],[88,43,30,15,"replace"],[88,50,30,6],[88,51,30,23],[88,65,30,6],[88,67,30,39],[88,69,30,6],[88,70,29,31],[88,73,31,6,"fontFamily"],[88,83,29,2],[90,0,33,2],[90,8,33,8,"fontReference"],[90,21,33,21],[90,24,33,24,"Platform"],[90,46,33,33,"select"],[90,52,33,24],[90,53,33,40],[91,0,34,4,"windows"],[91,6,34,4,"windows"],[91,13,34,11],[91,27,34,23,"fontFile"],[91,35,34,11],[91,44,34,35,"fontFamily"],[91,54,33,40],[92,0,35,4,"android"],[92,6,35,4,"android"],[92,13,35,11],[92,15,35,13,"fontBasename"],[92,27,33,40],[93,0,36,4,"web"],[93,6,36,4,"web"],[93,9,36,7],[93,11,36,9,"fontBasename"],[93,23,33,40],[94,0,37,4,"default"],[94,6,37,4,"default"],[94,13,37,11],[94,15,37,13,"fontFamily"],[95,0,33,40],[95,5,33,24],[95,6,33,2],[97,0,40,2],[97,8,40,8,"IconNamePropType"],[97,24,40,24],[97,27,40,27,"PropTypes"],[97,46,40,37,"oneOf"],[97,51,40,27],[97,52,40,43,"Object"],[97,58,40,49],[97,59,40,50,"keys"],[97,63,40,43],[97,64,40,55,"glyphMap"],[97,72,40,43],[97,73,40,27],[97,74,40,2],[99,0,27,2],[99,8,42,8,"Icon"],[99,12,27,2],[100,0,27,2],[102,0,27,2],[103,0,27,2],[105,0,27,2],[107,0,27,2],[109,0,27,2],[110,0,27,2],[111,0,27,2],[113,0,27,2],[114,0,27,2],[114,14,57,4,"root"],[114,18,27,2],[114,21,57,11],[114,25,27,2],[116,0,27,2],[116,14,65,4,"handleRef"],[116,23,27,2],[116,26,65,16],[116,36,65,16,"ref"],[116,39,65,19],[116,41,65,23],[117,0,66,6],[117,16,66,11,"root"],[117,20,66,6],[117,23,66,18,"ref"],[117,26,66,6],[118,0,67,5],[118,9,27,2],[120,0,27,2],[121,0,27,2],[123,0,27,2],[124,0,27,2],[125,0,27,2],[125,39,59,19,"nativeProps"],[125,50,27,2],[125,52,59,32],[126,0,60,6],[126,14,60,10],[126,19,60,15,"root"],[126,23,60,6],[126,25,60,21],[127,0,61,8],[127,17,61,13,"root"],[127,21,61,8],[127,22,61,18,"setNativeProps"],[127,36,61,8],[127,37,61,33,"nativeProps"],[127,48,61,8],[128,0,62,7],[129,0,63,5],[130,0,27,2],[131,0,27,2],[132,0,27,2],[132,33,69,13],[133,0,69,13],[133,28,70,63],[133,33,70,68,"props"],[133,38,69,13],[134,0,69,13],[134,14,70,14,"name"],[134,18,69,13],[134,33,70,14,"name"],[134,37,69,13],[135,0,69,13],[135,14,70,20,"size"],[135,18,69,13],[135,33,70,20,"size"],[135,37,69,13],[136,0,69,13],[136,14,70,26,"color"],[136,19,69,13],[136,34,70,26,"color"],[136,39,69,13],[137,0,69,13],[137,14,70,33,"style"],[137,19,69,13],[137,34,70,33,"style"],[137,39,69,13],[138,0,69,13],[138,14,70,40,"children"],[138,22,69,13],[138,37,70,40,"children"],[138,45,69,13],[139,0,69,13],[139,14,70,53,"props"],[139,19,69,13],[141,0,72,6],[141,14,72,10,"glyph"],[141,19,72,15],[141,22,72,18,"name"],[141,26,72,22],[141,29,72,25,"glyphMap"],[141,37,72,33],[141,38,72,34,"name"],[141,42,72,33],[141,43,72,25],[141,47,72,43],[141,50,72,22],[141,53,72,49],[141,55,72,6],[143,0,73,6],[143,14,73,10],[143,21,73,17,"glyph"],[143,26,73,10],[143,31,73,27],[143,39,73,6],[143,41,73,37],[144,0,74,8,"glyph"],[144,12,74,8,"glyph"],[144,17,74,13],[144,20,74,16,"String"],[144,26,74,22],[144,27,74,23,"fromCharCode"],[144,39,74,16],[144,40,74,36,"glyph"],[144,45,74,16],[144,46,74,8],[145,0,75,7],[147,0,77,6],[147,14,77,12,"styleDefaults"],[147,27,77,25],[147,30,77,28],[148,0,78,8,"fontSize"],[148,12,78,8,"fontSize"],[148,20,78,16],[148,22,78,18,"size"],[148,26,77,28],[149,0,79,8,"color"],[149,12,79,8,"color"],[149,17,79,13],[149,19,79,8,"color"],[150,0,77,28],[150,11,77,6],[151,0,82,6],[151,14,82,12,"styleOverrides"],[151,28,82,26],[151,31,82,29],[152,0,83,8,"fontFamily"],[152,12,83,8,"fontFamily"],[152,22,83,18],[152,24,83,20,"fontReference"],[152,37,82,29],[153,0,84,8,"fontWeight"],[153,12,84,8,"fontWeight"],[153,22,84,18],[153,24,84,20],[153,32,82,29],[154,0,85,8,"fontStyle"],[154,12,85,8,"fontStyle"],[154,21,85,17],[154,23,85,19],[155,0,82,29],[155,11,82,6],[156,0,88,6,"props"],[156,10,88,6,"props"],[156,15,88,11],[156,16,88,12,"style"],[156,21,88,6],[156,24,88,20],[156,25,88,21,"styleDefaults"],[156,38,88,20],[156,40,88,36,"style"],[156,45,88,20],[156,47,88,43,"styleOverrides"],[156,61,88,20],[156,63,88,59,"fontStyle"],[156,72,88,68],[156,76,88,72],[156,78,88,20],[156,79,88,6],[157,0,89,6,"props"],[157,10,89,6,"props"],[157,15,89,11],[157,16,89,12,"ref"],[157,19,89,6],[157,22,89,18],[157,27,89,23,"handleRef"],[157,36,89,6],[158,0,91,6],[158,17,92,8],[158,46,92,9],[158,63,92,8],[158,78,92,18,"props"],[158,83,92,8],[159,0,92,8],[160,0,92,8],[161,0,92,8],[162,0,92,8],[163,0,92,8],[163,14,93,11,"glyph"],[163,19,92,8],[163,21,94,11,"children"],[163,29,92,8],[163,30,91,6],[164,0,97,5],[165,0,27,2],[167,0,27,2],[168,0,27,2],[168,6,42,21,"PureComponent"],[168,26,27,2],[170,0,42,8,"Icon"],[170,4,42,8,"Icon"],[170,8,27,2],[170,9,43,11,"propTypes"],[170,18,27,2],[170,21,43,23],[171,0,44,6,"allowFontScaling"],[171,6,44,6,"allowFontScaling"],[171,22,44,22],[171,24,44,24,"PropTypes"],[171,43,44,34,"bool"],[171,47,43,23],[172,0,45,6,"name"],[172,6,45,6,"name"],[172,10,45,10],[172,12,45,12,"IconNamePropType"],[172,28,43,23],[173,0,46,6,"size"],[173,6,46,6,"size"],[173,10,46,10],[173,12,46,12,"PropTypes"],[173,31,46,22,"number"],[173,37,43,23],[174,0,47,6,"color"],[174,6,47,6,"color"],[174,11,47,11],[174,13,47,13,"PropTypes"],[174,32,47,23,"oneOfType"],[174,41,47,13],[174,42,47,33],[174,43,47,34,"PropTypes"],[174,62,47,44,"string"],[174,68,47,33],[174,70,47,52,"PropTypes"],[174,89,47,62,"number"],[174,95,47,33],[174,96,47,13],[174,97,43,23],[175,0,48,6,"children"],[175,6,48,6,"children"],[175,14,48,14],[175,16,48,16,"PropTypes"],[175,35,48,26,"node"],[175,39,43,23],[176,0,49,6,"style"],[176,6,49,6,"style"],[176,11,49,11],[176,13,49,13,"PropTypes"],[176,32,49,23,"any"],[177,0,43,23],[177,5,27,2],[178,0,42,8,"Icon"],[178,4,42,8,"Icon"],[178,8,27,2],[178,9,52,11,"defaultProps"],[178,21,27,2],[178,24,52,26],[179,0,53,6,"size"],[179,6,53,6,"size"],[179,10,53,10],[179,12,53,12,"DEFAULT_ICON_SIZE"],[179,29,52,26],[180,0,54,6,"allowFontScaling"],[180,6,54,6,"allowFontScaling"],[180,22,54,22],[180,24,54,24],[181,0,52,26],[181,5,27,2],[182,0,27,2],[183,0,100,2],[183,8,100,8,"imageSourceCache"],[183,24,100,24],[183,27,100,27],[183,29,100,2],[185,0,102,2],[185,13,102,11,"getImageSource"],[185,27,102,2],[185,28,103,4,"name"],[185,32,102,2],[185,34,106,4],[186,0,106,4],[186,10,104,4,"size"],[186,14,106,4],[186,85,104,11,"DEFAULT_ICON_SIZE"],[186,102,106,4],[187,0,106,4],[187,10,105,4,"color"],[187,15,106,4],[187,86,105,12,"DEFAULT_ICON_COLOR"],[187,104,106,4],[188,0,107,4],[189,0,109,4],[189,10,109,8,"glyph"],[189,15,109,13],[189,18,109,16,"glyphMap"],[189,26,109,24],[189,27,109,25,"name"],[189,31,109,24],[189,32,109,16],[189,36,109,34],[189,39,109,4],[191,0,110,4],[191,10,110,8],[191,17,110,15,"glyph"],[191,22,110,8],[191,27,110,25],[191,35,110,4],[191,37,110,35],[192,0,111,6,"glyph"],[192,8,111,6,"glyph"],[192,13,111,11],[192,16,111,14,"String"],[192,22,111,20],[192,23,111,21,"fromCharCode"],[192,35,111,14],[192,36,111,34,"glyph"],[192,41,111,14],[192,42,111,6],[193,0,112,5],[195,0,114,4],[195,10,114,10,"processedColor"],[195,24,114,24],[195,27,114,27],[195,58,114,40,"color"],[195,63,114,27],[195,64,114,4],[196,0,115,4],[196,10,115,10,"cacheKey"],[196,18,115,18],[196,21,115,24,"glyph"],[196,26,115,18],[196,35,115,33,"size"],[196,39,115,18],[196,48,115,41,"processedColor"],[196,62,115,4],[198,0,116,4],[198,10,116,10,"scale"],[198,15,116,15],[198,18,116,18,"PixelRatio"],[198,42,116,29,"get"],[198,45,116,18],[198,47,116,4],[200,0,118,4],[200,13,118,11],[200,17,118,15,"Promise"],[200,24,118,11],[200,25,118,23],[200,35,118,24,"resolve"],[200,42,118,23],[200,44,118,33,"reject"],[200,50,118,23],[200,52,118,44],[201,0,119,6],[201,12,119,12,"cached"],[201,18,119,18],[201,21,119,21,"imageSourceCache"],[201,37,119,37],[201,38,119,38,"cacheKey"],[201,46,119,37],[201,47,119,6],[203,0,120,6],[203,12,120,10],[203,19,120,17,"cached"],[203,25,120,10],[203,30,120,28],[203,41,120,6],[203,43,120,41],[204,0,121,8],[204,14,121,12],[204,15,121,13,"cached"],[204,21,121,12],[204,25,121,23,"cached"],[204,31,121,29],[204,43,121,41,"Error"],[204,48,121,8],[204,50,121,48],[205,0,122,10,"reject"],[205,12,122,10,"reject"],[205,18,122,16],[205,19,122,17,"cached"],[205,25,122,16],[205,26,122,10],[206,0,123,9],[206,11,121,8],[206,17,123,15],[207,0,124,10,"resolve"],[207,12,124,10,"resolve"],[207,19,124,17],[207,20,124,18],[208,0,124,20,"uri"],[208,14,124,20,"uri"],[208,17,124,23],[208,19,124,25,"cached"],[208,25,124,18],[209,0,124,33,"scale"],[209,14,124,33,"scale"],[209,19,124,38],[209,21,124,33,"scale"],[210,0,124,18],[210,13,124,17],[210,14,124,10],[211,0,125,9],[212,0,126,7],[212,9,120,6],[212,15,126,13],[213,0,127,8,"NativeIconAPI"],[213,10,127,8,"NativeIconAPI"],[213,23,127,21],[213,24,127,22,"getImageForFont"],[213,39,127,8],[213,40,128,10,"fontReference"],[213,53,127,8],[213,55,129,10,"glyph"],[213,60,127,8],[213,62,130,10,"size"],[213,66,127,8],[213,68,131,10,"processedColor"],[213,82,127,8],[213,84,132,10],[213,94,132,11,"err"],[213,97,132,10],[213,99,132,16,"image"],[213,104,132,10],[213,106,132,26],[214,0,133,12],[214,16,133,18,"error"],[214,21,133,23],[214,24,133,26],[214,31,133,33,"err"],[214,34,133,26],[214,39,133,41],[214,47,133,26],[214,50,133,52],[214,54,133,56,"Error"],[214,59,133,52],[214,60,133,62,"err"],[214,63,133,52],[214,64,133,26],[214,67,133,69,"err"],[214,70,133,12],[215,0,134,12,"imageSourceCache"],[215,12,134,12,"imageSourceCache"],[215,28,134,28],[215,29,134,29,"cacheKey"],[215,37,134,28],[215,38,134,12],[215,41,134,41,"image"],[215,46,134,46],[215,50,134,50,"error"],[215,55,134,41],[215,59,134,59],[215,64,134,12],[217,0,135,12],[217,16,135,16],[217,17,135,17,"error"],[217,22,135,16],[217,26,135,26,"image"],[217,31,135,12],[217,33,135,33],[218,0,136,14,"resolve"],[218,14,136,14,"resolve"],[218,21,136,21],[218,22,136,22],[219,0,136,24,"uri"],[219,16,136,24,"uri"],[219,19,136,27],[219,21,136,29,"image"],[219,26,136,22],[220,0,136,36,"scale"],[220,16,136,36,"scale"],[220,21,136,41],[220,23,136,36,"scale"],[221,0,136,22],[221,15,136,21],[221,16,136,14],[222,0,137,13],[222,13,135,12],[222,19,137,19],[223,0,138,14,"reject"],[223,14,138,14,"reject"],[223,20,138,20],[223,21,138,21,"error"],[223,26,138,20],[223,27,138,14],[224,0,139,13],[225,0,140,11],[225,11,127,8],[226,0,142,7],[227,0,143,5],[227,7,118,11],[227,8,118,4],[228,0,144,3],[230,0,146,2],[230,13,146,11,"loadFont"],[230,21,146,2],[230,24,146,37],[231,0,146,37],[231,10,146,20,"file"],[231,14,146,37],[231,85,146,27,"fontFile"],[231,93,146,37],[233,0,147,4],[233,10,147,8,"Platform"],[233,32,147,17,"OS"],[233,34,147,8],[233,39,147,24],[233,44,147,4],[233,46,147,31],[234,0,148,6],[236,0,149,6],[236,12,149,10],[236,13,149,11,"file"],[236,17,149,6],[236,19,149,17],[237,0,150,8],[237,17,150,15,"Promise"],[237,24,150,22],[237,25,150,23,"reject"],[237,31,150,15],[237,32,151,10],[237,36,151,14,"Error"],[237,41,151,10],[237,42,151,20],[237,96,151,10],[237,97,150,15],[237,98,150,8],[238,0,153,7],[240,0,154,6],[240,15,154,13,"NativeIconAPI"],[240,28,154,26],[240,29,154,27,"loadFontWithFileName"],[240,49,154,13],[240,56,154,13,"NativeIconAPI"],[240,69,154,26],[240,90,154,51,"file"],[240,94,154,55],[240,95,154,56,"split"],[240,100,154,51],[240,101,154,62],[240,104,154,51],[240,105,154,26],[240,107,154,6],[241,0,155,5],[243,0,156,4],[243,13,156,11,"Promise"],[243,20,156,18],[243,21,156,19,"resolve"],[243,28,156,11],[243,30,156,4],[244,0,157,3],[246,0,159,2],[246,13,159,11,"hasIcon"],[246,20,159,2],[246,21,159,19,"name"],[246,25,159,2],[246,27,159,25],[247,0,160,4],[247,13,160,11,"Object"],[247,19,160,17],[247,20,160,18,"prototype"],[247,29,160,11],[247,30,160,28,"hasOwnProperty"],[247,44,160,11],[247,45,160,43,"call"],[247,49,160,11],[247,50,160,48,"glyphMap"],[247,58,160,11],[247,60,160,58,"name"],[247,64,160,11],[247,65,160,4],[248,0,161,3],[250,0,163,2],[250,13,163,11,"getRawGlyphMap"],[250,27,163,2],[250,30,163,28],[251,0,164,4],[251,13,164,11,"glyphMap"],[251,21,164,4],[252,0,165,3],[254,0,167,2],[254,13,167,11,"getFontFamily"],[254,26,167,2],[254,29,167,27],[255,0,168,4],[255,13,168,11,"fontReference"],[255,26,168,4],[256,0,169,3],[258,0,171,2,"Icon"],[258,4,171,2,"Icon"],[258,8,171,6],[258,9,171,7,"Button"],[258,15,171,2],[258,18,171,16],[258,43,171,42,"Icon"],[258,47,171,16],[258,48,171,2],[259,0,172,2,"Icon"],[259,4,172,2,"Icon"],[259,8,172,6],[259,9,172,7,"TabBarItem"],[259,19,172,2],[259,22,172,20],[259,50,173,4,"IconNamePropType"],[259,66,172,20],[259,68,174,4,"getImageSource"],[259,82,172,20],[259,83,172,2],[260,0,176,2,"Icon"],[260,4,176,2,"Icon"],[260,8,176,6],[260,9,176,7,"TabBarItemIOS"],[260,22,176,2],[260,25,176,23,"Icon"],[260,29,176,27],[260,30,176,28,"TabBarItem"],[260,40,176,2],[261,0,177,2,"Icon"],[261,4,177,2,"Icon"],[261,8,177,6],[261,9,177,7,"ToolbarAndroid"],[261,23,177,2],[261,26,177,24],[261,55,178,4,"IconNamePropType"],[261,71,177,24],[261,73,179,4,"getImageSource"],[261,87,177,24],[261,88,177,2],[262,0,181,2,"Icon"],[262,4,181,2,"Icon"],[262,8,181,6],[262,9,181,7,"getImageSource"],[262,23,181,2],[262,26,181,24,"getImageSource"],[262,40,181,2],[263,0,182,2,"Icon"],[263,4,182,2,"Icon"],[263,8,182,6],[263,9,182,7,"loadFont"],[263,17,182,2],[263,20,182,18,"loadFont"],[263,28,182,2],[264,0,183,2,"Icon"],[264,4,183,2,"Icon"],[264,8,183,6],[264,9,183,7,"hasIcon"],[264,16,183,2],[264,19,183,17,"hasIcon"],[264,26,183,2],[265,0,184,2,"Icon"],[265,4,184,2,"Icon"],[265,8,184,6],[265,9,184,7,"getRawGlyphMap"],[265,23,184,2],[265,26,184,24,"getRawGlyphMap"],[265,40,184,2],[266,0,185,2,"Icon"],[266,4,185,2,"Icon"],[266,8,185,6],[266,9,185,7,"getFontFamily"],[266,22,185,2],[266,25,185,23,"getFontFamily"],[266,38,185,2],[267,0,187,2],[267,11,187,9,"Icon"],[267,15,187,2],[268,0,188,1]]},"type":"js/module"}]}