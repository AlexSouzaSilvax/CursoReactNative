{"dependencies":[{"name":"react","data":{"isAsync":false}},{"name":"./../../../../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"@react-navigation/core","data":{"isAsync":false}},{"name":"@react-navigation/native","data":{"isAsync":false}},{"name":"react-native-screens","data":{"isAsync":false}},{"name":"react-native-gesture-handler","data":{"isAsync":false}},{"name":"./StackViewCard","data":{"isAsync":false}},{"name":"../Header/Header","data":{"isAsync":false}},{"name":"./StackViewTransitionConfigs","data":{"isAsync":false}},{"name":"../Header/HeaderStyleInterpolator","data":{"isAsync":false}},{"name":"../../utils/StackGestureContext","data":{"isAsync":false}},{"name":"../../utils/clamp","data":{"isAsync":false}},{"name":"../../utils/ReactNativeFeatures","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../../../../react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n\n  var _core = _$$_REQUIRE(_dependencyMap[3], \"@react-navigation/core\");\n\n  var _native = _$$_REQUIRE(_dependencyMap[4], \"@react-navigation/native\");\n\n  var _reactNativeScreens = _$$_REQUIRE(_dependencyMap[5], \"react-native-screens\");\n\n  var _reactNativeGestureHandler = _$$_REQUIRE(_dependencyMap[6], \"react-native-gesture-handler\");\n\n  var _StackViewCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./StackViewCard\"));\n\n  var _Header = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"../Header/Header\"));\n\n  var _StackViewTransitionConfigs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./StackViewTransitionConfigs\"));\n\n  var _HeaderStyleInterpolator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"../Header/HeaderStyleInterpolator\"));\n\n  var _StackGestureContext = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"../../utils/StackGestureContext\"));\n\n  var _clamp = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"../../utils/clamp\"));\n\n  var _ReactNativeFeatures = _$$_REQUIRE(_dependencyMap[13], \"../../utils/ReactNativeFeatures\");\n\n  var _jsxFileName = \"/home/alex/Documentos/CursoReactNative/node_modules/react-navigation-stack/src/views/StackView/StackViewLayout.js\";\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\n  function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  var _components = {\n    StackViewLayout: {\n      displayName: \"StackViewLayout\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/alex/Documentos/CursoReactNative/node_modules/react-navigation-stack/src/views/StackView/StackViewLayout.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var IPHONE_XS_HEIGHT = 812;\n  var IPHONE_XR_HEIGHT = 896;\n\n  var _Dimensions$get = _reactNative.Dimensions.get('window'),\n      WINDOW_WIDTH = _Dimensions$get.width,\n      WINDOW_HEIGHT = _Dimensions$get.height;\n\n  var IS_IPHONE_X = _reactNative.Platform.OS === 'ios' && !_reactNative.Platform.isPad && !_reactNative.Platform.isTVOS && (WINDOW_HEIGHT === IPHONE_XS_HEIGHT || WINDOW_WIDTH === IPHONE_XS_HEIGHT || WINDOW_HEIGHT === IPHONE_XR_HEIGHT || WINDOW_WIDTH === IPHONE_XR_HEIGHT);\n\n  var EaseInOut = _reactNative.Easing.inOut(_reactNative.Easing.ease);\n\n  var HEADER_LAYOUT_PRESET = ['center', 'left'];\n  var HEADER_TRANSITION_PRESET = ['fade-in-place', 'uikit'];\n  var HEADER_BACKGROUND_TRANSITION_PRESET = ['toggle', 'fade', 'translate'];\n  var ANIMATION_DURATION = 500;\n  var POSITION_THRESHOLD = 1 / 2;\n  var GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\n  var GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\n  var USE_NATIVE_DRIVER = true;\n\n  var getDefaultHeaderHeight = function getDefaultHeaderHeight(isLandscape) {\n    if (_reactNative.Platform.OS === 'ios') {\n      if (isLandscape && !_reactNative.Platform.isPad) {\n        return 32;\n      } else if (IS_IPHONE_X) {\n        return 88;\n      } else {\n        return 64;\n      }\n    } else {\n      return 56;\n    }\n  };\n\n  var StackViewLayout = function (_React$Component) {\n    _inherits(StackViewLayout, _React$Component);\n\n    function StackViewLayout(props) {\n      var _this;\n\n      _classCallCheck(this, StackViewLayout);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(StackViewLayout).call(this, props));\n      _this._immediateIndex = null;\n\n      _this._onFloatingHeaderLayout = function (e) {\n        var height = e.nativeEvent.layout.height;\n\n        if (height !== _this.state.floatingHeaderHeight) {\n          _this.setState({\n            floatingHeaderHeight: height\n          });\n        }\n      };\n\n      _this._handlePanGestureStateChange = function (_ref) {\n        var nativeEvent = _ref.nativeEvent;\n\n        if (nativeEvent.oldState === _reactNativeGestureHandler.State.ACTIVE) {\n          if (_this.positionSwitch.__getValue() === 1) {\n            return;\n          }\n\n          if (_this._isMotionVertical()) {\n            _this._handleReleaseVertical(nativeEvent);\n          } else {\n            _this._handleReleaseHorizontal(nativeEvent);\n          }\n        } else if (nativeEvent.state === _reactNativeGestureHandler.State.ACTIVE) {\n          _this.positionSwitch.setValue(0);\n        }\n      };\n\n      _this._renderCard = function (scene) {\n        var _this$props = _this.props,\n            transitionProps = _this$props.transitionProps,\n            shadowEnabled = _this$props.shadowEnabled,\n            cardOverlayEnabled = _this$props.cardOverlayEnabled,\n            transparentCard = _this$props.transparentCard,\n            cardStyle = _this$props.cardStyle;\n        var screenInterpolator = _this._transitionConfig.screenInterpolator;\n        var style = screenInterpolator && screenInterpolator(_objectSpread({}, transitionProps, {\n          shadowEnabled: shadowEnabled,\n          cardOverlayEnabled: cardOverlayEnabled,\n          position: _this.position,\n          scene: scene\n        }));\n        var options = scene.descriptor.options;\n        var hasHeader = options.header !== null;\n\n        var headerMode = _this._getHeaderMode();\n\n        var paddingTopStyle;\n\n        if (hasHeader && headerMode === 'float' && !options.headerTransparent) {\n          paddingTopStyle = {\n            paddingTop: _this.state.floatingHeaderHeight\n          };\n        }\n\n        return _react.default.createElement(_StackViewCard.default, _extends({}, transitionProps, {\n          key: \"card_\" + scene.key,\n          position: _this.position,\n          realPosition: transitionProps.position,\n          animatedStyle: style,\n          transparent: transparentCard,\n          style: [paddingTopStyle, cardStyle],\n          scene: scene,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 858\n          }\n        }), _this._renderInnerScene(scene));\n      };\n\n      _this.panGestureRef = _react.default.createRef();\n      _this.gestureX = new _reactNative.Animated.Value(0);\n      _this.gestureY = new _reactNative.Animated.Value(0);\n      _this.positionSwitch = new _reactNative.Animated.Value(1);\n\n      if (_reactNative.Animated.subtract) {\n        _this.gestureSwitch = _reactNative.Animated.subtract(1, _this.positionSwitch);\n      } else {\n        _this.gestureSwitch = _reactNative.Animated.add(1, _reactNative.Animated.multiply(-1, _this.positionSwitch));\n      }\n\n      _this.gestureEvent = _reactNative.Animated.event([{\n        nativeEvent: {\n          translationX: _this.gestureX,\n          translationY: _this.gestureY\n        }\n      }], {\n        useNativeDriver: USE_NATIVE_DRIVER\n      });\n      _this.state = {\n        floatingHeaderHeight: getDefaultHeaderHeight(props.isLandscape)\n      };\n      return _this;\n    }\n\n    _createClass(StackViewLayout, [{\n      key: \"_renderHeader\",\n      value: function _renderHeader(scene, headerMode) {\n        var options = scene.descriptor.options;\n        var header = options.header;\n\n        if (__DEV__ && typeof header === 'string') {\n          throw new Error(\"Invalid header value: \\\"\" + header + \"\\\". The header option must be a valid React component or null, not a string.\");\n        }\n\n        if (header === null && headerMode === 'screen') {\n          return null;\n        }\n\n        if (_react.default.isValidElement(header)) {\n          return header;\n        }\n\n        var renderHeader = header || function (props) {\n          return _react.default.createElement(_Header.default, _extends({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 154\n            }\n          }));\n        };\n\n        var _this$_transitionConf = this._transitionConfig,\n            headerLeftInterpolator = _this$_transitionConf.headerLeftInterpolator,\n            headerTitleInterpolator = _this$_transitionConf.headerTitleInterpolator,\n            headerRightInterpolator = _this$_transitionConf.headerRightInterpolator,\n            headerBackgroundInterpolator = _this$_transitionConf.headerBackgroundInterpolator;\n\n        var backgroundTransitionPresetInterpolator = this._getHeaderBackgroundTransitionPreset();\n\n        if (backgroundTransitionPresetInterpolator) {\n          headerBackgroundInterpolator = backgroundTransitionPresetInterpolator;\n        }\n\n        var _this$props2 = this.props,\n            transitionProps = _this$props2.transitionProps,\n            passProps = _objectWithoutProperties(_this$props2, [\"transitionProps\"]);\n\n        return _react.default.createElement(_core.NavigationProvider, {\n          value: scene.descriptor.navigation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          }\n        }, renderHeader(_objectSpread({}, passProps, transitionProps, {\n          position: this.position,\n          scene: scene,\n          mode: headerMode,\n          transitionPreset: this._getHeaderTransitionPreset(),\n          layoutPreset: this._getHeaderLayoutPreset(),\n          backTitleVisible: this._getHeaderBackTitleVisible(),\n          leftInterpolator: headerLeftInterpolator,\n          titleInterpolator: headerTitleInterpolator,\n          rightInterpolator: headerRightInterpolator,\n          backgroundInterpolator: headerBackgroundInterpolator\n        })));\n      }\n    }, {\n      key: \"_reset\",\n      value: function _reset(resetToIndex, duration) {\n        if (_reactNative.Platform.OS === 'ios' && (0, _ReactNativeFeatures.supportsImprovedSpringAnimation)()) {\n          _reactNative.Animated.spring(this.props.transitionProps.position, {\n            toValue: resetToIndex,\n            stiffness: 6000,\n            damping: 100,\n            mass: 3,\n            overshootClamping: true,\n            restDisplacementThreshold: 0.01,\n            restSpeedThreshold: 0.01,\n            useNativeDriver: USE_NATIVE_DRIVER\n          }).start();\n        } else {\n          _reactNative.Animated.timing(this.props.transitionProps.position, {\n            toValue: resetToIndex,\n            duration: duration,\n            easing: EaseInOut,\n            useNativeDriver: USE_NATIVE_DRIVER\n          }).start();\n        }\n      }\n    }, {\n      key: \"_goBack\",\n      value: function _goBack(backFromIndex, duration) {\n        var _this2 = this;\n\n        var _this$props$transitio = this.props.transitionProps,\n            navigation = _this$props$transitio.navigation,\n            position = _this$props$transitio.position,\n            scenes = _this$props$transitio.scenes;\n        var toValue = Math.max(backFromIndex - 1, 0);\n        this._immediateIndex = toValue;\n\n        var onCompleteAnimation = function onCompleteAnimation() {\n          _this2._immediateIndex = null;\n          var backFromScene = scenes.find(function (s) {\n            return s.index === toValue + 1;\n          });\n\n          if (backFromScene) {\n            navigation.dispatch(_core.NavigationActions.back({\n              key: backFromScene.route.key,\n              immediate: true\n            }));\n            navigation.dispatch(_core.StackActions.completeTransition());\n          }\n        };\n\n        if (_reactNative.Platform.OS === 'ios' && (0, _ReactNativeFeatures.supportsImprovedSpringAnimation)()) {\n          _reactNative.Animated.spring(position, {\n            toValue: toValue,\n            stiffness: 7000,\n            damping: 300,\n            mass: 3,\n            overshootClamping: true,\n            restDisplacementThreshold: 0.01,\n            restSpeedThreshold: 0.01,\n            useNativeDriver: USE_NATIVE_DRIVER\n          }).start(onCompleteAnimation);\n        } else {\n          _reactNative.Animated.timing(position, {\n            toValue: toValue,\n            duration: duration,\n            easing: EaseInOut,\n            useNativeDriver: USE_NATIVE_DRIVER\n          }).start(onCompleteAnimation);\n        }\n      }\n    }, {\n      key: \"_prepareAnimated\",\n      value: function _prepareAnimated() {\n        if (this.props === this._prevProps) {\n          return;\n        }\n\n        this._prevProps = this.props;\n\n        this._prepareGesture();\n\n        this._preparePosition();\n\n        this._prepareTransitionConfig();\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        this._prepareAnimated();\n\n        var transitionProps = this.props.transitionProps;\n        var index = transitionProps.navigation.state.index,\n            scenes = transitionProps.scenes;\n\n        var headerMode = this._getHeaderMode();\n\n        var floatingHeader = null;\n\n        if (headerMode === 'float') {\n          var scene = transitionProps.scene;\n          floatingHeader = _react.default.createElement(_reactNative.View, {\n            style: styles.floatingHeader,\n            pointerEvents: \"box-none\",\n            onLayout: this._onFloatingHeaderLayout,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 289\n            }\n          }, this._renderHeader(scene, headerMode));\n        }\n\n        return _react.default.createElement(_reactNativeGestureHandler.PanGestureHandler, _extends({}, this._gestureActivationCriteria(), {\n          ref: this.panGestureRef,\n          onGestureEvent: this.gestureEvent,\n          onHandlerStateChange: this._handlePanGestureStateChange,\n          enabled: index > 0 && this._isGestureEnabled(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300\n          }\n        }), _react.default.createElement(_reactNative.Animated.View, {\n          style: [styles.container, this._transitionConfig.containerStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307\n          }\n        }, _react.default.createElement(_StackGestureContext.default.Provider, {\n          value: this.panGestureRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          }\n        }, _react.default.createElement(_reactNativeScreens.ScreenContainer, {\n          style: styles.scenes,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311\n          }\n        }, scenes.map(this._renderCard)), floatingHeader)));\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        var prevState = prevProps.transitionProps.navigation.state;\n        var state = this.props.transitionProps.navigation.state;\n\n        if (prevState.index !== state.index) {\n          this._maybeCancelGesture();\n        }\n      }\n    }, {\n      key: \"_getGestureResponseDistance\",\n      value: function _getGestureResponseDistance() {\n        var scene = this.props.transitionProps.scene;\n        var options = scene.descriptor.options;\n        var _options$gestureRespo = options.gestureResponseDistance,\n            userGestureResponseDistance = _options$gestureRespo === void 0 ? {} : _options$gestureRespo;\n        return this._isModal() ? userGestureResponseDistance.vertical || GESTURE_RESPONSE_DISTANCE_VERTICAL : userGestureResponseDistance.horizontal || GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n      }\n    }, {\n      key: \"_gestureActivationCriteria\",\n      value: function _gestureActivationCriteria() {\n        var layout = this.props.transitionProps.layout;\n\n        var gestureResponseDistance = this._getGestureResponseDistance();\n\n        var isMotionInverted = this._isMotionInverted();\n\n        if (this._isMotionVertical()) {\n          var height = layout.height.__getValue();\n\n          return {\n            maxDeltaX: 15,\n            minOffsetY: isMotionInverted ? -5 : 5,\n            hitSlop: isMotionInverted ? {\n              top: -height + gestureResponseDistance\n            } : {\n              bottom: -height + gestureResponseDistance\n            }\n          };\n        } else {\n          var width = layout.width.__getValue();\n\n          var hitSlop = -width + gestureResponseDistance;\n          return {\n            minOffsetX: isMotionInverted ? -5 : 5,\n            maxDeltaY: 20,\n            hitSlop: isMotionInverted ? {\n              left: hitSlop\n            } : {\n              right: hitSlop\n            }\n          };\n        }\n      }\n    }, {\n      key: \"_isGestureEnabled\",\n      value: function _isGestureEnabled() {\n        var gesturesEnabled = this.props.transitionProps.scene.descriptor.options.gesturesEnabled;\n        return typeof gesturesEnabled === 'boolean' ? gesturesEnabled : _reactNative.Platform.OS === 'ios';\n      }\n    }, {\n      key: \"_isMotionVertical\",\n      value: function _isMotionVertical() {\n        return this._isModal();\n      }\n    }, {\n      key: \"_isModal\",\n      value: function _isModal() {\n        return this.props.mode === 'modal';\n      }\n    }, {\n      key: \"_isMotionInverted\",\n      value: function _isMotionInverted() {\n        var scene = this.props.transitionProps.scene;\n        var options = scene.descriptor.options;\n        var gestureDirection = options.gestureDirection;\n\n        if (this._isModal()) {\n          return gestureDirection === 'inverted';\n        } else {\n          return typeof gestureDirection === 'string' ? gestureDirection === 'inverted' : _reactNative.I18nManager.isRTL;\n        }\n      }\n    }, {\n      key: \"_computeHorizontalGestureValue\",\n      value: function _computeHorizontalGestureValue(_ref2) {\n        var translationX = _ref2.translationX;\n        var _this$props$transitio2 = this.props.transitionProps,\n            navigation = _this$props$transitio2.navigation,\n            layout = _this$props$transitio2.layout;\n        var index = navigation.state.index;\n\n        var distance = layout.width.__getValue();\n\n        var x = this._isMotionInverted() ? -1 * translationX : translationX;\n        var value = index - x / distance;\n        return (0, _clamp.default)(index - 1, value, index);\n      }\n    }, {\n      key: \"_computeVerticalGestureValue\",\n      value: function _computeVerticalGestureValue(_ref3) {\n        var translationY = _ref3.translationY;\n        var _this$props$transitio3 = this.props.transitionProps,\n            navigation = _this$props$transitio3.navigation,\n            layout = _this$props$transitio3.layout;\n        var index = navigation.state.index;\n\n        var distance = layout.height.__getValue();\n\n        var y = this._isMotionInverted() ? -1 * translationY : translationY;\n        var value = index - y / distance;\n        return (0, _clamp.default)(index - 1, value, index);\n      }\n    }, {\n      key: \"_maybeCancelGesture\",\n      value: function _maybeCancelGesture() {\n        this.positionSwitch.setValue(1);\n      }\n    }, {\n      key: \"_prepareGesture\",\n      value: function _prepareGesture() {\n        if (!this._isGestureEnabled()) {\n          if (this.positionSwitch.__getValue() !== 1) {\n            this.positionSwitch.setValue(1);\n          }\n\n          this.gesturePosition = undefined;\n          return;\n        }\n\n        if (this.props.transitionProps.layout.width.__getValue() === 0 || this.props.transitionProps.layout.height.__getValue() === 0) {\n          return;\n        }\n\n        if (this._isMotionVertical()) {\n          this._prepareGestureVertical();\n        } else {\n          this._prepareGestureHorizontal();\n        }\n      }\n    }, {\n      key: \"_prepareGestureHorizontal\",\n      value: function _prepareGestureHorizontal() {\n        var index = this.props.transitionProps.navigation.state.index;\n\n        if (this._isMotionInverted()) {\n          this.gesturePosition = _reactNative.Animated.add(index, _reactNative.Animated.divide(this.gestureX, this.props.transitionProps.layout.width)).interpolate({\n            inputRange: [index - 1, index],\n            outputRange: [index - 1, index],\n            extrapolate: 'clamp'\n          });\n        } else {\n          this.gesturePosition = _reactNative.Animated.add(index, _reactNative.Animated.multiply(-1, _reactNative.Animated.divide(this.gestureX, this.props.transitionProps.layout.width))).interpolate({\n            inputRange: [index - 1, index],\n            outputRange: [index - 1, index],\n            extrapolate: 'clamp'\n          });\n        }\n      }\n    }, {\n      key: \"_prepareGestureVertical\",\n      value: function _prepareGestureVertical() {\n        var index = this.props.transitionProps.navigation.state.index;\n\n        if (this._isMotionInverted()) {\n          this.gesturePosition = _reactNative.Animated.add(index, _reactNative.Animated.divide(this.gestureY, this.props.transitionProps.layout.height)).interpolate({\n            inputRange: [index - 1, index],\n            outputRange: [index - 1, index],\n            extrapolate: 'clamp'\n          });\n        } else {\n          this.gesturePosition = _reactNative.Animated.add(index, _reactNative.Animated.multiply(-1, _reactNative.Animated.divide(this.gestureY, this.props.transitionProps.layout.height))).interpolate({\n            inputRange: [index - 1, index],\n            outputRange: [index - 1, index],\n            extrapolate: 'clamp'\n          });\n        }\n      }\n    }, {\n      key: \"_handleReleaseHorizontal\",\n      value: function _handleReleaseHorizontal(nativeEvent) {\n        var _this$props$transitio4 = this.props.transitionProps,\n            navigation = _this$props$transitio4.navigation,\n            position = _this$props$transitio4.position,\n            layout = _this$props$transitio4.layout;\n        var index = navigation.state.index;\n        var immediateIndex = this._immediateIndex == null ? index : this._immediateIndex;\n\n        var distance = layout.width.__getValue();\n\n        var movementDirection = this._isMotionInverted() ? -1 : 1;\n        var movedDistance = movementDirection * nativeEvent.translationX;\n        var gestureVelocity = movementDirection * nativeEvent.velocityX;\n        var defaultVelocity = distance / ANIMATION_DURATION;\n        var velocity = Math.max(Math.abs(gestureVelocity), defaultVelocity);\n        var resetDuration = this._isMotionInverted() ? (distance - movedDistance) / velocity : movedDistance / velocity;\n        var goBackDuration = this._isMotionInverted() ? movedDistance / velocity : (distance - movedDistance) / velocity;\n\n        var value = this._computeHorizontalGestureValue(nativeEvent);\n\n        position.setValue(value);\n        this.positionSwitch.setValue(1);\n\n        if (gestureVelocity < -50) {\n          this.props.onGestureCanceled && this.props.onGestureCanceled();\n\n          this._reset(immediateIndex, resetDuration);\n\n          return;\n        }\n\n        if (gestureVelocity > 50) {\n          this.props.onGestureFinish && this.props.onGestureFinish();\n\n          this._goBack(immediateIndex, goBackDuration);\n\n          return;\n        }\n\n        if (value <= index - POSITION_THRESHOLD) {\n          this.props.onGestureFinish && this.props.onGestureFinish();\n\n          this._goBack(immediateIndex, goBackDuration);\n        } else {\n          this.props.onGestureCanceled && this.props.onGestureCanceled();\n\n          this._reset(immediateIndex, resetDuration);\n        }\n      }\n    }, {\n      key: \"_handleReleaseVertical\",\n      value: function _handleReleaseVertical(nativeEvent) {\n        var _this$props$transitio5 = this.props.transitionProps,\n            navigation = _this$props$transitio5.navigation,\n            position = _this$props$transitio5.position,\n            layout = _this$props$transitio5.layout;\n        var index = navigation.state.index;\n        var immediateIndex = this._immediateIndex == null ? index : this._immediateIndex;\n\n        var distance = layout.height.__getValue();\n\n        var isMotionInverted = this._isMotionInverted();\n\n        var movementDirection = isMotionInverted ? -1 : 1;\n        var movedDistance = movementDirection * nativeEvent.translationY;\n        var gestureVelocity = movementDirection * nativeEvent.velocityY;\n        var defaultVelocity = distance / ANIMATION_DURATION;\n        var velocity = Math.max(Math.abs(gestureVelocity), defaultVelocity);\n        var resetDuration = isMotionInverted ? (distance - movedDistance) / velocity : movedDistance / velocity;\n        var goBackDuration = isMotionInverted ? movedDistance / velocity : (distance - movedDistance) / velocity;\n\n        var value = this._computeVerticalGestureValue(nativeEvent);\n\n        position.setValue(value);\n        this.positionSwitch.setValue(1);\n\n        if (gestureVelocity < -50) {\n          this.props.onGestureCanceled && this.props.onGestureCanceled();\n\n          this._reset(immediateIndex, resetDuration);\n\n          return;\n        }\n\n        if (gestureVelocity > 50) {\n          this.props.onGestureFinish && this.props.onGestureFinish();\n\n          this._goBack(immediateIndex, goBackDuration);\n\n          return;\n        }\n\n        if (value <= index - POSITION_THRESHOLD) {\n          this.props.onGestureFinish && this.props.onGestureFinish();\n\n          this._goBack(immediateIndex, goBackDuration);\n        } else {\n          this.props.onGestureCanceled && this.props.onGestureCanceled();\n\n          this._reset(immediateIndex, resetDuration);\n        }\n      }\n    }, {\n      key: \"_getHeaderMode\",\n      value: function _getHeaderMode() {\n        if (this.props.headerMode) {\n          return this.props.headerMode;\n        }\n\n        if (_reactNative.Platform.OS === 'android' || this.props.mode === 'modal') {\n          return 'screen';\n        }\n\n        return 'float';\n      }\n    }, {\n      key: \"_getHeaderBackgroundTransitionPreset\",\n      value: function _getHeaderBackgroundTransitionPreset() {\n        var headerBackgroundTransitionPreset = this.props.headerBackgroundTransitionPreset;\n\n        if (headerBackgroundTransitionPreset) {\n          if (HEADER_BACKGROUND_TRANSITION_PRESET.includes(headerBackgroundTransitionPreset)) {\n            if (headerBackgroundTransitionPreset === 'fade') {\n              return _HeaderStyleInterpolator.default.forBackgroundWithFade;\n            } else if (headerBackgroundTransitionPreset === 'translate') {\n              return _HeaderStyleInterpolator.default.forBackgroundWithTranslation;\n            } else if (headerBackgroundTransitionPreset === 'toggle') {\n              return _HeaderStyleInterpolator.default.forBackgroundWithInactiveHidden;\n            }\n          } else if (__DEV__) {\n            console.error(\"Invalid configuration applied for headerBackgroundTransitionPreset - expected one of \" + HEADER_BACKGROUND_TRANSITION_PRESET.join(', ') + \" but received \" + JSON.stringify(headerBackgroundTransitionPreset));\n          }\n        }\n\n        return null;\n      }\n    }, {\n      key: \"_getHeaderLayoutPreset\",\n      value: function _getHeaderLayoutPreset() {\n        var headerLayoutPreset = this.props.headerLayoutPreset;\n\n        if (headerLayoutPreset) {\n          if (__DEV__) {\n            if (this._getHeaderTransitionPreset() === 'uikit' && headerLayoutPreset === 'left' && _reactNative.Platform.OS === 'ios') {\n              console.warn(\"headerTransitionPreset with the value 'uikit' is incompatible with headerLayoutPreset 'left'\");\n            }\n          }\n\n          if (HEADER_LAYOUT_PRESET.includes(headerLayoutPreset)) {\n            return headerLayoutPreset;\n          }\n\n          if (__DEV__) {\n            console.error(\"Invalid configuration applied for headerLayoutPreset - expected one of \" + HEADER_LAYOUT_PRESET.join(', ') + \" but received \" + JSON.stringify(headerLayoutPreset));\n          }\n        }\n\n        if (_reactNative.Platform.OS === 'android') {\n          return 'left';\n        } else {\n          return 'center';\n        }\n      }\n    }, {\n      key: \"_getHeaderTransitionPreset\",\n      value: function _getHeaderTransitionPreset() {\n        if (_reactNative.Platform.OS === 'android' || this._getHeaderMode() === 'screen') {\n          return 'fade-in-place';\n        }\n\n        var headerTransitionPreset = this.props.headerTransitionPreset;\n\n        if (headerTransitionPreset) {\n          if (HEADER_TRANSITION_PRESET.includes(headerTransitionPreset)) {\n            return headerTransitionPreset;\n          }\n\n          if (__DEV__) {\n            console.error(\"Invalid configuration applied for headerTransitionPreset - expected one of \" + HEADER_TRANSITION_PRESET.join(', ') + \" but received \" + JSON.stringify(headerTransitionPreset));\n          }\n        }\n\n        return 'fade-in-place';\n      }\n    }, {\n      key: \"_getHeaderBackTitleVisible\",\n      value: function _getHeaderBackTitleVisible() {\n        var headerBackTitleVisible = this.props.headerBackTitleVisible;\n\n        var layoutPreset = this._getHeaderLayoutPreset();\n\n        var enabledByDefault = !(layoutPreset === 'left' || _reactNative.Platform.OS === 'android');\n        return typeof headerBackTitleVisible === 'boolean' ? headerBackTitleVisible : enabledByDefault;\n      }\n    }, {\n      key: \"_renderInnerScene\",\n      value: function _renderInnerScene(scene) {\n        var _scene$descriptor = scene.descriptor,\n            navigation = _scene$descriptor.navigation,\n            getComponent = _scene$descriptor.getComponent;\n        var SceneComponent = getComponent();\n        var screenProps = this.props.screenProps;\n\n        var headerMode = this._getHeaderMode();\n\n        if (headerMode === 'screen') {\n          return _react.default.createElement(_reactNative.View, {\n            style: styles.container,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 780\n            }\n          }, _react.default.createElement(_reactNative.View, {\n            style: styles.scenes,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 781\n            }\n          }, _react.default.createElement(_core.SceneView, {\n            screenProps: screenProps,\n            navigation: navigation,\n            component: SceneComponent,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 782\n            }\n          })), this._renderHeader(scene, headerMode));\n        }\n\n        return _react.default.createElement(_core.SceneView, {\n          screenProps: screenProps,\n          navigation: navigation,\n          component: SceneComponent,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 793\n          }\n        });\n      }\n    }, {\n      key: \"_prepareTransitionConfig\",\n      value: function _prepareTransitionConfig() {\n        this._transitionConfig = _StackViewTransitionConfigs.default.getTransitionConfig(this.props.transitionConfig, _objectSpread({}, this.props.transitionProps, {\n          position: this.position\n        }), this.props.lastTransitionProps, this._isModal());\n      }\n    }, {\n      key: \"_preparePosition\",\n      value: function _preparePosition() {\n        if (this.gesturePosition) {\n          this.position = _reactNative.Animated.add(_reactNative.Animated.multiply(this.props.transitionProps.position, this.positionSwitch), _reactNative.Animated.multiply(this.gesturePosition, this.gestureSwitch));\n        } else {\n          this.position = this.props.transitionProps.position;\n        }\n      }\n    }]);\n\n    return StackViewLayout;\n  }(_react.default.Component);\n\n  StackViewLayout = _wrapComponent(\"StackViewLayout\")(StackViewLayout);\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flex: 1,\n      flexDirection: 'column-reverse',\n      overflow: 'hidden'\n    },\n    scenes: {\n      flex: 1\n    },\n    floatingHeader: {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      right: 0\n    }\n  });\n\n  var _default2 = (0, _native.withOrientation)(StackViewLayout);\n\n  exports.default = _default2;\n});","map":[[7,0,1,0],[11,0,2,0],[13,0,11,0],[15,0,17,0],[17,0,18,0],[19,0,19,0],[21,0,21,0],[23,0,22,0],[25,0,23,0],[27,0,24,0],[29,0,25,0],[31,0,26,0],[33,0,27,0],[84,0,29,0],[84,6,29,6,"IPHONE_XS_HEIGHT"],[84,22,29,22],[84,25,29,25],[84,28,29,0],[85,0,30,0],[85,6,30,6,"IPHONE_XR_HEIGHT"],[85,22,30,22],[85,25,30,25],[85,28,30,0],[87,24,31,55,"Dimensions"],[87,48,31,66,"get"],[87,51,31,55],[87,52,31,70],[87,60,31,55],[87,61],[88,6,31,15,"WINDOW_WIDTH"],[88,18],[88,37,31,8,"width"],[88,42],[89,6,31,37,"WINDOW_HEIGHT"],[89,19],[89,38,31,29,"height"],[89,44],[91,0,32,0],[91,6,32,6,"IS_IPHONE_X"],[91,17,32,17],[91,20,33,2,"Platform"],[91,42,33,11,"OS"],[91,44,33,2],[91,49,33,18],[91,54,33,2],[91,58,34,2],[91,59,34,3,"Platform"],[91,81,34,12,"isPad"],[91,86,33,2],[91,90,35,2],[91,91,35,3,"Platform"],[91,113,35,12,"isTVOS"],[91,119,33,2],[91,124,36,3,"WINDOW_HEIGHT"],[91,137,36,16],[91,142,36,21,"IPHONE_XS_HEIGHT"],[91,158,36,3],[91,162,37,4,"WINDOW_WIDTH"],[91,174,37,16],[91,179,37,21,"IPHONE_XS_HEIGHT"],[91,195,36,3],[91,199,38,4,"WINDOW_HEIGHT"],[91,212,38,17],[91,217,38,22,"IPHONE_XR_HEIGHT"],[91,233,36,3],[91,237,39,4,"WINDOW_WIDTH"],[91,249,39,16],[91,254,39,21,"IPHONE_XR_HEIGHT"],[91,270,33,2],[91,271,32,0],[93,0,41,0],[93,6,41,6,"EaseInOut"],[93,15,41,15],[93,18,41,18,"Easing"],[93,38,41,25,"inOut"],[93,43,41,18],[93,44,41,31,"Easing"],[93,64,41,38,"ease"],[93,68,41,18],[93,69,41,0],[95,0,46,0],[95,6,46,6,"HEADER_LAYOUT_PRESET"],[95,26,46,26],[95,29,46,29],[95,30,46,30],[95,38,46,29],[95,40,46,40],[95,46,46,29],[95,47,46,0],[96,0,47,0],[96,6,47,6,"HEADER_TRANSITION_PRESET"],[96,30,47,30],[96,33,47,33],[96,34,47,34],[96,49,47,33],[96,51,47,51],[96,58,47,33],[96,59,47,0],[97,0,48,0],[97,6,48,6,"HEADER_BACKGROUND_TRANSITION_PRESET"],[97,41,48,41],[97,44,48,44],[97,45,48,45],[97,53,48,44],[97,55,48,55],[97,61,48,44],[97,63,48,63],[97,74,48,44],[97,75,48,0],[98,0,55,0],[98,6,55,6,"ANIMATION_DURATION"],[98,24,55,24],[98,27,55,27],[98,30,55,0],[99,0,62,0],[99,6,62,6,"POSITION_THRESHOLD"],[99,24,62,24],[99,27,62,27],[99,31,62,31],[99,32,62,0],[100,0,67,0],[100,6,67,6,"GESTURE_RESPONSE_DISTANCE_HORIZONTAL"],[100,42,67,42],[100,45,67,45],[100,47,67,0],[101,0,68,0],[101,6,68,6,"GESTURE_RESPONSE_DISTANCE_VERTICAL"],[101,40,68,40],[101,43,68,43],[101,46,68,0],[102,0,70,0],[102,6,70,6,"USE_NATIVE_DRIVER"],[102,23,70,23],[102,26,70,26],[102,30,70,0],[104,0,72,0],[104,6,72,6,"getDefaultHeaderHeight"],[104,28,72,28],[104,31,72,31],[104,40,72,6,"getDefaultHeaderHeight"],[104,62,72,31],[104,63,72,31,"isLandscape"],[104,74,72,42],[104,76,72,46],[105,0,73,2],[105,8,73,6,"Platform"],[105,30,73,15,"OS"],[105,32,73,6],[105,37,73,22],[105,42,73,2],[105,44,73,29],[106,0,74,4],[106,10,74,8,"isLandscape"],[106,21,74,19],[106,25,74,23],[106,26,74,24,"Platform"],[106,48,74,33,"isPad"],[106,53,74,4],[106,55,74,40],[107,0,75,6],[107,15,75,13],[107,17,75,6],[108,0,76,5],[108,7,74,4],[108,13,76,11],[108,17,76,15,"IS_IPHONE_X"],[108,28,76,11],[108,30,76,28],[109,0,77,6],[109,15,77,13],[109,17,77,6],[110,0,78,5],[110,7,76,11],[110,13,78,11],[111,0,79,6],[111,15,79,13],[111,17,79,6],[112,0,80,5],[113,0,81,3],[113,5,73,2],[113,11,81,9],[114,0,82,4],[114,13,82,11],[114,15,82,4],[115,0,83,3],[116,0,84,1],[116,3,72,0],[118,6,86,6,"StackViewLayout"],[118,21],[121,0,96,2],[121,29,96,14,"props"],[121,34,96,2],[121,36,96,21],[122,0,96,21],[124,0,96,21],[126,0,97,4],[126,91,97,10,"props"],[126,96,97,4],[127,0,96,21],[127,12,94,2,"_immediateIndex"],[127,27,96,21],[127,30,94,20],[127,34,96,21],[129,0,96,21],[129,12,255,2,"_onFloatingHeaderLayout"],[129,35,96,21],[129,38,255,28],[129,48,255,28,"e"],[129,49,255,29],[129,51,255,33],[130,0,255,33],[130,12,256,12,"height"],[130,18,255,33],[130,21,256,23,"e"],[130,22,256,24],[130,23,256,25,"nativeEvent"],[130,34,256,23],[130,35,256,37,"layout"],[130,41,255,33],[130,42,256,12,"height"],[130,48,255,33],[132,0,257,4],[132,12,257,8,"height"],[132,18,257,14],[132,23,257,19],[132,29,257,24,"state"],[132,34,257,19],[132,35,257,30,"floatingHeaderHeight"],[132,55,257,4],[132,57,257,52],[133,0,258,6],[133,16,258,11,"setState"],[133,24,258,6],[133,25,258,20],[134,0,258,22,"floatingHeaderHeight"],[134,12,258,22,"floatingHeaderHeight"],[134,32,258,42],[134,34,258,44,"height"],[135,0,258,20],[135,11,258,6],[136,0,259,5],[137,0,260,3],[137,7,96,21],[139,0,96,21],[139,12,435,2,"_handlePanGestureStateChange"],[139,40,96,21],[139,43,435,33],[139,59,435,54],[140,0,435,54],[140,12,435,36,"nativeEvent"],[140,23,435,54],[140,31,435,36,"nativeEvent"],[140,42,435,54],[142,0,436,4],[142,12,436,8,"nativeEvent"],[142,23,436,19],[142,24,436,20,"oldState"],[142,32,436,8],[142,37,436,33,"State"],[142,70,436,39,"ACTIVE"],[142,76,436,4],[142,78,436,47],[143,0,439,6],[143,14,439,10],[143,20,439,15,"positionSwitch"],[143,34,439,10],[143,35,439,30,"__getValue"],[143,45,439,10],[143,52,439,47],[143,53,439,6],[143,55,439,50],[144,0,440,8],[145,0,441,7],[147,0,443,6],[147,14,443,10],[147,20,443,15,"_isMotionVertical"],[147,37,443,10],[147,39,443,6],[147,41,443,36],[148,0,444,8],[148,18,444,13,"_handleReleaseVertical"],[148,40,444,8],[148,41,444,36,"nativeEvent"],[148,52,444,8],[149,0,445,7],[149,11,443,6],[149,17,445,13],[150,0,446,8],[150,18,446,13,"_handleReleaseHorizontal"],[150,42,446,8],[150,43,446,38,"nativeEvent"],[150,54,446,8],[151,0,447,7],[152,0,448,5],[152,9,436,4],[152,15,448,11],[152,19,448,15,"nativeEvent"],[152,30,448,26],[152,31,448,27,"state"],[152,36,448,15],[152,41,448,37,"State"],[152,74,448,43,"ACTIVE"],[152,80,448,11],[152,82,448,51],[153,0,450,6],[153,16,450,11,"positionSwitch"],[153,30,450,6],[153,31,450,26,"setValue"],[153,39,450,6],[153,40,450,35],[153,41,450,6],[154,0,463,5],[155,0,464,3],[155,7,96,21],[157,0,96,21],[157,12,827,2,"_renderCard"],[157,23,96,21],[157,26,827,16],[157,36,827,16,"scene"],[157,41,827,21],[157,43,827,25],[158,0,827,25],[158,26,834,8],[158,32,834,13,"props"],[158,37,827,25],[159,0,827,25],[159,12,829,6,"transitionProps"],[159,27,827,25],[159,42,829,6,"transitionProps"],[159,57,827,25],[160,0,827,25],[160,12,830,6,"shadowEnabled"],[160,25,827,25],[160,40,830,6,"shadowEnabled"],[160,53,827,25],[161,0,827,25],[161,12,831,6,"cardOverlayEnabled"],[161,30,827,25],[161,45,831,6,"cardOverlayEnabled"],[161,63,827,25],[162,0,827,25],[162,12,832,6,"transparentCard"],[162,27,827,25],[162,42,832,6,"transparentCard"],[162,57,827,25],[163,0,827,25],[163,12,833,6,"cardStyle"],[163,21,827,25],[163,36,833,6,"cardStyle"],[163,45,827,25],[164,0,827,25],[164,12,836,12,"screenInterpolator"],[164,30,827,25],[164,33,836,35],[164,39,836,40,"_transitionConfig"],[164,56,827,25],[164,57,836,12,"screenInterpolator"],[164,75,827,25],[165,0,837,4],[165,12,837,10,"style"],[165,17,837,15],[165,20,838,6,"screenInterpolator"],[165,38,838,24],[165,42,839,6,"screenInterpolator"],[165,60,839,24],[165,79,840,11,"transitionProps"],[165,94,839,24],[166,0,841,8,"shadowEnabled"],[166,10,841,8,"shadowEnabled"],[166,23,841,21],[166,25,841,8,"shadowEnabled"],[166,38,839,24],[167,0,842,8,"cardOverlayEnabled"],[167,10,842,8,"cardOverlayEnabled"],[167,28,842,26],[167,30,842,8,"cardOverlayEnabled"],[167,48,839,24],[168,0,843,8,"position"],[168,10,843,8,"position"],[168,18,843,16],[168,20,843,18],[168,26,843,23,"position"],[168,34,839,24],[169,0,844,8,"scene"],[169,10,844,8,"scene"],[169,15,844,13],[169,17,844,8,"scene"],[170,0,839,24],[170,11,837,4],[171,0,827,25],[171,12,849,12,"options"],[171,19,827,25],[171,22,849,24,"scene"],[171,27,849,29],[171,28,849,30,"descriptor"],[171,38,827,25],[171,39,849,12,"options"],[171,46,827,25],[172,0,850,4],[172,12,850,10,"hasHeader"],[172,21,850,19],[172,24,850,22,"options"],[172,31,850,29],[172,32,850,30,"header"],[172,38,850,22],[172,43,850,41],[172,47,850,4],[174,0,851,4],[174,12,851,10,"headerMode"],[174,22,851,20],[174,25,851,23],[174,31,851,28,"_getHeaderMode"],[174,45,851,23],[174,47,851,4],[176,0,852,4],[176,12,852,8,"paddingTopStyle"],[176,27,852,4],[178,0,853,4],[178,12,853,8,"hasHeader"],[178,21,853,17],[178,25,853,21,"headerMode"],[178,35,853,31],[178,40,853,36],[178,47,853,8],[178,51,853,47],[178,52,853,48,"options"],[178,59,853,55],[178,60,853,56,"headerTransparent"],[178,77,853,4],[178,79,853,75],[179,0,854,6,"paddingTopStyle"],[179,10,854,6,"paddingTopStyle"],[179,25,854,21],[179,28,854,24],[180,0,854,26,"paddingTop"],[180,12,854,26,"paddingTop"],[180,22,854,36],[180,24,854,38],[180,30,854,43,"state"],[180,35,854,38],[180,36,854,49,"floatingHeaderHeight"],[181,0,854,24],[181,11,854,6],[182,0,855,5],[184,0,857,4],[184,15,858,6],[184,44,858,7],[184,66,858,6],[184,81,859,12,"transitionProps"],[184,96,858,6],[185,0,860,8],[185,10,860,8],[185,13,860,11],[185,25,860,21,"scene"],[185,30,860,26],[185,31,860,27,"key"],[185,34,858,6],[186,0,861,8],[186,10,861,8],[186,18,861,16],[186,20,861,18],[186,26,861,23,"position"],[186,34,858,6],[187,0,862,8],[187,10,862,8],[187,22,862,20],[187,24,862,22,"transitionProps"],[187,39,862,37],[187,40,862,38,"position"],[187,48,858,6],[188,0,863,8],[188,10,863,8],[188,23,863,21],[188,25,863,23,"style"],[188,30,858,6],[189,0,864,8],[189,10,864,8],[189,21,864,19],[189,23,864,21,"transparentCard"],[189,38,858,6],[190,0,865,8],[190,10,865,8],[190,15,865,13],[190,17,865,15],[190,18,865,16,"paddingTopStyle"],[190,33,865,15],[190,35,865,33,"cardStyle"],[190,44,865,15],[190,45,858,6],[191,0,866,8],[191,10,866,8],[191,15,866,13],[191,17,866,15,"scene"],[191,22,858,6],[192,0,858,6],[193,0,858,6],[194,0,858,6],[195,0,858,6],[196,0,858,6],[196,12,868,9],[196,18,868,14,"_renderInnerScene"],[196,35,868,9],[196,36,868,32,"scene"],[196,41,868,9],[196,42,858,6],[196,43,857,4],[197,0,871,3],[197,7,96,21],[199,0,98,4],[199,12,98,9,"panGestureRef"],[199,25,98,4],[199,28,98,25,"React"],[199,43,98,31,"createRef"],[199,52,98,25],[199,54,98,4],[200,0,99,4],[200,12,99,9,"gestureX"],[200,20,99,4],[200,23,99,20],[200,27,99,24,"Animated"],[200,49,99,33,"Value"],[200,54,99,20],[200,55,99,39],[200,56,99,20],[200,57,99,4],[201,0,100,4],[201,12,100,9,"gestureY"],[201,20,100,4],[201,23,100,20],[201,27,100,24,"Animated"],[201,49,100,33,"Value"],[201,54,100,20],[201,55,100,39],[201,56,100,20],[201,57,100,4],[202,0,101,4],[202,12,101,9,"positionSwitch"],[202,26,101,4],[202,29,101,26],[202,33,101,30,"Animated"],[202,55,101,39,"Value"],[202,60,101,26],[202,61,101,45],[202,62,101,26],[202,63,101,4],[204,0,102,4],[204,10,102,8,"Animated"],[204,32,102,17,"subtract"],[204,40,102,4],[204,42,102,27],[205,0,103,6],[205,14,103,11,"gestureSwitch"],[205,27,103,6],[205,30,103,27,"Animated"],[205,52,103,36,"subtract"],[205,60,103,27],[205,61,103,45],[205,62,103,27],[205,64,103,48],[205,70,103,53,"positionSwitch"],[205,84,103,27],[205,85,103,6],[206,0,104,5],[206,7,102,4],[206,13,104,11],[207,0,105,6],[207,14,105,11,"gestureSwitch"],[207,27,105,6],[207,30,105,27,"Animated"],[207,52,105,36,"add"],[207,55,105,27],[207,56,106,8],[207,57,105,27],[207,59,107,8,"Animated"],[207,81,107,17,"multiply"],[207,89,107,8],[207,90,107,26],[207,91,107,27],[207,92,107,8],[207,94,107,30],[207,100,107,35,"positionSwitch"],[207,114,107,8],[207,115,105,27],[207,116,105,6],[208,0,109,5],[210,0,110,4],[210,12,110,9,"gestureEvent"],[210,24,110,4],[210,27,110,24,"Animated"],[210,49,110,33,"event"],[210,54,110,24],[210,55,111,6],[210,56,112,8],[211,0,113,10,"nativeEvent"],[211,8,113,10,"nativeEvent"],[211,19,113,21],[211,21,113,23],[212,0,114,12,"translationX"],[212,10,114,12,"translationX"],[212,22,114,24],[212,24,114,26],[212,30,114,31,"gestureX"],[212,38,113,23],[213,0,115,12,"translationY"],[213,10,115,12,"translationY"],[213,22,115,24],[213,24,115,26],[213,30,115,31,"gestureY"],[214,0,113,23],[215,0,112,8],[215,7,111,6],[215,8,110,24],[215,10,119,6],[216,0,120,8,"useNativeDriver"],[216,8,120,8,"useNativeDriver"],[216,23,120,23],[216,25,120,25,"USE_NATIVE_DRIVER"],[217,0,119,6],[217,7,110,24],[217,8,110,4],[218,0,124,4],[218,12,124,9,"state"],[218,17,124,4],[218,20,124,17],[219,0,130,6,"floatingHeaderHeight"],[219,8,130,6,"floatingHeaderHeight"],[219,28,130,26],[219,30,130,28,"getDefaultHeaderHeight"],[219,52,130,50],[219,53,130,51,"props"],[219,58,130,56],[219,59,130,57,"isLandscape"],[219,70,130,50],[220,0,124,17],[220,7,124,4],[221,0,96,21],[222,0,132,3],[226,36,134,16,"scene"],[226,41],[226,43,134,23,"headerMode"],[226,53],[226,55,134,35],[227,0,134,35],[227,12,135,12,"options"],[227,19,134,35],[227,22,135,24,"scene"],[227,27,135,29],[227,28,135,30,"descriptor"],[227,38,134,35],[227,39,135,12,"options"],[227,46,134,35],[228,0,134,35],[228,12,136,12,"header"],[228,18,134,35],[228,21,136,23,"options"],[228,28,134,35],[228,29,136,12,"header"],[228,35,134,35],[230,0,138,4],[230,12,138,8,"__DEV__"],[230,19,138,15],[230,23,138,19],[230,30,138,26,"header"],[230,36,138,19],[230,41,138,37],[230,49,138,4],[230,51,138,47],[231,0,139,6],[231,16,139,12],[231,20,139,16,"Error"],[231,25,139,12],[231,55,140,34,"header"],[231,61,139,12],[231,143,139,6],[232,0,142,5],[234,0,144,4],[234,12,144,8,"header"],[234,18,144,14],[234,23,144,19],[234,27,144,8],[234,31,144,27,"headerMode"],[234,41,144,37],[234,46,144,42],[234,54,144,4],[234,56,144,52],[235,0,145,6],[235,17,145,13],[235,21,145,6],[236,0,146,5],[238,0,149,4],[238,12,149,8,"React"],[238,27,149,14,"isValidElement"],[238,41,149,8],[238,42,149,29,"header"],[238,48,149,8],[238,49,149,4],[238,51,149,38],[239,0,150,6],[239,17,150,13,"header"],[239,23,150,6],[240,0,151,5],[242,0,154,4],[242,12,154,10,"renderHeader"],[242,24,154,22],[242,27,154,25,"header"],[242,33,154,31],[242,37,154,36],[242,47,154,36,"props"],[242,52,154,41],[243,0,154,41],[243,17,154,45],[243,46,154,46],[243,61,154,45],[243,76,154,57,"props"],[243,81,154,45],[244,0,154,45],[245,0,154,45],[246,0,154,45],[247,0,154,45],[248,0,154,45],[248,13,154,41],[249,0,154,41],[249,9,154,4],[251,0,134,35],[251,36,161,8],[251,41,161,13,"_transitionConfig"],[251,58,134,35],[252,0,134,35],[252,12,157,6,"headerLeftInterpolator"],[252,34,134,35],[252,59,157,6,"headerLeftInterpolator"],[252,81,134,35],[253,0,134,35],[253,12,158,6,"headerTitleInterpolator"],[253,35,134,35],[253,60,158,6,"headerTitleInterpolator"],[253,83,134,35],[254,0,134,35],[254,12,159,6,"headerRightInterpolator"],[254,35,134,35],[254,60,159,6,"headerRightInterpolator"],[254,83,134,35],[255,0,134,35],[255,12,160,6,"headerBackgroundInterpolator"],[255,40,134,35],[255,65,160,6,"headerBackgroundInterpolator"],[255,93,134,35],[257,0,163,4],[257,12,163,10,"backgroundTransitionPresetInterpolator"],[257,50,163,48],[257,53,163,51],[257,58,163,56,"_getHeaderBackgroundTransitionPreset"],[257,94,163,51],[257,96,163,4],[259,0,164,4],[259,12,164,8,"backgroundTransitionPresetInterpolator"],[259,50,164,4],[259,52,164,48],[260,0,165,6,"headerBackgroundInterpolator"],[260,10,165,6,"headerBackgroundInterpolator"],[260,38,165,34],[260,41,165,37,"backgroundTransitionPresetInterpolator"],[260,79,165,6],[261,0,166,5],[263,0,134,35],[263,27,168,46],[263,32,168,51,"props"],[263,37,134,35],[264,0,134,35],[264,12,168,12,"transitionProps"],[264,27,134,35],[264,43,168,12,"transitionProps"],[264,58,134,35],[265,0,134,35],[265,12,168,32,"passProps"],[265,21,134,35],[267,0,170,4],[267,15,171,6],[267,44,171,7],[267,68,171,6],[268,0,171,26],[268,10,171,26],[268,15,171,31],[268,17,171,33,"scene"],[268,22,171,38],[268,23,171,39,"descriptor"],[268,33,171,33],[268,34,171,50,"navigation"],[268,44,171,6],[269,0,171,6],[270,0,171,6],[271,0,171,6],[272,0,171,6],[273,0,171,6],[273,11,172,9,"renderHeader"],[273,23,172,21],[273,42,173,13,"passProps"],[273,51,172,21],[273,53,174,13,"transitionProps"],[273,68,172,21],[274,0,175,10,"position"],[274,10,175,10,"position"],[274,18,175,18],[274,20,175,20],[274,25,175,25,"position"],[274,33,172,21],[275,0,176,10,"scene"],[275,10,176,10,"scene"],[275,15,176,15],[275,17,176,10,"scene"],[275,22,172,21],[276,0,177,10,"mode"],[276,10,177,10,"mode"],[276,14,177,14],[276,16,177,16,"headerMode"],[276,26,172,21],[277,0,178,10,"transitionPreset"],[277,10,178,10,"transitionPreset"],[277,26,178,26],[277,28,178,28],[277,33,178,33,"_getHeaderTransitionPreset"],[277,59,178,28],[277,61,172,21],[278,0,179,10,"layoutPreset"],[278,10,179,10,"layoutPreset"],[278,22,179,22],[278,24,179,24],[278,29,179,29,"_getHeaderLayoutPreset"],[278,51,179,24],[278,53,172,21],[279,0,180,10,"backTitleVisible"],[279,10,180,10,"backTitleVisible"],[279,26,180,26],[279,28,180,28],[279,33,180,33,"_getHeaderBackTitleVisible"],[279,59,180,28],[279,61,172,21],[280,0,181,10,"leftInterpolator"],[280,10,181,10,"leftInterpolator"],[280,26,181,26],[280,28,181,28,"headerLeftInterpolator"],[280,50,172,21],[281,0,182,10,"titleInterpolator"],[281,10,182,10,"titleInterpolator"],[281,27,182,27],[281,29,182,29,"headerTitleInterpolator"],[281,52,172,21],[282,0,183,10,"rightInterpolator"],[282,10,183,10,"rightInterpolator"],[282,27,183,27],[282,29,183,29,"headerRightInterpolator"],[282,52,172,21],[283,0,184,10,"backgroundInterpolator"],[283,10,184,10,"backgroundInterpolator"],[283,32,184,32],[283,34,184,34,"headerBackgroundInterpolator"],[284,0,172,21],[284,11,171,6],[284,12,170,4],[285,0,188,3],[288,29,190,9,"resetToIndex"],[288,41],[288,43,190,23,"duration"],[288,51],[288,53,190,33],[289,0,191,4],[289,12,191,8,"Platform"],[289,34,191,17,"OS"],[289,36,191,8],[289,41,191,24],[289,46,191,8],[289,50,191,33],[289,109,191,4],[289,111,191,68],[290,0,192,6,"Animated"],[290,32,192,15,"spring"],[290,38,192,6],[290,39,192,22],[290,44,192,27,"props"],[290,49,192,22],[290,50,192,33,"transitionProps"],[290,65,192,22],[290,66,192,49,"position"],[290,74,192,6],[290,76,192,59],[291,0,193,8,"toValue"],[291,12,193,8,"toValue"],[291,19,193,15],[291,21,193,17,"resetToIndex"],[291,33,192,59],[292,0,194,8,"stiffness"],[292,12,194,8,"stiffness"],[292,21,194,17],[292,23,194,19],[292,27,192,59],[293,0,195,8,"damping"],[293,12,195,8,"damping"],[293,19,195,15],[293,21,195,17],[293,24,192,59],[294,0,196,8,"mass"],[294,12,196,8,"mass"],[294,16,196,12],[294,18,196,14],[294,19,192,59],[295,0,197,8,"overshootClamping"],[295,12,197,8,"overshootClamping"],[295,29,197,25],[295,31,197,27],[295,35,192,59],[296,0,198,8,"restDisplacementThreshold"],[296,12,198,8,"restDisplacementThreshold"],[296,37,198,33],[296,39,198,35],[296,43,192,59],[297,0,199,8,"restSpeedThreshold"],[297,12,199,8,"restSpeedThreshold"],[297,30,199,26],[297,32,199,28],[297,36,192,59],[298,0,200,8,"useNativeDriver"],[298,12,200,8,"useNativeDriver"],[298,27,200,23],[298,29,200,25,"USE_NATIVE_DRIVER"],[299,0,192,59],[299,11,192,6],[299,13,201,9,"start"],[299,18,192,6],[300,0,202,5],[300,9,191,4],[300,15,202,11],[301,0,203,6,"Animated"],[301,32,203,15,"timing"],[301,38,203,6],[301,39,203,22],[301,44,203,27,"props"],[301,49,203,22],[301,50,203,33,"transitionProps"],[301,65,203,22],[301,66,203,49,"position"],[301,74,203,6],[301,76,203,59],[302,0,204,8,"toValue"],[302,12,204,8,"toValue"],[302,19,204,15],[302,21,204,17,"resetToIndex"],[302,33,203,59],[303,0,205,8,"duration"],[303,12,205,8,"duration"],[303,20,205,16],[303,22,205,8,"duration"],[303,30,203,59],[304,0,206,8,"easing"],[304,12,206,8,"easing"],[304,18,206,14],[304,20,206,16,"EaseInOut"],[304,29,203,59],[305,0,207,8,"useNativeDriver"],[305,12,207,8,"useNativeDriver"],[305,27,207,23],[305,29,207,25,"USE_NATIVE_DRIVER"],[306,0,203,59],[306,11,203,6],[306,13,208,9,"start"],[306,18,203,6],[307,0,209,5],[308,0,210,3],[311,30,212,10,"backFromIndex"],[311,43],[311,45,212,25,"duration"],[311,53],[311,55,212,35],[312,0,212,35],[314,0,212,35],[314,36,213,45],[314,41,213,50,"props"],[314,46,213,45],[314,47,213,56,"transitionProps"],[314,62,212,35],[315,0,212,35],[315,12,213,12,"navigation"],[315,22,212,35],[315,47,213,12,"navigation"],[315,57,212,35],[316,0,212,35],[316,12,213,24,"position"],[316,20,212,35],[316,45,213,24,"position"],[316,53,212,35],[317,0,212,35],[317,12,213,34,"scenes"],[317,18,212,35],[317,43,213,34,"scenes"],[317,49,212,35],[318,0,214,4],[318,12,214,10,"toValue"],[318,19,214,17],[318,22,214,20,"Math"],[318,26,214,24],[318,27,214,25,"max"],[318,30,214,20],[318,31,214,29,"backFromIndex"],[318,44,214,42],[318,47,214,45],[318,48,214,20],[318,50,214,48],[318,51,214,20],[318,52,214,4],[319,0,218,4],[319,13,218,9,"_immediateIndex"],[319,28,218,4],[319,31,218,27,"toValue"],[319,38,218,4],[321,0,220,4],[321,12,220,10,"onCompleteAnimation"],[321,31,220,29],[321,34,220,32],[321,43,220,10,"onCompleteAnimation"],[321,62,220,32],[321,65,220,38],[322,0,221,6],[322,10,221,6],[322,16,221,10],[322,17,221,11,"_immediateIndex"],[322,32,221,6],[322,35,221,29],[322,39,221,6],[323,0,222,6],[323,14,222,12,"backFromScene"],[323,27,222,25],[323,30,222,28,"scenes"],[323,36,222,34],[323,37,222,35,"find"],[323,41,222,28],[323,42,222,40],[323,52,222,40,"s"],[323,53,222,41],[324,0,222,41],[324,19,222,45,"s"],[324,20,222,46],[324,21,222,47,"index"],[324,26,222,45],[324,31,222,57,"toValue"],[324,38,222,64],[324,41,222,67],[324,42,222,41],[325,0,222,41],[325,11,222,28],[325,12,222,6],[327,0,223,6],[327,14,223,10,"backFromScene"],[327,27,223,6],[327,29,223,25],[328,0,224,8,"navigation"],[328,12,224,8,"navigation"],[328,22,224,18],[328,23,224,19,"dispatch"],[328,31,224,8],[328,32,225,10,"NavigationActions"],[328,56,225,28,"back"],[328,60,225,10],[328,61,225,33],[329,0,226,12,"key"],[329,14,226,12,"key"],[329,17,226,15],[329,19,226,17,"backFromScene"],[329,32,226,30],[329,33,226,31,"route"],[329,38,226,17],[329,39,226,37,"key"],[329,42,225,33],[330,0,227,12,"immediate"],[330,14,227,12,"immediate"],[330,23,227,21],[330,25,227,23],[331,0,225,33],[331,13,225,10],[331,14,224,8],[332,0,230,8,"navigation"],[332,12,230,8,"navigation"],[332,22,230,18],[332,23,230,19,"dispatch"],[332,31,230,8],[332,32,230,28,"StackActions"],[332,51,230,41,"completeTransition"],[332,69,230,28],[332,71,230,8],[333,0,231,7],[334,0,232,5],[334,9,220,4],[336,0,234,4],[336,12,234,8,"Platform"],[336,34,234,17,"OS"],[336,36,234,8],[336,41,234,24],[336,46,234,8],[336,50,234,33],[336,109,234,4],[336,111,234,68],[337,0,235,6,"Animated"],[337,32,235,15,"spring"],[337,38,235,6],[337,39,235,22,"position"],[337,47,235,6],[337,49,235,32],[338,0,236,8,"toValue"],[338,12,236,8,"toValue"],[338,19,236,15],[338,21,236,8,"toValue"],[338,28,235,32],[339,0,237,8,"stiffness"],[339,12,237,8,"stiffness"],[339,21,237,17],[339,23,237,19],[339,27,235,32],[340,0,238,8,"damping"],[340,12,238,8,"damping"],[340,19,238,15],[340,21,238,17],[340,24,235,32],[341,0,239,8,"mass"],[341,12,239,8,"mass"],[341,16,239,12],[341,18,239,14],[341,19,235,32],[342,0,240,8,"overshootClamping"],[342,12,240,8,"overshootClamping"],[342,29,240,25],[342,31,240,27],[342,35,235,32],[343,0,241,8,"restDisplacementThreshold"],[343,12,241,8,"restDisplacementThreshold"],[343,37,241,33],[343,39,241,35],[343,43,235,32],[344,0,242,8,"restSpeedThreshold"],[344,12,242,8,"restSpeedThreshold"],[344,30,242,26],[344,32,242,28],[344,36,235,32],[345,0,243,8,"useNativeDriver"],[345,12,243,8,"useNativeDriver"],[345,27,243,23],[345,29,243,25,"USE_NATIVE_DRIVER"],[346,0,235,32],[346,11,235,6],[346,13,244,9,"start"],[346,18,235,6],[346,19,244,15,"onCompleteAnimation"],[346,38,235,6],[347,0,245,5],[347,9,234,4],[347,15,245,11],[348,0,246,6,"Animated"],[348,32,246,15,"timing"],[348,38,246,6],[348,39,246,22,"position"],[348,47,246,6],[348,49,246,32],[349,0,247,8,"toValue"],[349,12,247,8,"toValue"],[349,19,247,15],[349,21,247,8,"toValue"],[349,28,246,32],[350,0,248,8,"duration"],[350,12,248,8,"duration"],[350,20,248,16],[350,22,248,8,"duration"],[350,30,246,32],[351,0,249,8,"easing"],[351,12,249,8,"easing"],[351,18,249,14],[351,20,249,16,"EaseInOut"],[351,29,246,32],[352,0,250,8,"useNativeDriver"],[352,12,250,8,"useNativeDriver"],[352,27,250,23],[352,29,250,25,"USE_NATIVE_DRIVER"],[353,0,246,32],[353,11,246,6],[353,13,251,9,"start"],[353,18,246,6],[353,19,251,15,"onCompleteAnimation"],[353,38,246,6],[354,0,252,5],[355,0,253,3],[358,41,262,21],[359,0,263,4],[359,12,263,8],[359,17,263,13,"props"],[359,22,263,8],[359,27,263,23],[359,32,263,28,"_prevProps"],[359,42,263,4],[359,44,263,40],[360,0,264,6],[361,0,265,5],[363,0,266,4],[363,13,266,9,"_prevProps"],[363,23,266,4],[363,26,266,22],[363,31,266,27,"props"],[363,36,266,4],[365,0,268,4],[365,13,268,9,"_prepareGesture"],[365,28,268,4],[367,0,269,4],[367,13,269,9,"_preparePosition"],[367,29,269,4],[369,0,270,4],[369,13,270,9,"_prepareTransitionConfig"],[369,37,270,4],[370,0,271,3],[373,31,273,11],[374,0,274,4],[374,13,274,9,"_prepareAnimated"],[374,29,274,4],[376,0,273,11],[376,12,276,12,"transitionProps"],[376,27,273,11],[376,30,276,32],[376,35,276,37,"props"],[376,40,273,11],[376,41,276,12,"transitionProps"],[376,56,273,11],[377,0,273,11],[377,12,279,17,"index"],[377,17,273,11],[377,20,282,8,"transitionProps"],[377,35,273,11],[377,36,278,6,"navigation"],[377,46,273,11],[377,47,279,8,"state"],[377,52,273,11],[377,53,279,17,"index"],[377,58,273,11],[378,0,273,11],[378,12,281,6,"scenes"],[378,18,273,11],[378,21,282,8,"transitionProps"],[378,36,273,11],[378,37,281,6,"scenes"],[378,43,273,11],[380,0,284,4],[380,12,284,10,"headerMode"],[380,22,284,20],[380,25,284,23],[380,30,284,28,"_getHeaderMode"],[380,44,284,23],[380,46,284,4],[382,0,285,4],[382,12,285,8,"floatingHeader"],[382,26,285,22],[382,29,285,25],[382,33,285,4],[384,0,286,4],[384,12,286,8,"headerMode"],[384,22,286,18],[384,27,286,23],[384,34,286,4],[384,36,286,32],[385,0,286,32],[385,14,287,14,"scene"],[385,19,286,32],[385,22,287,24,"transitionProps"],[385,37,286,32],[385,38,287,14,"scene"],[385,43,286,32],[386,0,288,6,"floatingHeader"],[386,10,288,6,"floatingHeader"],[386,24,288,20],[386,27,289,8],[386,56,289,9],[386,73,289,8],[387,0,290,10],[387,12,290,10],[387,17,290,15],[387,19,290,17,"styles"],[387,25,290,23],[387,26,290,24,"floatingHeader"],[387,40,289,8],[388,0,291,10],[388,12,291,10],[388,25,291,23],[388,27,291,24],[388,37,289,8],[389,0,292,10],[389,12,292,10],[389,20,292,18],[389,22,292,20],[389,27,292,25,"_onFloatingHeaderLayout"],[389,50,289,8],[390,0,289,8],[391,0,289,8],[392,0,289,8],[393,0,289,8],[394,0,289,8],[394,13,294,11],[394,18,294,16,"_renderHeader"],[394,31,294,11],[394,32,294,30,"scene"],[394,37,294,11],[394,39,294,37,"headerMode"],[394,49,294,11],[394,50,289,8],[394,51,288,6],[395,0,297,5],[397,0,299,4],[397,15,300,6],[397,44,300,7],[397,88,300,6],[397,103,301,12],[397,108,301,17,"_gestureActivationCriteria"],[397,134,301,12],[397,136,300,6],[398,0,302,8],[398,10,302,8],[398,13,302,11],[398,15,302,13],[398,20,302,18,"panGestureRef"],[398,33,300,6],[399,0,303,8],[399,10,303,8],[399,24,303,22],[399,26,303,24],[399,31,303,29,"gestureEvent"],[399,43,300,6],[400,0,304,8],[400,10,304,8],[400,30,304,28],[400,32,304,30],[400,37,304,35,"_handlePanGestureStateChange"],[400,65,300,6],[401,0,305,8],[401,10,305,8],[401,17,305,15],[401,19,305,17,"index"],[401,24,305,22],[401,27,305,25],[401,28,305,17],[401,32,305,30],[401,37,305,35,"_isGestureEnabled"],[401,54,305,30],[401,56,300,6],[402,0,300,6],[403,0,300,6],[404,0,300,6],[405,0,300,6],[406,0,300,6],[406,12,307,8],[406,41,307,9],[406,62,307,8],[406,63,307,18],[406,67,307,8],[407,0,308,10],[407,10,308,10],[407,15,308,15],[407,17,308,17],[407,18,308,18,"styles"],[407,24,308,24],[407,25,308,25,"container"],[407,34,308,17],[407,36,308,36],[407,41,308,41,"_transitionConfig"],[407,58,308,36],[407,59,308,59,"containerStyle"],[407,73,308,17],[407,74,307,8],[408,0,307,8],[409,0,307,8],[410,0,307,8],[411,0,307,8],[412,0,307,8],[412,11,310,10],[412,40,310,11],[412,68,310,10],[412,69,310,31],[412,77,310,10],[413,0,310,40],[413,10,310,40],[413,15,310,45],[413,17,310,47],[413,22,310,52,"panGestureRef"],[413,35,310,10],[414,0,310,10],[415,0,310,10],[416,0,310,10],[417,0,310,10],[418,0,310,10],[418,11,311,12],[418,40,311,13],[418,75,311,12],[419,0,311,29],[419,10,311,29],[419,15,311,34],[419,17,311,36,"styles"],[419,23,311,42],[419,24,311,43,"scenes"],[419,30,311,12],[420,0,311,12],[421,0,311,12],[422,0,311,12],[423,0,311,12],[424,0,311,12],[424,11,312,15,"scenes"],[424,17,312,21],[424,18,312,22,"map"],[424,21,312,15],[424,22,312,26],[424,27,312,31,"_renderCard"],[424,38,312,15],[424,39,311,12],[424,40,310,10],[424,42,314,13,"floatingHeader"],[424,56,310,10],[424,57,307,8],[424,58,300,6],[424,59,299,4],[425,0,319,3],[428,41,321,21,"prevProps"],[428,50],[428,52,321,32],[429,0,321,32],[429,12,322,19,"prevState"],[429,21,321,32],[429,24,322,33,"prevProps"],[429,33,322,42],[429,34,322,43,"transitionProps"],[429,49,322,33],[429,50,322,59,"navigation"],[429,60,321,32],[429,61,322,12,"state"],[429,66,321,32],[430,0,321,32],[430,12,323,12,"state"],[430,17,321,32],[430,20,323,22],[430,25,323,27,"props"],[430,30,323,22],[430,31,323,33,"transitionProps"],[430,46,323,22],[430,47,323,49,"navigation"],[430,57,321,32],[430,58,323,12,"state"],[430,63,321,32],[432,0,324,4],[432,12,324,8,"prevState"],[432,21,324,17],[432,22,324,18,"index"],[432,27,324,8],[432,32,324,28,"state"],[432,37,324,33],[432,38,324,34,"index"],[432,43,324,4],[432,45,324,41],[433,0,325,6],[433,15,325,11,"_maybeCancelGesture"],[433,34,325,6],[434,0,326,5],[435,0,327,3],[438,52,329,32],[439,0,329,32],[439,12,330,12,"scene"],[439,17,329,32],[439,20,330,22],[439,25,330,27,"props"],[439,30,330,22],[439,31,330,33,"transitionProps"],[439,46,329,32],[439,47,330,12,"scene"],[439,52,329,32],[440,0,329,32],[440,12,331,12,"options"],[440,19,329,32],[440,22,331,24,"scene"],[440,27,331,29],[440,28,331,30,"descriptor"],[440,38,329,32],[440,39,331,12,"options"],[440,46,329,32],[441,0,329,32],[441,36,334,8,"options"],[441,43,329,32],[441,44,333,6,"gestureResponseDistance"],[441,67,329,32],[442,0,329,32],[442,12,333,31,"userGestureResponseDistance"],[442,39,329,32],[442,77,333,61],[442,79,329,32],[443,0,337,4],[443,15,337,11],[443,20,337,16,"_isModal"],[443,28,337,11],[443,33,338,8,"userGestureResponseDistance"],[443,60,338,35],[443,61,338,36,"vertical"],[443,69,338,8],[443,73,339,10,"GESTURE_RESPONSE_DISTANCE_VERTICAL"],[443,107,337,11],[443,110,340,8,"userGestureResponseDistance"],[443,137,340,35],[443,138,340,36,"horizontal"],[443,148,340,8],[443,152,341,10,"GESTURE_RESPONSE_DISTANCE_HORIZONTAL"],[443,188,337,4],[444,0,342,3],[447,51,344,31],[448,0,344,31],[448,12,345,12,"layout"],[448,18,344,31],[448,21,345,23],[448,26,345,28,"props"],[448,31,345,23],[448,32,345,34,"transitionProps"],[448,47,344,31],[448,48,345,12,"layout"],[448,54,344,31],[450,0,346,4],[450,12,346,10,"gestureResponseDistance"],[450,35,346,33],[450,38,346,36],[450,43,346,41,"_getGestureResponseDistance"],[450,70,346,36],[450,72,346,4],[452,0,347,4],[452,12,347,10,"isMotionInverted"],[452,28,347,26],[452,31,347,29],[452,36,347,34,"_isMotionInverted"],[452,53,347,29],[452,55,347,4],[454,0,349,4],[454,12,349,8],[454,17,349,13,"_isMotionVertical"],[454,34,349,8],[454,36,349,4],[454,38,349,34],[455,0,350,6],[455,14,350,12,"height"],[455,20,350,18],[455,23,350,21,"layout"],[455,29,350,27],[455,30,350,28,"height"],[455,36,350,21],[455,37,350,35,"__getValue"],[455,47,350,21],[455,49,350,6],[457,0,352,6],[457,17,352,13],[458,0,353,8,"maxDeltaX"],[458,12,353,8,"maxDeltaX"],[458,21,353,17],[458,23,353,19],[458,25,352,13],[459,0,354,8,"minOffsetY"],[459,12,354,8,"minOffsetY"],[459,22,354,18],[459,24,354,20,"isMotionInverted"],[459,40,354,36],[459,43,354,39],[459,44,354,40],[459,45,354,36],[459,48,354,44],[459,49,352,13],[460,0,355,8,"hitSlop"],[460,12,355,8,"hitSlop"],[460,19,355,15],[460,21,355,17,"isMotionInverted"],[460,37,355,33],[460,40,356,12],[461,0,356,14,"top"],[461,14,356,14,"top"],[461,17,356,17],[461,19,356,19],[461,20,356,20,"height"],[461,26,356,19],[461,29,356,29,"gestureResponseDistance"],[462,0,356,12],[462,13,355,33],[462,16,357,12],[463,0,357,14,"bottom"],[463,14,357,14,"bottom"],[463,20,357,20],[463,22,357,22],[463,23,357,23,"height"],[463,29,357,22],[463,32,357,32,"gestureResponseDistance"],[464,0,357,12],[465,0,352,13],[465,11,352,6],[466,0,359,5],[466,9,349,4],[466,15,359,11],[467,0,360,6],[467,14,360,12,"width"],[467,19,360,17],[467,22,360,20,"layout"],[467,28,360,26],[467,29,360,27,"width"],[467,34,360,20],[467,35,360,33,"__getValue"],[467,45,360,20],[467,47,360,6],[469,0,361,6],[469,14,361,12,"hitSlop"],[469,21,361,19],[469,24,361,22],[469,25,361,23,"width"],[469,30,361,22],[469,33,361,31,"gestureResponseDistance"],[469,56,361,6],[470,0,363,6],[470,17,363,13],[471,0,364,8,"minOffsetX"],[471,12,364,8,"minOffsetX"],[471,22,364,18],[471,24,364,20,"isMotionInverted"],[471,40,364,36],[471,43,364,39],[471,44,364,40],[471,45,364,36],[471,48,364,44],[471,49,363,13],[472,0,365,8,"maxDeltaY"],[472,12,365,8,"maxDeltaY"],[472,21,365,17],[472,23,365,19],[472,25,363,13],[473,0,366,8,"hitSlop"],[473,12,366,8,"hitSlop"],[473,19,366,15],[473,21,366,17,"isMotionInverted"],[473,37,366,33],[473,40,366,36],[474,0,366,38,"left"],[474,14,366,38,"left"],[474,18,366,42],[474,20,366,44,"hitSlop"],[475,0,366,36],[475,13,366,33],[475,16,366,56],[476,0,366,58,"right"],[476,14,366,58,"right"],[476,19,366,63],[476,21,366,65,"hitSlop"],[477,0,366,56],[478,0,363,13],[478,11,363,6],[479,0,368,5],[480,0,369,3],[483,42,371,22],[484,0,372,4],[484,12,372,10,"gesturesEnabled"],[484,27,372,25],[484,30,372,28],[484,35,372,33,"props"],[484,40,372,28],[484,41,372,39,"transitionProps"],[484,56,372,28],[484,57,372,55,"scene"],[484,62,372,28],[484,63,372,61,"descriptor"],[484,73,372,28],[484,74,372,72,"options"],[484,81,372,28],[484,82,373,7,"gesturesEnabled"],[484,97,372,4],[485,0,374,4],[485,15,374,11],[485,22,374,18,"gesturesEnabled"],[485,37,374,11],[485,42,374,38],[485,51,374,11],[485,54,375,8,"gesturesEnabled"],[485,69,374,11],[485,72,376,8,"Platform"],[485,94,376,17,"OS"],[485,96,376,8],[485,101,376,24],[485,106,374,4],[486,0,377,3],[489,42,379,22],[490,0,380,4],[490,15,380,11],[490,20,380,16,"_isModal"],[490,28,380,11],[490,30,380,4],[491,0,381,3],[494,33,383,13],[495,0,384,4],[495,15,384,11],[495,20,384,16,"props"],[495,25,384,11],[495,26,384,22,"mode"],[495,30,384,11],[495,35,384,31],[495,42,384,4],[496,0,385,3],[499,42,388,22],[500,0,388,22],[500,12,390,25,"scene"],[500,17,388,22],[500,20,391,8],[500,25,391,13,"props"],[500,30,388,22],[500,31,390,6,"transitionProps"],[500,46,388,22],[500,47,390,25,"scene"],[500,52,388,22],[501,0,388,22],[501,12,392,12,"options"],[501,19,388,22],[501,22,392,24,"scene"],[501,27,392,29],[501,28,392,30,"descriptor"],[501,38,388,22],[501,39,392,12,"options"],[501,46,388,22],[502,0,388,22],[502,12,393,12,"gestureDirection"],[502,28,388,22],[502,31,393,33,"options"],[502,38,388,22],[502,39,393,12,"gestureDirection"],[502,55,388,22],[504,0,395,4],[504,12,395,8],[504,17,395,13,"_isModal"],[504,25,395,8],[504,27,395,4],[504,29,395,25],[505,0,396,6],[505,17,396,13,"gestureDirection"],[505,33,396,29],[505,38,396,34],[505,48,396,6],[506,0,397,5],[506,9,395,4],[506,15,397,11],[507,0,398,6],[507,17,398,13],[507,24,398,20,"gestureDirection"],[507,40,398,13],[507,45,398,41],[507,53,398,13],[507,56,399,10,"gestureDirection"],[507,72,399,26],[507,77,399,31],[507,87,398,13],[507,90,400,10,"I18nManager"],[507,115,400,22,"isRTL"],[507,120,398,6],[508,0,401,5],[509,0,402,3],[512,60,404,51],[513,0,404,51],[513,12,404,35,"translationX"],[513,24,404,51],[513,33,404,35,"translationX"],[513,45,404,51],[514,0,404,51],[514,37,407,8],[514,42,407,13,"props"],[514,47,404,51],[514,48,406,6,"transitionProps"],[514,63,404,51],[515,0,404,51],[515,12,406,25,"navigation"],[515,22,404,51],[515,48,406,25,"navigation"],[515,58,404,51],[516,0,404,51],[516,12,406,37,"layout"],[516,18,404,51],[516,44,406,37,"layout"],[516,50,404,51],[517,0,404,51],[517,12,409,12,"index"],[517,17,404,51],[517,20,409,22,"navigation"],[517,30,409,32],[517,31,409,33,"state"],[517,36,404,51],[517,37,409,12,"index"],[517,42,404,51],[519,0,412,4],[519,12,412,10,"distance"],[519,20,412,18],[519,23,412,21,"layout"],[519,29,412,27],[519,30,412,28,"width"],[519,35,412,21],[519,36,412,34,"__getValue"],[519,46,412,21],[519,48,412,4],[521,0,414,4],[521,12,414,10,"x"],[521,13,414,11],[521,16,414,14],[521,21,414,19,"_isMotionInverted"],[521,38,414,14],[521,43,414,41],[521,44,414,42],[521,45,414,41],[521,48,414,46,"translationX"],[521,60,414,14],[521,63,414,61,"translationX"],[521,75,414,4],[522,0,416,4],[522,12,416,10,"value"],[522,17,416,15],[522,20,416,18,"index"],[522,25,416,23],[522,28,416,26,"x"],[522,29,416,27],[522,32,416,30,"distance"],[522,40,416,4],[523,0,417,4],[523,15,417,11],[523,35,417,17,"index"],[523,40,417,22],[523,43,417,25],[523,44,417,11],[523,46,417,28,"value"],[523,51,417,11],[523,53,417,35,"index"],[523,58,417,11],[523,59,417,4],[524,0,418,3],[527,58,420,49],[528,0,420,49],[528,12,420,33,"translationY"],[528,24,420,49],[528,33,420,33,"translationY"],[528,45,420,49],[529,0,420,49],[529,37,423,8],[529,42,423,13,"props"],[529,47,420,49],[529,48,422,6,"transitionProps"],[529,63,420,49],[530,0,420,49],[530,12,422,25,"navigation"],[530,22,420,49],[530,48,422,25,"navigation"],[530,58,420,49],[531,0,420,49],[531,12,422,37,"layout"],[531,18,420,49],[531,44,422,37,"layout"],[531,50,420,49],[532,0,420,49],[532,12,425,12,"index"],[532,17,420,49],[532,20,425,22,"navigation"],[532,30,425,32],[532,31,425,33,"state"],[532,36,420,49],[532,37,425,12,"index"],[532,42,420,49],[534,0,428,4],[534,12,428,10,"distance"],[534,20,428,18],[534,23,428,21,"layout"],[534,29,428,27],[534,30,428,28,"height"],[534,36,428,21],[534,37,428,35,"__getValue"],[534,47,428,21],[534,49,428,4],[536,0,430,4],[536,12,430,10,"y"],[536,13,430,11],[536,16,430,14],[536,21,430,19,"_isMotionInverted"],[536,38,430,14],[536,43,430,41],[536,44,430,42],[536,45,430,41],[536,48,430,46,"translationY"],[536,60,430,14],[536,63,430,61,"translationY"],[536,75,430,4],[537,0,431,4],[537,12,431,10,"value"],[537,17,431,15],[537,20,431,18,"index"],[537,25,431,23],[537,28,431,26,"y"],[537,29,431,27],[537,32,431,30,"distance"],[537,40,431,4],[538,0,432,4],[538,15,432,11],[538,35,432,17,"index"],[538,40,432,22],[538,43,432,25],[538,44,432,11],[538,46,432,28,"value"],[538,51,432,11],[538,53,432,35,"index"],[538,58,432,11],[538,59,432,4],[539,0,433,3],[542,44,470,24],[543,0,471,4],[543,13,471,9,"positionSwitch"],[543,27,471,4],[543,28,471,24,"setValue"],[543,36,471,4],[543,37,471,33],[543,38,471,4],[544,0,472,3],[547,40,474,20],[548,0,475,4],[548,12,475,8],[548,13,475,9],[548,18,475,14,"_isGestureEnabled"],[548,35,475,9],[548,37,475,4],[548,39,475,35],[549,0,476,6],[549,14,476,10],[549,19,476,15,"positionSwitch"],[549,33,476,10],[549,34,476,30,"__getValue"],[549,44,476,10],[549,51,476,47],[549,52,476,6],[549,54,476,50],[550,0,477,8],[550,17,477,13,"positionSwitch"],[550,31,477,8],[550,32,477,28,"setValue"],[550,40,477,8],[550,41,477,37],[550,42,477,8],[551,0,478,7],[553,0,479,6],[553,15,479,11,"gesturePosition"],[553,30,479,6],[553,33,479,29,"undefined"],[553,42,479,6],[554,0,480,6],[555,0,481,5],[557,0,484,4],[557,12,485,6],[557,17,485,11,"props"],[557,22,485,6],[557,23,485,17,"transitionProps"],[557,38,485,6],[557,39,485,33,"layout"],[557,45,485,6],[557,46,485,40,"width"],[557,51,485,6],[557,52,485,46,"__getValue"],[557,62,485,6],[557,69,485,63],[557,70,485,6],[557,74,486,6],[557,79,486,11,"props"],[557,84,486,6],[557,85,486,17,"transitionProps"],[557,100,486,6],[557,101,486,33,"layout"],[557,107,486,6],[557,108,486,40,"height"],[557,114,486,6],[557,115,486,47,"__getValue"],[557,125,486,6],[557,132,486,64],[557,133,484,4],[557,135,487,6],[558,0,488,6],[559,0,489,5],[561,0,491,4],[561,12,491,8],[561,17,491,13,"_isMotionVertical"],[561,34,491,8],[561,36,491,4],[561,38,491,34],[562,0,492,6],[562,15,492,11,"_prepareGestureVertical"],[562,38,492,6],[563,0,493,5],[563,9,491,4],[563,15,493,11],[564,0,494,6],[564,15,494,11,"_prepareGestureHorizontal"],[564,40,494,6],[565,0,495,5],[566,0,496,3],[569,50,498,30],[570,0,498,30],[570,12,499,12,"index"],[570,17,498,30],[570,20,499,22],[570,25,499,27,"props"],[570,30,499,22],[570,31,499,33,"transitionProps"],[570,46,499,22],[570,47,499,49,"navigation"],[570,57,499,22],[570,58,499,60,"state"],[570,63,498,30],[570,64,499,12,"index"],[570,69,498,30],[572,0,501,4],[572,12,501,8],[572,17,501,13,"_isMotionInverted"],[572,34,501,8],[572,36,501,4],[572,38,501,34],[573,0,502,6],[573,15,502,11,"gesturePosition"],[573,30,502,6],[573,33,502,29,"Animated"],[573,55,502,38,"add"],[573,58,502,29],[573,59,503,8,"index"],[573,64,502,29],[573,66,504,8,"Animated"],[573,88,504,17,"divide"],[573,94,504,8],[573,95,504,24],[573,100,504,29,"gestureX"],[573,108,504,8],[573,110,504,39],[573,115,504,44,"props"],[573,120,504,39],[573,121,504,50,"transitionProps"],[573,136,504,39],[573,137,504,66,"layout"],[573,143,504,39],[573,144,504,73,"width"],[573,149,504,8],[573,150,502,29],[573,152,505,8,"interpolate"],[573,163,502,29],[573,164,505,20],[574,0,506,8,"inputRange"],[574,12,506,8,"inputRange"],[574,22,506,18],[574,24,506,20],[574,25,506,21,"index"],[574,30,506,26],[574,33,506,29],[574,34,506,20],[574,36,506,32,"index"],[574,41,506,20],[574,42,505,20],[575,0,507,8,"outputRange"],[575,12,507,8,"outputRange"],[575,23,507,19],[575,25,507,21],[575,26,507,22,"index"],[575,31,507,27],[575,34,507,30],[575,35,507,21],[575,37,507,33,"index"],[575,42,507,21],[575,43,505,20],[576,0,508,8,"extrapolate"],[576,12,508,8,"extrapolate"],[576,23,508,19],[576,25,508,21],[577,0,505,20],[577,11,502,29],[577,12,502,6],[578,0,510,5],[578,9,501,4],[578,15,510,11],[579,0,511,6],[579,15,511,11,"gesturePosition"],[579,30,511,6],[579,33,511,29,"Animated"],[579,55,511,38,"add"],[579,58,511,29],[579,59,512,8,"index"],[579,64,511,29],[579,66,513,8,"Animated"],[579,88,513,17,"multiply"],[579,96,513,8],[579,97,514,10],[579,98,514,11],[579,99,513,8],[579,101,515,10,"Animated"],[579,123,515,19,"divide"],[579,129,515,10],[579,130,516,12],[579,135,516,17,"gestureX"],[579,143,515,10],[579,145,517,12],[579,150,517,17,"props"],[579,155,517,12],[579,156,517,23,"transitionProps"],[579,171,517,12],[579,172,517,39,"layout"],[579,178,517,12],[579,179,517,46,"width"],[579,184,515,10],[579,185,513,8],[579,186,511,29],[579,188,520,8,"interpolate"],[579,199,511,29],[579,200,520,20],[580,0,521,8,"inputRange"],[580,12,521,8,"inputRange"],[580,22,521,18],[580,24,521,20],[580,25,521,21,"index"],[580,30,521,26],[580,33,521,29],[580,34,521,20],[580,36,521,32,"index"],[580,41,521,20],[580,42,520,20],[581,0,522,8,"outputRange"],[581,12,522,8,"outputRange"],[581,23,522,19],[581,25,522,21],[581,26,522,22,"index"],[581,31,522,27],[581,34,522,30],[581,35,522,21],[581,37,522,33,"index"],[581,42,522,21],[581,43,520,20],[582,0,523,8,"extrapolate"],[582,12,523,8,"extrapolate"],[582,23,523,19],[582,25,523,21],[583,0,520,20],[583,11,511,29],[583,12,511,6],[584,0,525,5],[585,0,526,3],[588,48,528,28],[589,0,528,28],[589,12,529,12,"index"],[589,17,528,28],[589,20,529,22],[589,25,529,27,"props"],[589,30,529,22],[589,31,529,33,"transitionProps"],[589,46,529,22],[589,47,529,49,"navigation"],[589,57,529,22],[589,58,529,60,"state"],[589,63,528,28],[589,64,529,12,"index"],[589,69,528,28],[591,0,531,4],[591,12,531,8],[591,17,531,13,"_isMotionInverted"],[591,34,531,8],[591,36,531,4],[591,38,531,34],[592,0,532,6],[592,15,532,11,"gesturePosition"],[592,30,532,6],[592,33,532,29,"Animated"],[592,55,532,38,"add"],[592,58,532,29],[592,59,533,8,"index"],[592,64,532,29],[592,66,534,8,"Animated"],[592,88,534,17,"divide"],[592,94,534,8],[592,95,534,24],[592,100,534,29,"gestureY"],[592,108,534,8],[592,110,534,39],[592,115,534,44,"props"],[592,120,534,39],[592,121,534,50,"transitionProps"],[592,136,534,39],[592,137,534,66,"layout"],[592,143,534,39],[592,144,534,73,"height"],[592,150,534,8],[592,151,532,29],[592,153,535,8,"interpolate"],[592,164,532,29],[592,165,535,20],[593,0,536,8,"inputRange"],[593,12,536,8,"inputRange"],[593,22,536,18],[593,24,536,20],[593,25,536,21,"index"],[593,30,536,26],[593,33,536,29],[593,34,536,20],[593,36,536,32,"index"],[593,41,536,20],[593,42,535,20],[594,0,537,8,"outputRange"],[594,12,537,8,"outputRange"],[594,23,537,19],[594,25,537,21],[594,26,537,22,"index"],[594,31,537,27],[594,34,537,30],[594,35,537,21],[594,37,537,33,"index"],[594,42,537,21],[594,43,535,20],[595,0,538,8,"extrapolate"],[595,12,538,8,"extrapolate"],[595,23,538,19],[595,25,538,21],[596,0,535,20],[596,11,532,29],[596,12,532,6],[597,0,540,5],[597,9,531,4],[597,15,540,11],[598,0,541,6],[598,15,541,11,"gesturePosition"],[598,30,541,6],[598,33,541,29,"Animated"],[598,55,541,38,"add"],[598,58,541,29],[598,59,542,8,"index"],[598,64,541,29],[598,66,543,8,"Animated"],[598,88,543,17,"multiply"],[598,96,543,8],[598,97,544,10],[598,98,544,11],[598,99,543,8],[598,101,545,10,"Animated"],[598,123,545,19,"divide"],[598,129,545,10],[598,130,546,12],[598,135,546,17,"gestureY"],[598,143,545,10],[598,145,547,12],[598,150,547,17,"props"],[598,155,547,12],[598,156,547,23,"transitionProps"],[598,171,547,12],[598,172,547,39,"layout"],[598,178,547,12],[598,179,547,46,"height"],[598,185,545,10],[598,186,543,8],[598,187,541,29],[598,189,550,8,"interpolate"],[598,200,541,29],[598,201,550,20],[599,0,551,8,"inputRange"],[599,12,551,8,"inputRange"],[599,22,551,18],[599,24,551,20],[599,25,551,21,"index"],[599,30,551,26],[599,33,551,29],[599,34,551,20],[599,36,551,32,"index"],[599,41,551,20],[599,42,550,20],[600,0,552,8,"outputRange"],[600,12,552,8,"outputRange"],[600,23,552,19],[600,25,552,21],[600,26,552,22,"index"],[600,31,552,27],[600,34,552,30],[600,35,552,21],[600,37,552,33,"index"],[600,42,552,21],[600,43,550,20],[601,0,553,8,"extrapolate"],[601,12,553,8,"extrapolate"],[601,23,553,19],[601,25,553,21],[602,0,550,20],[602,11,541,29],[602,12,541,6],[603,0,555,5],[604,0,556,3],[607,47,558,27,"nativeEvent"],[607,58],[607,60,558,40],[608,0,558,40],[608,37,561,8],[608,42,561,13,"props"],[608,47,558,40],[608,48,560,6,"transitionProps"],[608,63,558,40],[609,0,558,40],[609,12,560,25,"navigation"],[609,22,558,40],[609,48,560,25,"navigation"],[609,58,558,40],[610,0,558,40],[610,12,560,37,"position"],[610,20,558,40],[610,46,560,37,"position"],[610,54,558,40],[611,0,558,40],[611,12,560,47,"layout"],[611,18,558,40],[611,44,560,47,"layout"],[611,50,558,40],[612,0,558,40],[612,12,562,12,"index"],[612,17,558,40],[612,20,562,22,"navigation"],[612,30,562,32],[612,31,562,33,"state"],[612,36,558,40],[612,37,562,12,"index"],[612,42,558,40],[613,0,563,4],[613,12,563,10,"immediateIndex"],[613,26,563,24],[613,29,564,6],[613,34,564,11,"_immediateIndex"],[613,49,564,6],[613,53,564,30],[613,57,564,6],[613,60,564,37,"index"],[613,65,564,6],[613,68,564,45],[613,73,564,50,"_immediateIndex"],[613,88,563,4],[615,0,567,4],[615,12,567,10,"distance"],[615,20,567,18],[615,23,567,21,"layout"],[615,29,567,27],[615,30,567,28,"width"],[615,35,567,21],[615,36,567,34,"__getValue"],[615,46,567,21],[615,48,567,4],[617,0,568,4],[617,12,568,10,"movementDirection"],[617,29,568,27],[617,32,568,30],[617,37,568,35,"_isMotionInverted"],[617,54,568,30],[617,59,568,57],[617,60,568,58],[617,61,568,30],[617,64,568,62],[617,65,568,4],[618,0,569,4],[618,12,569,10,"movedDistance"],[618,25,569,23],[618,28,569,26,"movementDirection"],[618,45,569,43],[618,48,569,46,"nativeEvent"],[618,59,569,57],[618,60,569,58,"translationX"],[618,72,569,4],[619,0,570,4],[619,12,570,10,"gestureVelocity"],[619,27,570,25],[619,30,570,28,"movementDirection"],[619,47,570,45],[619,50,570,48,"nativeEvent"],[619,61,570,59],[619,62,570,60,"velocityX"],[619,71,570,4],[620,0,571,4],[620,12,571,10,"defaultVelocity"],[620,27,571,25],[620,30,571,28,"distance"],[620,38,571,36],[620,41,571,39,"ANIMATION_DURATION"],[620,59,571,4],[621,0,572,4],[621,12,572,10,"velocity"],[621,20,572,18],[621,23,572,21,"Math"],[621,27,572,25],[621,28,572,26,"max"],[621,31,572,21],[621,32,572,30,"Math"],[621,36,572,34],[621,37,572,35,"abs"],[621,40,572,30],[621,41,572,39,"gestureVelocity"],[621,56,572,30],[621,57,572,21],[621,59,572,57,"defaultVelocity"],[621,74,572,21],[621,75,572,4],[622,0,573,4],[622,12,573,10,"resetDuration"],[622,25,573,23],[622,28,573,26],[622,33,573,31,"_isMotionInverted"],[622,50,573,26],[622,55,574,8],[622,56,574,9,"distance"],[622,64,574,17],[622,67,574,20,"movedDistance"],[622,80,574,8],[622,84,574,37,"velocity"],[622,92,573,26],[622,95,575,8,"movedDistance"],[622,108,575,21],[622,111,575,24,"velocity"],[622,119,573,4],[623,0,576,4],[623,12,576,10,"goBackDuration"],[623,26,576,24],[623,29,576,27],[623,34,576,32,"_isMotionInverted"],[623,51,576,27],[623,56,577,8,"movedDistance"],[623,69,577,21],[623,72,577,24,"velocity"],[623,80,576,27],[623,83,578,8],[623,84,578,9,"distance"],[623,92,578,17],[623,95,578,20,"movedDistance"],[623,108,578,8],[623,112,578,37,"velocity"],[623,120,576,4],[625,0,582,4],[625,12,582,10,"value"],[625,17,582,15],[625,20,582,18],[625,25,582,23,"_computeHorizontalGestureValue"],[625,55,582,18],[625,56,582,54,"nativeEvent"],[625,67,582,18],[625,68,582,4],[627,0,583,4,"position"],[627,8,583,4,"position"],[627,16,583,12],[627,17,583,13,"setValue"],[627,25,583,4],[627,26,583,22,"value"],[627,31,583,4],[628,0,584,4],[628,13,584,9,"positionSwitch"],[628,27,584,4],[628,28,584,24,"setValue"],[628,36,584,4],[628,37,584,33],[628,38,584,4],[630,0,588,4],[630,12,588,8,"gestureVelocity"],[630,27,588,23],[630,30,588,26],[630,31,588,27],[630,33,588,4],[630,35,588,31],[631,0,589,6],[631,15,589,11,"props"],[631,20,589,6],[631,21,589,17,"onGestureCanceled"],[631,38,589,6],[631,42,589,38],[631,47,589,43,"props"],[631,52,589,38],[631,53,589,49,"onGestureCanceled"],[631,70,589,38],[631,72,589,6],[633,0,590,6],[633,15,590,11,"_reset"],[633,21,590,6],[633,22,590,18,"immediateIndex"],[633,36,590,6],[633,38,590,34,"resetDuration"],[633,51,590,6],[635,0,591,6],[636,0,592,5],[638,0,593,4],[638,12,593,8,"gestureVelocity"],[638,27,593,23],[638,30,593,26],[638,32,593,4],[638,34,593,30],[639,0,594,6],[639,15,594,11,"props"],[639,20,594,6],[639,21,594,17,"onGestureFinish"],[639,36,594,6],[639,40,594,36],[639,45,594,41,"props"],[639,50,594,36],[639,51,594,47,"onGestureFinish"],[639,66,594,36],[639,68,594,6],[641,0,595,6],[641,15,595,11,"_goBack"],[641,22,595,6],[641,23,595,19,"immediateIndex"],[641,37,595,6],[641,39,595,35,"goBackDuration"],[641,53,595,6],[643,0,596,6],[644,0,597,5],[646,0,601,4],[646,12,601,8,"value"],[646,17,601,13],[646,21,601,17,"index"],[646,26,601,22],[646,29,601,25,"POSITION_THRESHOLD"],[646,47,601,4],[646,49,601,45],[647,0,602,6],[647,15,602,11,"props"],[647,20,602,6],[647,21,602,17,"onGestureFinish"],[647,36,602,6],[647,40,602,36],[647,45,602,41,"props"],[647,50,602,36],[647,51,602,47,"onGestureFinish"],[647,66,602,36],[647,68,602,6],[649,0,603,6],[649,15,603,11,"_goBack"],[649,22,603,6],[649,23,603,19,"immediateIndex"],[649,37,603,6],[649,39,603,35,"goBackDuration"],[649,53,603,6],[650,0,604,5],[650,9,601,4],[650,15,604,11],[651,0,605,6],[651,15,605,11,"props"],[651,20,605,6],[651,21,605,17,"onGestureCanceled"],[651,38,605,6],[651,42,605,38],[651,47,605,43,"props"],[651,52,605,38],[651,53,605,49,"onGestureCanceled"],[651,70,605,38],[651,72,605,6],[653,0,606,6],[653,15,606,11,"_reset"],[653,21,606,6],[653,22,606,18,"immediateIndex"],[653,36,606,6],[653,38,606,34,"resetDuration"],[653,51,606,6],[654,0,607,5],[655,0,608,3],[658,45,610,25,"nativeEvent"],[658,56],[658,58,610,38],[659,0,610,38],[659,37,613,8],[659,42,613,13,"props"],[659,47,610,38],[659,48,612,6,"transitionProps"],[659,63,610,38],[660,0,610,38],[660,12,612,25,"navigation"],[660,22,610,38],[660,48,612,25,"navigation"],[660,58,610,38],[661,0,610,38],[661,12,612,37,"position"],[661,20,610,38],[661,46,612,37,"position"],[661,54,610,38],[662,0,610,38],[662,12,612,47,"layout"],[662,18,610,38],[662,44,612,47,"layout"],[662,50,610,38],[663,0,610,38],[663,12,614,12,"index"],[663,17,610,38],[663,20,614,22,"navigation"],[663,30,614,32],[663,31,614,33,"state"],[663,36,610,38],[663,37,614,12,"index"],[663,42,610,38],[664,0,615,4],[664,12,615,10,"immediateIndex"],[664,26,615,24],[664,29,616,6],[664,34,616,11,"_immediateIndex"],[664,49,616,6],[664,53,616,30],[664,57,616,6],[664,60,616,37,"index"],[664,65,616,6],[664,68,616,45],[664,73,616,50,"_immediateIndex"],[664,88,615,4],[666,0,619,4],[666,12,619,10,"distance"],[666,20,619,18],[666,23,619,21,"layout"],[666,29,619,27],[666,30,619,28,"height"],[666,36,619,21],[666,37,619,35,"__getValue"],[666,47,619,21],[666,49,619,4],[668,0,620,4],[668,12,620,10,"isMotionInverted"],[668,28,620,26],[668,31,620,29],[668,36,620,34,"_isMotionInverted"],[668,53,620,29],[668,55,620,4],[670,0,621,4],[670,12,621,10,"movementDirection"],[670,29,621,27],[670,32,621,30,"isMotionInverted"],[670,48,621,46],[670,51,621,49],[670,52,621,50],[670,53,621,46],[670,56,621,54],[670,57,621,4],[671,0,622,4],[671,12,622,10,"movedDistance"],[671,25,622,23],[671,28,622,26,"movementDirection"],[671,45,622,43],[671,48,622,46,"nativeEvent"],[671,59,622,57],[671,60,622,58,"translationY"],[671,72,622,4],[672,0,623,4],[672,12,623,10,"gestureVelocity"],[672,27,623,25],[672,30,623,28,"movementDirection"],[672,47,623,45],[672,50,623,48,"nativeEvent"],[672,61,623,59],[672,62,623,60,"velocityY"],[672,71,623,4],[673,0,624,4],[673,12,624,10,"defaultVelocity"],[673,27,624,25],[673,30,624,28,"distance"],[673,38,624,36],[673,41,624,39,"ANIMATION_DURATION"],[673,59,624,4],[674,0,625,4],[674,12,625,10,"velocity"],[674,20,625,18],[674,23,625,21,"Math"],[674,27,625,25],[674,28,625,26,"max"],[674,31,625,21],[674,32,625,30,"Math"],[674,36,625,34],[674,37,625,35,"abs"],[674,40,625,30],[674,41,625,39,"gestureVelocity"],[674,56,625,30],[674,57,625,21],[674,59,625,57,"defaultVelocity"],[674,74,625,21],[674,75,625,4],[675,0,626,4],[675,12,626,10,"resetDuration"],[675,25,626,23],[675,28,626,26,"isMotionInverted"],[675,44,626,42],[675,47,627,8],[675,48,627,9,"distance"],[675,56,627,17],[675,59,627,20,"movedDistance"],[675,72,627,8],[675,76,627,37,"velocity"],[675,84,626,42],[675,87,628,8,"movedDistance"],[675,100,628,21],[675,103,628,24,"velocity"],[675,111,626,4],[676,0,629,4],[676,12,629,10,"goBackDuration"],[676,26,629,24],[676,29,629,27,"isMotionInverted"],[676,45,629,43],[676,48,630,8,"movedDistance"],[676,61,630,21],[676,64,630,24,"velocity"],[676,72,629,43],[676,75,631,8],[676,76,631,9,"distance"],[676,84,631,17],[676,87,631,20,"movedDistance"],[676,100,631,8],[676,104,631,37,"velocity"],[676,112,629,4],[678,0,633,4],[678,12,633,10,"value"],[678,17,633,15],[678,20,633,18],[678,25,633,23,"_computeVerticalGestureValue"],[678,53,633,18],[678,54,633,52,"nativeEvent"],[678,65,633,18],[678,66,633,4],[680,0,634,4,"position"],[680,8,634,4,"position"],[680,16,634,12],[680,17,634,13,"setValue"],[680,25,634,4],[680,26,634,22,"value"],[680,31,634,4],[681,0,635,4],[681,13,635,9,"positionSwitch"],[681,27,635,4],[681,28,635,24,"setValue"],[681,36,635,4],[681,37,635,33],[681,38,635,4],[683,0,639,4],[683,12,639,8,"gestureVelocity"],[683,27,639,23],[683,30,639,26],[683,31,639,27],[683,33,639,4],[683,35,639,31],[684,0,640,6],[684,15,640,11,"props"],[684,20,640,6],[684,21,640,17,"onGestureCanceled"],[684,38,640,6],[684,42,640,38],[684,47,640,43,"props"],[684,52,640,38],[684,53,640,49,"onGestureCanceled"],[684,70,640,38],[684,72,640,6],[686,0,641,6],[686,15,641,11,"_reset"],[686,21,641,6],[686,22,641,18,"immediateIndex"],[686,36,641,6],[686,38,641,34,"resetDuration"],[686,51,641,6],[688,0,642,6],[689,0,643,5],[691,0,644,4],[691,12,644,8,"gestureVelocity"],[691,27,644,23],[691,30,644,26],[691,32,644,4],[691,34,644,30],[692,0,645,6],[692,15,645,11,"props"],[692,20,645,6],[692,21,645,17,"onGestureFinish"],[692,36,645,6],[692,40,645,36],[692,45,645,41,"props"],[692,50,645,36],[692,51,645,47,"onGestureFinish"],[692,66,645,36],[692,68,645,6],[694,0,646,6],[694,15,646,11,"_goBack"],[694,22,646,6],[694,23,646,19,"immediateIndex"],[694,37,646,6],[694,39,646,35,"goBackDuration"],[694,53,646,6],[696,0,647,6],[697,0,648,5],[699,0,652,4],[699,12,652,8,"value"],[699,17,652,13],[699,21,652,17,"index"],[699,26,652,22],[699,29,652,25,"POSITION_THRESHOLD"],[699,47,652,4],[699,49,652,45],[700,0,653,6],[700,15,653,11,"props"],[700,20,653,6],[700,21,653,17,"onGestureFinish"],[700,36,653,6],[700,40,653,36],[700,45,653,41,"props"],[700,50,653,36],[700,51,653,47,"onGestureFinish"],[700,66,653,36],[700,68,653,6],[702,0,654,6],[702,15,654,11,"_goBack"],[702,22,654,6],[702,23,654,19,"immediateIndex"],[702,37,654,6],[702,39,654,35,"goBackDuration"],[702,53,654,6],[703,0,655,5],[703,9,652,4],[703,15,655,11],[704,0,656,6],[704,15,656,11,"props"],[704,20,656,6],[704,21,656,17,"onGestureCanceled"],[704,38,656,6],[704,42,656,38],[704,47,656,43,"props"],[704,52,656,38],[704,53,656,49,"onGestureCanceled"],[704,70,656,38],[704,72,656,6],[706,0,657,6],[706,15,657,11,"_reset"],[706,21,657,6],[706,22,657,18,"immediateIndex"],[706,36,657,6],[706,38,657,34,"resetDuration"],[706,51,657,6],[707,0,658,5],[708,0,659,3],[711,39,661,19],[712,0,662,4],[712,12,662,8],[712,17,662,13,"props"],[712,22,662,8],[712,23,662,19,"headerMode"],[712,33,662,4],[712,35,662,31],[713,0,663,6],[713,17,663,13],[713,22,663,18,"props"],[713,27,663,13],[713,28,663,24,"headerMode"],[713,38,663,6],[714,0,664,5],[716,0,665,4],[716,12,665,8,"Platform"],[716,34,665,17,"OS"],[716,36,665,8],[716,41,665,24],[716,50,665,8],[716,54,665,37],[716,59,665,42,"props"],[716,64,665,37],[716,65,665,48,"mode"],[716,69,665,37],[716,74,665,57],[716,81,665,4],[716,83,665,66],[717,0,666,6],[717,17,666,13],[717,25,666,6],[718,0,667,5],[720,0,668,4],[720,15,668,11],[720,22,668,4],[721,0,669,3],[724,61,671,41],[725,0,671,41],[725,12,672,12,"headerBackgroundTransitionPreset"],[725,44,671,41],[725,47,672,49],[725,52,672,54,"props"],[725,57,671,41],[725,58,672,12,"headerBackgroundTransitionPreset"],[725,90,671,41],[727,0,673,4],[727,12,673,8,"headerBackgroundTransitionPreset"],[727,44,673,4],[727,46,673,42],[728,0,674,6],[728,14,675,8,"HEADER_BACKGROUND_TRANSITION_PRESET"],[728,49,675,43],[728,50,675,44,"includes"],[728,58,675,8],[728,59,676,10,"headerBackgroundTransitionPreset"],[728,91,675,8],[728,92,674,6],[728,94,678,8],[729,0,679,8],[729,16,679,12,"headerBackgroundTransitionPreset"],[729,48,679,44],[729,53,679,49],[729,59,679,8],[729,61,679,57],[730,0,680,10],[730,21,680,17,"HeaderStyleInterpolator"],[730,54,680,41,"forBackgroundWithFade"],[730,75,680,10],[731,0,681,9],[731,13,679,8],[731,19,681,15],[731,23,681,19,"headerBackgroundTransitionPreset"],[731,55,681,51],[731,60,681,56],[731,71,681,15],[731,73,681,69],[732,0,682,10],[732,21,682,17,"HeaderStyleInterpolator"],[732,54,682,41,"forBackgroundWithTranslation"],[732,82,682,10],[733,0,683,9],[733,13,681,15],[733,19,683,15],[733,23,683,19,"headerBackgroundTransitionPreset"],[733,55,683,51],[733,60,683,56],[733,68,683,15],[733,70,683,66],[734,0,684,10],[734,21,684,17,"HeaderStyleInterpolator"],[734,54,684,41,"forBackgroundWithInactiveHidden"],[734,85,684,10],[735,0,685,9],[736,0,686,7],[736,11,674,6],[736,17,686,13],[736,21,686,17,"__DEV__"],[736,28,686,13],[736,30,686,26],[737,0,687,8,"console"],[737,12,687,8,"console"],[737,19,687,15],[737,20,687,16,"error"],[737,25,687,8],[737,116,688,98,"HEADER_BACKGROUND_TRANSITION_PRESET"],[737,151,688,133],[737,152,688,134,"join"],[737,156,688,98],[737,157,689,12],[737,161,688,98],[737,162,687,8],[737,184,690,28,"JSON"],[737,188,690,32],[737,189,690,33,"stringify"],[737,198,690,28],[737,199,690,43,"headerBackgroundTransitionPreset"],[737,231,690,28],[737,232,687,8],[738,0,692,7],[739,0,693,5],[741,0,695,4],[741,15,695,11],[741,19,695,4],[742,0,696,3],[745,47,698,27],[746,0,698,27],[746,12,699,12,"headerLayoutPreset"],[746,30,698,27],[746,33,699,35],[746,38,699,40,"props"],[746,43,698,27],[746,44,699,12,"headerLayoutPreset"],[746,62,698,27],[748,0,700,4],[748,12,700,8,"headerLayoutPreset"],[748,30,700,4],[748,32,700,28],[749,0,701,6],[749,14,701,10,"__DEV__"],[749,21,701,6],[749,23,701,19],[750,0,702,8],[750,16,703,10],[750,21,703,15,"_getHeaderTransitionPreset"],[750,47,703,10],[750,54,703,48],[750,61,703,10],[750,65,704,10,"headerLayoutPreset"],[750,83,704,28],[750,88,704,33],[750,94,703,10],[750,98,705,10,"Platform"],[750,120,705,19,"OS"],[750,122,705,10],[750,127,705,26],[750,132,702,8],[750,134,706,10],[751,0,707,10,"console"],[751,14,707,10,"console"],[751,21,707,17],[751,22,707,18,"warn"],[751,26,707,10],[752,0,710,9],[753,0,711,7],[755,0,712,6],[755,14,712,10,"HEADER_LAYOUT_PRESET"],[755,34,712,30],[755,35,712,31,"includes"],[755,43,712,10],[755,44,712,40,"headerLayoutPreset"],[755,62,712,10],[755,63,712,6],[755,65,712,61],[756,0,713,8],[756,19,713,15,"headerLayoutPreset"],[756,37,713,8],[757,0,714,7],[759,0,716,6],[759,14,716,10,"__DEV__"],[759,21,716,6],[759,23,716,19],[760,0,717,8,"console"],[760,12,717,8,"console"],[760,19,717,15],[760,20,717,16,"error"],[760,25,717,8],[760,102,718,84,"HEADER_LAYOUT_PRESET"],[760,122,718,104],[760,123,718,105,"join"],[760,127,718,84],[760,128,719,12],[760,132,718,84],[760,133,717,8],[760,155,720,28,"JSON"],[760,159,720,32],[760,160,720,33,"stringify"],[760,169,720,28],[760,170,720,43,"headerLayoutPreset"],[760,188,720,28],[760,189,717,8],[761,0,722,7],[762,0,723,5],[764,0,725,4],[764,12,725,8,"Platform"],[764,34,725,17,"OS"],[764,36,725,8],[764,41,725,24],[764,50,725,4],[764,52,725,35],[765,0,726,6],[765,17,726,13],[765,23,726,6],[766,0,727,5],[766,9,725,4],[766,15,727,11],[767,0,728,6],[767,17,728,13],[767,25,728,6],[768,0,729,5],[769,0,730,3],[772,51,732,31],[773,0,735,4],[773,12,735,8,"Platform"],[773,34,735,17,"OS"],[773,36,735,8],[773,41,735,24],[773,50,735,8],[773,54,735,37],[773,59,735,42,"_getHeaderMode"],[773,73,735,37],[773,80,735,63],[773,88,735,4],[773,90,735,73],[774,0,736,6],[774,17,736,13],[774,32,736,6],[775,0,737,5],[777,0,732,31],[777,12,739,12,"headerTransitionPreset"],[777,34,732,31],[777,37,739,39],[777,42,739,44,"props"],[777,47,732,31],[777,48,739,12,"headerTransitionPreset"],[777,70,732,31],[779,0,740,4],[779,12,740,8,"headerTransitionPreset"],[779,34,740,4],[779,36,740,32],[780,0,741,6],[780,14,741,10,"HEADER_TRANSITION_PRESET"],[780,38,741,34],[780,39,741,35,"includes"],[780,47,741,10],[780,48,741,44,"headerTransitionPreset"],[780,70,741,10],[780,71,741,6],[780,73,741,69],[781,0,742,8],[781,19,742,15,"headerTransitionPreset"],[781,41,742,8],[782,0,743,7],[784,0,745,6],[784,14,745,10,"__DEV__"],[784,21,745,6],[784,23,745,19],[785,0,746,8,"console"],[785,12,746,8,"console"],[785,19,746,15],[785,20,746,16,"error"],[785,25,746,8],[785,106,747,88,"HEADER_TRANSITION_PRESET"],[785,130,747,112],[785,131,747,113,"join"],[785,135,747,88],[785,136,748,12],[785,140,747,88],[785,141,746,8],[785,163,749,28,"JSON"],[785,167,749,32],[785,168,749,33,"stringify"],[785,177,749,28],[785,178,749,43,"headerTransitionPreset"],[785,200,749,28],[785,201,746,8],[786,0,751,7],[787,0,752,5],[789,0,754,4],[789,15,754,11],[789,30,754,4],[790,0,755,3],[793,51,757,31],[794,0,757,31],[794,12,758,12,"headerBackTitleVisible"],[794,34,757,31],[794,37,758,39],[794,42,758,44,"props"],[794,47,757,31],[794,48,758,12,"headerBackTitleVisible"],[794,70,757,31],[796,0,759,4],[796,12,759,10,"layoutPreset"],[796,24,759,22],[796,27,759,25],[796,32,759,30,"_getHeaderLayoutPreset"],[796,54,759,25],[796,56,759,4],[798,0,763,4],[798,12,763,10,"enabledByDefault"],[798,28,763,26],[798,31,763,29],[798,33,764,6,"layoutPreset"],[798,45,764,18],[798,50,764,23],[798,56,764,6],[798,60,764,33,"Platform"],[798,82,764,42,"OS"],[798,84,764,33],[798,89,764,49],[798,98,763,29],[798,99,763,4],[799,0,767,4],[799,15,767,11],[799,22,767,18,"headerBackTitleVisible"],[799,44,767,11],[799,49,767,45],[799,58,767,11],[799,61,768,8,"headerBackTitleVisible"],[799,83,767,11],[799,86,769,8,"enabledByDefault"],[799,102,767,4],[800,0,770,3],[803,40,772,20,"scene"],[803,45],[803,47,772,27],[804,0,772,27],[804,32,773,41,"scene"],[804,37,773,46],[804,38,773,47,"descriptor"],[804,48,772,27],[805,0,772,27],[805,12,773,12,"navigation"],[805,22,772,27],[805,43,773,12,"navigation"],[805,53,772,27],[806,0,772,27],[806,12,773,24,"getComponent"],[806,24,772,27],[806,45,773,24,"getComponent"],[806,57,772,27],[807,0,774,4],[807,12,774,10,"SceneComponent"],[807,26,774,24],[807,29,774,27,"getComponent"],[807,41,774,39],[807,43,774,4],[808,0,772,27],[808,12,776,12,"screenProps"],[808,23,772,27],[808,26,776,28],[808,31,776,33,"props"],[808,36,772,27],[808,37,776,12,"screenProps"],[808,48,772,27],[810,0,777,4],[810,12,777,10,"headerMode"],[810,22,777,20],[810,25,777,23],[810,30,777,28,"_getHeaderMode"],[810,44,777,23],[810,46,777,4],[812,0,778,4],[812,12,778,8,"headerMode"],[812,22,778,18],[812,27,778,23],[812,35,778,4],[812,37,778,33],[813,0,779,6],[813,17,780,8],[813,46,780,9],[813,63,780,8],[814,0,780,14],[814,12,780,14],[814,17,780,19],[814,19,780,21,"styles"],[814,25,780,27],[814,26,780,28,"container"],[814,35,780,8],[815,0,780,8],[816,0,780,8],[817,0,780,8],[818,0,780,8],[819,0,780,8],[819,13,781,10],[819,42,781,11],[819,59,781,10],[820,0,781,16],[820,12,781,16],[820,17,781,21],[820,19,781,23,"styles"],[820,25,781,29],[820,26,781,30,"scenes"],[820,32,781,10],[821,0,781,10],[822,0,781,10],[823,0,781,10],[824,0,781,10],[825,0,781,10],[825,13,782,12],[825,42,782,13],[825,57,782,12],[826,0,783,14],[826,12,783,14],[826,23,783,25],[826,25,783,27,"screenProps"],[826,36,782,12],[827,0,784,14],[827,12,784,14],[827,22,784,24],[827,24,784,26,"navigation"],[827,34,782,12],[828,0,785,14],[828,12,785,14],[828,21,785,23],[828,23,785,25,"SceneComponent"],[828,37,782,12],[829,0,782,12],[830,0,782,12],[831,0,782,12],[832,0,782,12],[833,0,782,12],[833,12,781,10],[833,13,780,8],[833,15,788,11],[833,20,788,16,"_renderHeader"],[833,33,788,11],[833,34,788,30,"scene"],[833,39,788,11],[833,41,788,37,"headerMode"],[833,51,788,11],[833,52,780,8],[833,53,779,6],[834,0,791,5],[836,0,792,4],[836,15,793,6],[836,44,793,7],[836,59,793,6],[837,0,794,8],[837,10,794,8],[837,21,794,19],[837,23,794,21,"screenProps"],[837,34,793,6],[838,0,795,8],[838,10,795,8],[838,20,795,18],[838,22,795,20,"navigation"],[838,32,793,6],[839,0,796,8],[839,10,796,8],[839,19,796,17],[839,21,796,19,"SceneComponent"],[839,35,793,6],[840,0,793,6],[841,0,793,6],[842,0,793,6],[843,0,793,6],[844,0,793,6],[844,10,792,4],[845,0,799,3],[848,49,801,29],[849,0,802,4],[849,13,802,9,"_transitionConfig"],[849,30,802,4],[849,33,802,29,"TransitionConfigs"],[849,69,802,47,"getTransitionConfig"],[849,88,802,29],[849,89,803,6],[849,94,803,11,"props"],[849,99,803,6],[849,100,803,17,"transitionConfig"],[849,116,802,29],[849,136,805,11],[849,141,805,16,"props"],[849,146,805,11],[849,147,805,22,"transitionProps"],[849,162,802,29],[850,0,806,8,"position"],[850,10,806,8,"position"],[850,18,806,16],[850,20,806,18],[850,25,806,23,"position"],[851,0,802,29],[851,12,808,6],[851,17,808,11,"props"],[851,22,808,6],[851,23,808,17,"lastTransitionProps"],[851,42,802,29],[851,44,809,6],[851,49,809,11,"_isModal"],[851,57,809,6],[851,59,802,29],[851,60,802,4],[852,0,811,3],[855,41,813,21],[856,0,814,4],[856,12,814,8],[856,17,814,13,"gesturePosition"],[856,32,814,4],[856,34,814,30],[857,0,815,6],[857,15,815,11,"position"],[857,23,815,6],[857,26,815,22,"Animated"],[857,48,815,31,"add"],[857,51,815,22],[857,52,816,8,"Animated"],[857,74,816,17,"multiply"],[857,82,816,8],[857,83,817,10],[857,88,817,15,"props"],[857,93,817,10],[857,94,817,21,"transitionProps"],[857,109,817,10],[857,110,817,37,"position"],[857,118,816,8],[857,120,818,10],[857,125,818,15,"positionSwitch"],[857,139,816,8],[857,140,815,22],[857,142,820,8,"Animated"],[857,164,820,17,"multiply"],[857,172,820,8],[857,173,820,26],[857,178,820,31,"gesturePosition"],[857,193,820,8],[857,195,820,48],[857,200,820,53,"gestureSwitch"],[857,213,820,8],[857,214,815,22],[857,215,815,6],[858,0,822,5],[858,9,814,4],[858,15,822,11],[859,0,823,6],[859,15,823,11,"position"],[859,23,823,6],[859,26,823,22],[859,31,823,27,"props"],[859,36,823,22],[859,37,823,33,"transitionProps"],[859,52,823,22],[859,53,823,49,"position"],[859,61,823,6],[860,0,824,5],[861,0,825,3],[865,4,86,30,"React"],[865,19,86,36,"Component"],[865,28],[869,0,874,0],[869,6,874,6,"styles"],[869,12,874,12],[869,15,874,15,"StyleSheet"],[869,39,874,26,"create"],[869,45,874,15],[869,46,874,33],[870,0,875,2,"container"],[870,4,875,2,"container"],[870,13,875,11],[870,15,875,13],[871,0,876,4,"flex"],[871,6,876,4,"flex"],[871,10,876,8],[871,12,876,10],[871,13,875,13],[872,0,881,4,"flexDirection"],[872,6,881,4,"flexDirection"],[872,19,881,17],[872,21,881,19],[872,37,875,13],[873,0,882,4,"overflow"],[873,6,882,4,"overflow"],[873,14,882,12],[873,16,882,14],[874,0,875,13],[874,5,874,33],[875,0,884,2,"scenes"],[875,4,884,2,"scenes"],[875,10,884,8],[875,12,884,10],[876,0,885,4,"flex"],[876,6,885,4,"flex"],[876,10,885,8],[876,12,885,10],[877,0,884,10],[877,5,874,33],[878,0,887,2,"floatingHeader"],[878,4,887,2,"floatingHeader"],[878,18,887,16],[878,20,887,18],[879,0,888,4,"position"],[879,6,888,4,"position"],[879,14,888,12],[879,16,888,14],[879,26,887,18],[880,0,889,4,"left"],[880,6,889,4,"left"],[880,10,889,8],[880,12,889,10],[880,13,887,18],[881,0,890,4,"top"],[881,6,890,4,"top"],[881,9,890,7],[881,11,890,9],[881,12,887,18],[882,0,891,4,"right"],[882,6,891,4,"right"],[882,11,891,9],[882,13,891,11],[883,0,887,18],[884,0,874,33],[884,3,874,15],[884,4,874,0],[886,18,895,15],[886,47,895,31,"StackViewLayout"],[886,62,895,15],[886,63]]},"type":"js/module"}]}