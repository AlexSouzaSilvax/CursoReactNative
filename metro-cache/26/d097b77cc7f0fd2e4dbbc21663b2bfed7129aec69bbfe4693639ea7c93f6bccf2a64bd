{"dependencies":[{"name":"./AnimatedNode","data":{"isAsync":false}},{"name":"fbjs/lib/areEqual","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createOrReuseTransformNode = createOrReuseTransformNode;\n\n  var _AnimatedNode2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"./AnimatedNode\"));\n\n  var _areEqual = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"fbjs/lib/areEqual\"));\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function sanitizeTransform(inputTransform) {\n    var outputTransform = [];\n    inputTransform.forEach(function (transform) {\n      for (var key in transform) {\n        var value = transform[key];\n\n        if (value instanceof _AnimatedNode2.default) {\n          outputTransform.push({\n            property: key,\n            nodeID: value.__nodeID\n          });\n        } else {\n          outputTransform.push({\n            property: key,\n            value: value\n          });\n        }\n      }\n    });\n    return outputTransform;\n  }\n\n  function extractAnimatedParentNodes(transform) {\n    var parents = [];\n    transform.forEach(function (transform) {\n      for (var key in transform) {\n        var value = transform[key];\n\n        if (value instanceof _AnimatedNode2.default) {\n          parents.push(value);\n        }\n      }\n    });\n    return parents;\n  }\n\n  function createOrReuseTransformNode(transform, oldNode) {\n    var config = sanitizeTransform(transform);\n\n    if (oldNode && (0, _areEqual.default)(config, oldNode._config)) {\n      return oldNode;\n    }\n\n    return new AnimatedTransform(transform, config);\n  }\n\n  var AnimatedTransform = function (_AnimatedNode) {\n    _inherits(AnimatedTransform, _AnimatedNode);\n\n    function AnimatedTransform(transform, config) {\n      var _this;\n\n      _classCallCheck(this, AnimatedTransform);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedTransform).call(this, {\n        type: 'transform',\n        transform: config\n      }, extractAnimatedParentNodes(transform)));\n      _this._config = config;\n      _this._transform = transform;\n      return _this;\n    }\n\n    _createClass(AnimatedTransform, [{\n      key: \"__onEvaluate\",\n      value: function __onEvaluate() {\n        return this._transform.map(function (transform) {\n          var result = {};\n\n          for (var key in transform) {\n            var value = transform[key];\n\n            if (value instanceof _AnimatedNode2.default) {\n              result[key] = value.__getValue();\n            }\n          }\n\n          return result;\n        });\n      }\n    }]);\n\n    return AnimatedTransform;\n  }(_AnimatedNode2.default);\n});","map":[[7,0,1,0],[9,0,3,0],[29,0,5,0],[29,11,5,9,"sanitizeTransform"],[29,28,5,0],[29,29,5,27,"inputTransform"],[29,43,5,0],[29,45,5,43],[30,0,6,2],[30,8,6,8,"outputTransform"],[30,23,6,23],[30,26,6,26],[30,28,6,2],[31,0,7,2,"inputTransform"],[31,4,7,2,"inputTransform"],[31,18,7,16],[31,19,7,17,"forEach"],[31,26,7,2],[31,27,7,25],[31,37,7,25,"transform"],[31,46,7,34],[31,48,7,38],[32,0,8,4],[32,11,8,9],[32,15,8,15,"key"],[32,18,8,4],[32,22,8,22,"transform"],[32,31,8,4],[32,33,8,33],[33,0,9,6],[33,12,9,12,"value"],[33,17,9,17],[33,20,9,20,"transform"],[33,29,9,29],[33,30,9,30,"key"],[33,33,9,29],[33,34,9,6],[35,0,10,6],[35,12,10,10,"value"],[35,17,10,15],[35,29,10,27,"AnimatedNode"],[35,51,10,6],[35,53,10,41],[36,0,11,8,"outputTransform"],[36,10,11,8,"outputTransform"],[36,25,11,23],[36,26,11,24,"push"],[36,30,11,8],[36,31,11,29],[37,0,12,10,"property"],[37,12,12,10,"property"],[37,20,12,18],[37,22,12,20,"key"],[37,25,11,29],[38,0,13,10,"nodeID"],[38,12,13,10,"nodeID"],[38,18,13,16],[38,20,13,18,"value"],[38,25,13,23],[38,26,13,24,"__nodeID"],[39,0,11,29],[39,11,11,8],[40,0,15,7],[40,9,10,6],[40,15,15,13],[41,0,16,8,"outputTransform"],[41,10,16,8,"outputTransform"],[41,25,16,23],[41,26,16,24,"push"],[41,30,16,8],[41,31,16,29],[42,0,17,10,"property"],[42,12,17,10,"property"],[42,20,17,18],[42,22,17,20,"key"],[42,25,16,29],[43,0,18,10,"value"],[43,12,18,10,"value"],[43,17,18,15],[43,19,18,10,"value"],[44,0,16,29],[44,11,16,8],[45,0,20,7],[46,0,21,5],[47,0,22,3],[47,5,7,2],[48,0,23,2],[48,11,23,9,"outputTransform"],[48,26,23,2],[49,0,24,1],[51,0,26,0],[51,11,26,9,"extractAnimatedParentNodes"],[51,37,26,0],[51,38,26,36,"transform"],[51,47,26,0],[51,49,26,47],[52,0,27,2],[52,8,27,8,"parents"],[52,15,27,15],[52,18,27,18],[52,20,27,2],[53,0,28,2,"transform"],[53,4,28,2,"transform"],[53,13,28,11],[53,14,28,12,"forEach"],[53,21,28,2],[53,22,28,20],[53,32,28,20,"transform"],[53,41,28,29],[53,43,28,33],[54,0,29,4],[54,11,29,9],[54,15,29,15,"key"],[54,18,29,4],[54,22,29,22,"transform"],[54,31,29,4],[54,33,29,33],[55,0,30,6],[55,12,30,12,"value"],[55,17,30,17],[55,20,30,20,"transform"],[55,29,30,29],[55,30,30,30,"key"],[55,33,30,29],[55,34,30,6],[57,0,31,6],[57,12,31,10,"value"],[57,17,31,15],[57,29,31,27,"AnimatedNode"],[57,51,31,6],[57,53,31,41],[58,0,32,8,"parents"],[58,10,32,8,"parents"],[58,17,32,15],[58,18,32,16,"push"],[58,22,32,8],[58,23,32,21,"value"],[58,28,32,8],[59,0,33,7],[60,0,34,5],[61,0,35,3],[61,5,28,2],[62,0,36,2],[62,11,36,9,"parents"],[62,18,36,2],[63,0,37,1],[65,0,39,7],[65,11,39,16,"createOrReuseTransformNode"],[65,37,39,7],[65,38,39,43,"transform"],[65,47,39,7],[65,49,39,54,"oldNode"],[65,56,39,7],[65,58,39,63],[66,0,40,2],[66,8,40,8,"config"],[66,14,40,14],[66,17,40,17,"sanitizeTransform"],[66,34,40,34],[66,35,40,35,"transform"],[66,44,40,34],[66,45,40,2],[68,0,41,2],[68,8,41,6,"oldNode"],[68,15,41,13],[68,19,41,17],[68,42,41,27,"config"],[68,48,41,17],[68,50,41,35,"oldNode"],[68,57,41,42],[68,58,41,43,"_config"],[68,65,41,17],[68,66,41,2],[68,68,41,53],[69,0,42,4],[69,13,42,11,"oldNode"],[69,20,42,4],[70,0,43,3],[72,0,44,2],[72,11,44,9],[72,15,44,13,"AnimatedTransform"],[72,32,44,9],[72,33,44,31,"transform"],[72,42,44,9],[72,44,44,42,"config"],[72,50,44,9],[72,51,44,2],[73,0,45,1],[75,6,47,6,"AnimatedTransform"],[75,23],[78,0,48,2],[78,31,48,14,"transform"],[78,40,48,2],[78,42,48,25,"config"],[78,48,48,2],[78,50,48,33],[79,0,48,33],[81,0,48,33],[83,0,49,4],[83,93,50,6],[84,0,50,8,"type"],[84,8,50,8,"type"],[84,12,50,12],[84,14,50,14],[84,25,50,6],[85,0,50,27,"transform"],[85,8,50,27,"transform"],[85,17,50,36],[85,19,50,38,"config"],[86,0,50,6],[86,7,49,4],[86,9,51,6,"extractAnimatedParentNodes"],[86,35,51,32],[86,36,51,33,"transform"],[86,45,51,32],[86,46,49,4],[87,0,53,4],[87,12,53,9,"_config"],[87,19,53,4],[87,22,53,19,"config"],[87,28,53,4],[88,0,54,4],[88,12,54,9,"_transform"],[88,22,54,4],[88,25,54,22,"transform"],[88,34,54,4],[89,0,48,33],[90,0,55,3],[94,37,57,17],[95,0,58,4],[95,15,58,11],[95,20,58,16,"_transform"],[95,30,58,11],[95,31,58,27,"map"],[95,34,58,11],[95,35,58,31],[95,45,58,31,"transform"],[95,54,58,40],[95,56,58,44],[96,0,59,6],[96,14,59,12,"result"],[96,20,59,18],[96,23,59,21],[96,25,59,6],[98,0,60,6],[98,15,60,11],[98,19,60,17,"key"],[98,22,60,6],[98,26,60,24,"transform"],[98,35,60,6],[98,37,60,35],[99,0,61,8],[99,16,61,14,"value"],[99,21,61,19],[99,24,61,22,"transform"],[99,33,61,31],[99,34,61,32,"key"],[99,37,61,31],[99,38,61,8],[101,0,62,8],[101,16,62,12,"value"],[101,21,62,17],[101,33,62,29,"AnimatedNode"],[101,55,62,8],[101,57,62,43],[102,0,63,10,"result"],[102,14,63,10,"result"],[102,20,63,16],[102,21,63,17,"key"],[102,24,63,16],[102,25,63,10],[102,28,63,24,"value"],[102,33,63,29],[102,34,63,30,"__getValue"],[102,44,63,24],[102,46,63,10],[103,0,64,9],[104,0,65,7],[106,0,66,6],[106,17,66,13,"result"],[106,23,66,6],[107,0,67,5],[107,9,58,11],[107,10,58,4],[108,0,68,3],[112,4,47,32,"AnimatedNode"],[112,26]]},"type":"js/module"}]}