{"dependencies":[{"name":"react","data":{"isAsync":false}},{"name":"./../../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"prop-types","data":{"isAsync":false}},{"name":"lodash.mapvalues","data":{"isAsync":false}},{"name":"expo-core","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Constants = exports.default = void 0;\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../../react-transform-hmr/lib/index.js\"));\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"prop-types\"));\n\n  var _lodash = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"lodash.mapvalues\"));\n\n  var _expoCore = _$$_REQUIRE(_dependencyMap[4], \"expo-core\");\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n\n  var _class,\n      _temp,\n      _jsxFileName = \"/home/alex/Documentos/CursoReactNative/node_modules/expo-camera/src/Camera.js\";\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  var _components = {\n    Camera: {\n      displayName: \"Camera\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/alex/Documentos/CursoReactNative/node_modules/expo-camera/src/Camera.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var CameraManager = _expoCore.NativeModulesProxy.ExponentCameraManager || _expoCore.NativeModulesProxy.ExponentCameraModule;\n  var EventThrottleMs = 500;\n  var _PICTURE_SAVED_CALLBACKS = {};\n  var _GLOBAL_PICTURE_ID = 1;\n\n  var Camera = _wrapComponent(\"Camera\")((_temp = _class = function (_React$Component) {\n    _inherits(Camera, _React$Component);\n\n    function Camera(props) {\n      var _this;\n\n      _classCallCheck(this, Camera);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Camera).call(this, props));\n\n      _this._onCameraReady = function () {\n        if (_this.props.onCameraReady) {\n          _this.props.onCameraReady();\n        }\n      };\n\n      _this._onMountError = function (_ref) {\n        var nativeEvent = _ref.nativeEvent;\n\n        if (_this.props.onMountError) {\n          _this.props.onMountError(nativeEvent);\n        }\n      };\n\n      _this._onPictureSaved = function (_ref2) {\n        var nativeEvent = _ref2.nativeEvent;\n        var callback = _PICTURE_SAVED_CALLBACKS[nativeEvent.id];\n\n        if (callback) {\n          callback(nativeEvent.data);\n          delete _PICTURE_SAVED_CALLBACKS[nativeEvent.id];\n        }\n      };\n\n      _this._onObjectDetected = function (callback) {\n        return function (_ref3) {\n          var nativeEvent = _ref3.nativeEvent;\n          var type = nativeEvent.type;\n\n          if (_this._lastEvents[type] && _this._lastEventsTimes[type] && JSON.stringify(nativeEvent) === _this._lastEvents[type] && new Date() - _this._lastEventsTimes[type] < EventThrottleMs) {\n            return;\n          }\n\n          if (callback) {\n            callback(nativeEvent);\n            _this._lastEventsTimes[type] = new Date();\n            _this._lastEvents[type] = JSON.stringify(nativeEvent);\n          }\n        };\n      };\n\n      _this._setReference = function (ref) {\n        if (ref) {\n          _this._cameraRef = ref;\n          _this._cameraHandle = (0, _reactNative.findNodeHandle)(ref);\n        } else {\n          _this._cameraRef = null;\n          _this._cameraHandle = null;\n        }\n      };\n\n      _this._onBarCodeScanned = function () {\n        var onBarCodeRead = _this.props.onBarCodeRead && function (data) {\n          console.warn(\"'onBarCodeRead' is deprecated in favour of 'onBarCodeScanned'\");\n          return _this.props.onBarCodeRead(data);\n        };\n\n        return _this.props.onBarCodeScanned || onBarCodeRead;\n      };\n\n      _this._lastEvents = {};\n      _this._lastEventsTimes = {};\n      return _this;\n    }\n\n    _createClass(Camera, [{\n      key: \"takePictureAsync\",\n      value: function takePictureAsync(options) {\n        var id;\n        return regeneratorRuntime.async(function takePictureAsync$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!options) {\n                  options = {};\n                }\n\n                if (!options.quality) {\n                  options.quality = 1;\n                }\n\n                if (options.onPictureSaved) {\n                  id = _GLOBAL_PICTURE_ID++;\n                  _PICTURE_SAVED_CALLBACKS[id] = options.onPictureSaved;\n                  options.id = id;\n                  options.fastMode = true;\n                }\n\n                _context.next = 5;\n                return regeneratorRuntime.awrap(CameraManager.takePicture(options, this._cameraHandle));\n\n              case 5:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"getSupportedRatiosAsync\",\n      value: function getSupportedRatiosAsync() {\n        return regeneratorRuntime.async(function getSupportedRatiosAsync$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(_reactNative.Platform.OS === 'android')) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                _context2.next = 3;\n                return regeneratorRuntime.awrap(CameraManager.getSupportedRatios(this._cameraHandle));\n\n              case 3:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 6:\n                throw new Error('Ratio is not supported on iOS');\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"getAvailablePictureSizesAsync\",\n      value: function getAvailablePictureSizesAsync(ratio) {\n        return regeneratorRuntime.async(function getAvailablePictureSizesAsync$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return regeneratorRuntime.awrap(CameraManager.getAvailablePictureSizes(ratio, this._cameraHandle));\n\n              case 2:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"recordAsync\",\n      value: function recordAsync(options) {\n        return regeneratorRuntime.async(function recordAsync$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!options || typeof options !== 'object') {\n                  options = {};\n                } else if (typeof options.quality === 'string') {\n                  options.quality = Camera.Constants.VideoQuality[options.quality];\n                }\n\n                _context4.next = 3;\n                return regeneratorRuntime.awrap(CameraManager.record(options, this._cameraHandle));\n\n              case 3:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"stopRecording\",\n      value: function stopRecording() {\n        CameraManager.stopRecording(this._cameraHandle);\n      }\n    }, {\n      key: \"pausePreview\",\n      value: function pausePreview() {\n        CameraManager.pausePreview(this._cameraHandle);\n      }\n    }, {\n      key: \"resumePreview\",\n      value: function resumePreview() {\n        CameraManager.resumePreview(this._cameraHandle);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var nativeProps = this._convertNativeProps(this.props);\n\n        return _react.default.createElement(ExponentCamera, _extends({}, nativeProps, {\n          ref: this._setReference,\n          onCameraReady: this._onCameraReady,\n          onMountError: this._onMountError,\n          onPictureSaved: this._onPictureSaved,\n          onBarCodeScanned: this._onObjectDetected(this._onBarCodeScanned()),\n          onFacesDetected: this._onObjectDetected(this.props.onFacesDetected),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          }\n        }));\n      }\n    }, {\n      key: \"_convertNativeProps\",\n      value: function _convertNativeProps(props) {\n        var newProps = (0, _lodash.default)(props, this._convertProp);\n        var propsKeys = Object.keys(newProps);\n\n        if (!propsKeys.includes(\"barCodeScannerSettings\") && propsKeys.includes(\"barCodeTypes\")) {\n          newProps.barCodeScannerSettings = {\n            barCodeTypes: newProps.barCodeTypes\n          };\n        }\n\n        if (props.onBarCodeScanned || props.onBarCodeRead) {\n          newProps.barCodeScannerEnabled = true;\n        }\n\n        if (props.onFacesDetected) {\n          newProps.faceDetectorEnabled = true;\n        }\n\n        if (_reactNative.Platform.OS === 'ios') {\n          delete newProps.ratio;\n          delete newProps.useCamera2Api;\n        }\n\n        return newProps;\n      }\n    }, {\n      key: \"_convertProp\",\n      value: function _convertProp(value, key) {\n        if (typeof value === 'string' && Camera.ConversionTables[key]) {\n          return Camera.ConversionTables[key][value];\n        }\n\n        return value;\n      }\n    }]);\n\n    return Camera;\n  }(_react.default.Component), _class.Constants = {\n    Type: CameraManager.Type,\n    FlashMode: CameraManager.FlashMode,\n    AutoFocus: CameraManager.AutoFocus,\n    WhiteBalance: CameraManager.WhiteBalance,\n    VideoQuality: CameraManager.VideoQuality,\n    VideoStabilization: CameraManager.VideoStabilization || {}\n  }, _class.ConversionTables = {\n    type: CameraManager.Type,\n    flashMode: CameraManager.FlashMode,\n    autoFocus: CameraManager.AutoFocus,\n    whiteBalance: CameraManager.WhiteBalance\n  }, _class.propTypes = _objectSpread({}, _reactNative.ViewPropTypes, {\n    zoom: _propTypes.default.number,\n    ratio: _propTypes.default.string,\n    focusDepth: _propTypes.default.number,\n    onMountError: _propTypes.default.func,\n    pictureSize: _propTypes.default.string,\n    onCameraReady: _propTypes.default.func,\n    useCamera2Api: _propTypes.default.bool,\n    onBarCodeScanned: _propTypes.default.func,\n    barCodeScannerSettings: _propTypes.default.object,\n    onFacesDetected: _propTypes.default.func,\n    faceDetectorSettings: _propTypes.default.object,\n    type: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n    flashMode: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n    videoStabilizationMode: _propTypes.default.number,\n    whiteBalance: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n    autoFocus: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool])\n  }), _class.defaultProps = {\n    zoom: 0,\n    ratio: '4:3',\n    focusDepth: 0,\n    faceDetectorSettings: {},\n    type: CameraManager.Type.back,\n    autoFocus: CameraManager.AutoFocus.on,\n    flashMode: CameraManager.FlashMode.off,\n    whiteBalance: CameraManager.WhiteBalance.auto\n  }, _temp));\n\n  var _default2 = Camera;\n  exports.default = _default2;\n  var Constants = Camera.Constants;\n  exports.Constants = Constants;\n  var ExponentCamera = (0, _expoCore.requireNativeViewManager)('ExponentCamera', Camera);\n});","map":[[7,0,2,0],[11,0,3,0],[13,0,4,0],[15,0,5,0],[17,0,6,0],[66,0,69,0],[66,6,69,6,"CameraManager"],[66,19,69,27],[66,22,70,2,"NativeModulesProxy"],[66,51,70,21,"ExponentCameraManager"],[66,72,70,2],[66,76,70,46,"NativeModulesProxy"],[66,105,70,65,"ExponentCameraModule"],[66,125,69,0],[67,0,72,0],[67,6,72,6,"EventThrottleMs"],[67,21,72,21],[67,24,72,24],[67,27,72,0],[68,0,74,0],[68,6,74,6,"_PICTURE_SAVED_CALLBACKS"],[68,30,74,30],[68,33,74,33],[68,35,74,0],[69,0,75,0],[69,6,75,4,"_GLOBAL_PICTURE_ID"],[69,24,75,22],[69,27,75,25],[69,28,75,0],[74,0,132,2],[74,20,132,14,"props"],[74,25,132,2],[74,27,132,32],[75,0,132,32],[77,0,132,32],[79,0,133,4],[79,82,133,10,"props"],[79,87,133,4],[81,0,132,32],[81,12,187,2,"_onCameraReady"],[81,26,132,32],[81,29,187,19],[81,41,187,25],[82,0,188,4],[82,12,188,8],[82,18,188,13,"props"],[82,23,188,8],[82,24,188,19,"onCameraReady"],[82,37,188,4],[82,39,188,34],[83,0,189,6],[83,16,189,11,"props"],[83,21,189,6],[83,22,189,17,"onCameraReady"],[83,35,189,6],[84,0,190,5],[85,0,191,3],[85,7,132,32],[87,0,132,32],[87,12,193,2,"_onMountError"],[87,25,132,32],[87,28,193,18],[87,44,193,83],[88,0,193,83],[88,12,193,21,"nativeEvent"],[88,23,193,83],[88,31,193,21,"nativeEvent"],[88,42,193,83],[90,0,194,4],[90,12,194,8],[90,18,194,13,"props"],[90,23,194,8],[90,24,194,19,"onMountError"],[90,36,194,4],[90,38,194,33],[91,0,195,6],[91,16,195,11,"props"],[91,21,195,6],[91,22,195,17,"onMountError"],[91,34,195,6],[91,35,195,30,"nativeEvent"],[91,46,195,6],[92,0,196,5],[93,0,197,3],[93,7,132,32],[95,0,132,32],[95,12,199,2,"_onPictureSaved"],[95,27,132,32],[95,30,199,20],[95,47,199,87],[96,0,199,87],[96,12,199,23,"nativeEvent"],[96,23,199,87],[96,32,199,23,"nativeEvent"],[96,43,199,87],[97,0,200,4],[97,12,200,10,"callback"],[97,20,200,18],[97,23,200,21,"_PICTURE_SAVED_CALLBACKS"],[97,47,200,45],[97,48,200,46,"nativeEvent"],[97,59,200,57],[97,60,200,58,"id"],[97,62,200,45],[97,63,200,4],[99,0,201,4],[99,12,201,8,"callback"],[99,20,201,4],[99,22,201,18],[100,0,202,6,"callback"],[100,10,202,6,"callback"],[100,18,202,14],[100,19,202,15,"nativeEvent"],[100,30,202,26],[100,31,202,27,"data"],[100,35,202,14],[100,36,202,6],[101,0,203,6],[101,17,203,13,"_PICTURE_SAVED_CALLBACKS"],[101,41,203,37],[101,42,203,38,"nativeEvent"],[101,53,203,49],[101,54,203,50,"id"],[101,56,203,37],[101,57,203,6],[102,0,204,5],[103,0,205,3],[103,7,132,32],[105,0,132,32],[105,12,207,2,"_onObjectDetected"],[105,29,132,32],[105,32,207,22],[105,42,207,23,"callback"],[105,50,207,22],[106,0,207,22],[106,15,207,47],[106,32,207,96],[107,0,207,96],[107,14,207,50,"nativeEvent"],[107,25,207,96],[107,34,207,50,"nativeEvent"],[107,45,207,96],[108,0,207,96],[108,14,208,12,"type"],[108,18,207,96],[108,21,208,21,"nativeEvent"],[108,32,207,96],[108,33,208,12,"type"],[108,37,207,96],[110,0,209,4],[110,14,210,6],[110,20,210,11,"_lastEvents"],[110,31,210,6],[110,32,210,23,"type"],[110,36,210,6],[110,41,211,6],[110,47,211,11,"_lastEventsTimes"],[110,63,211,6],[110,64,211,28,"type"],[110,68,211,6],[110,69,210,6],[110,73,212,6,"JSON"],[110,77,212,10],[110,78,212,11,"stringify"],[110,87,212,6],[110,88,212,21,"nativeEvent"],[110,99,212,6],[110,105,212,38],[110,111,212,43,"_lastEvents"],[110,122,212,38],[110,123,212,55,"type"],[110,127,212,38],[110,128,210,6],[110,132,213,6],[110,136,213,10,"Date"],[110,140,213,6],[110,145,213,19],[110,151,213,24,"_lastEventsTimes"],[110,167,213,19],[110,168,213,41,"type"],[110,172,213,19],[110,173,213,6],[110,176,213,49,"EventThrottleMs"],[110,191,209,4],[110,193,214,6],[111,0,215,6],[112,0,216,5],[114,0,218,4],[114,14,218,8,"callback"],[114,22,218,4],[114,24,218,18],[115,0,219,6,"callback"],[115,12,219,6,"callback"],[115,20,219,14],[115,21,219,15,"nativeEvent"],[115,32,219,14],[115,33,219,6],[116,0,220,6],[116,18,220,11,"_lastEventsTimes"],[116,34,220,6],[116,35,220,28,"type"],[116,39,220,6],[116,43,220,36],[116,47,220,40,"Date"],[116,51,220,36],[116,53,220,6],[117,0,221,6],[117,18,221,11,"_lastEvents"],[117,29,221,6],[117,30,221,23,"type"],[117,34,221,6],[117,38,221,31,"JSON"],[117,42,221,35],[117,43,221,36,"stringify"],[117,52,221,31],[117,53,221,46,"nativeEvent"],[117,64,221,31],[117,65,221,6],[118,0,222,5],[119,0,223,3],[119,9,207,22],[120,0,207,22],[120,7,132,32],[122,0,132,32],[122,12,225,2,"_setReference"],[122,25,132,32],[122,28,225,18],[122,38,225,19,"ref"],[122,41,225,18],[122,43,225,36],[123,0,226,4],[123,12,226,8,"ref"],[123,15,226,4],[123,17,226,13],[124,0,227,6],[124,16,227,11,"_cameraRef"],[124,26,227,6],[124,29,227,24,"ref"],[124,32,227,6],[125,0,228,6],[125,16,228,11,"_cameraHandle"],[125,29,228,6],[125,32,228,27],[125,65,228,42,"ref"],[125,68,228,27],[125,69,228,6],[126,0,229,5],[126,9,226,4],[126,15,229,11],[127,0,230,6],[127,16,230,11,"_cameraRef"],[127,26,230,6],[127,29,230,24],[127,33,230,6],[128,0,231,6],[128,16,231,11,"_cameraHandle"],[128,29,231,6],[128,32,231,27],[128,36,231,6],[129,0,232,5],[130,0,233,3],[130,7,132,32],[132,0,132,32],[132,12,235,2,"_onBarCodeScanned"],[132,29,132,32],[132,32,235,22],[132,44,235,28],[133,0,236,4],[133,12,236,10,"onBarCodeRead"],[133,25,236,23],[133,28,236,26],[133,34,236,31,"props"],[133,39,236,26],[133,40,236,37,"onBarCodeRead"],[133,53,236,26],[133,57,236,55],[133,67,236,56,"data"],[133,71,236,55],[133,73,236,65],[134,0,237,6,"console"],[134,10,237,6,"console"],[134,17,237,13],[134,18,237,14,"warn"],[134,22,237,6],[134,23,237,19],[134,86,237,6],[135,0,238,6],[135,17,238,13],[135,23,238,18,"props"],[135,28,238,13],[135,29,238,24,"onBarCodeRead"],[135,42,238,13],[135,43,238,38,"data"],[135,47,238,13],[135,48,238,6],[136,0,239,5],[136,9,236,4],[138,0,240,4],[138,15,240,11],[138,21,240,16,"props"],[138,26,240,11],[138,27,240,22,"onBarCodeScanned"],[138,43,240,11],[138,47,240,42,"onBarCodeRead"],[138,60,240,4],[139,0,241,3],[139,7,132,32],[141,0,134,4],[141,12,134,9,"_lastEvents"],[141,23,134,4],[141,26,134,23],[141,28,134,4],[142,0,135,4],[142,12,135,9,"_lastEventsTimes"],[142,28,135,4],[142,31,135,28],[142,33,135,4],[143,0,132,32],[144,0,136,3],[148,39,138,25,"options"],[148,46],[154,0,139,4],[154,20,139,8],[154,21,139,9,"options"],[154,28,139,4],[154,30,139,18],[155,0,140,6,"options"],[155,18,140,6,"options"],[155,25,140,13],[155,28,140,16],[155,30,140,6],[156,0,141,5],[158,0,142,4],[158,20,142,8],[158,21,142,9,"options"],[158,28,142,16],[158,29,142,17,"quality"],[158,36,142,4],[158,38,142,26],[159,0,143,6,"options"],[159,18,143,6,"options"],[159,25,143,13],[159,26,143,14,"quality"],[159,33,143,6],[159,36,143,24],[159,37,143,6],[160,0,144,5],[162,0,145,4],[162,20,145,8,"options"],[162,27,145,15],[162,28,145,16,"onPictureSaved"],[162,42,145,4],[162,44,145,32],[163,0,146,12,"id"],[163,18,146,12,"id"],[163,20,145,32],[163,23,146,17,"_GLOBAL_PICTURE_ID"],[163,41,146,35],[163,43,145,32],[164,0,147,6,"_PICTURE_SAVED_CALLBACKS"],[164,18,147,6,"_PICTURE_SAVED_CALLBACKS"],[164,42,147,30],[164,43,147,31,"id"],[164,45,147,30],[164,46,147,6],[164,49,147,37,"options"],[164,56,147,44],[164,57,147,45,"onPictureSaved"],[164,71,147,6],[165,0,148,6,"options"],[165,18,148,6,"options"],[165,25,148,13],[165,26,148,14,"id"],[165,28,148,6],[165,31,148,19,"id"],[165,33,148,6],[166,0,149,6,"options"],[166,18,149,6,"options"],[166,25,149,13],[166,26,149,14,"fastMode"],[166,34,149,6],[166,37,149,25],[166,41,149,6],[167,0,150,5],[170,48,151,17,"CameraManager"],[170,61,151,30],[170,62,151,31,"takePicture"],[170,73,151,17],[170,74,151,43,"options"],[170,81,151,17],[170,83,151,52],[170,88,151,57,"_cameraHandle"],[170,101,151,17],[170,102],[189,22,155,8,"Platform"],[189,44,155,17,"OS"],[189,46,155,8],[189,51,155,24],[189,60],[195,48,156,19,"CameraManager"],[195,61,156,32],[195,62,156,33,"getSupportedRatios"],[195,80,156,19],[195,81,156,52],[195,86,156,57,"_cameraHandle"],[195,99,156,19],[195,100],[201,22,158,12],[201,26,158,16,"Error"],[201,31,158,12],[201,32,158,22],[201,63,158,12],[201,64],[212,52,162,38,"ratio"],[212,57],[218,48,163,17,"CameraManager"],[218,61,163,30],[218,62,163,31,"getAvailablePictureSizes"],[218,86,163,17],[218,87,163,56,"ratio"],[218,92,163,17],[218,94,163,63],[218,99,163,68,"_cameraHandle"],[218,112,163,17],[218,113],[232,34,166,20,"options"],[232,41],[237,0,167,4],[237,20,167,8],[237,21,167,9,"options"],[237,28,167,8],[237,32,167,20],[237,39,167,27,"options"],[237,46,167,20],[237,51,167,39],[237,59,167,4],[237,61,167,49],[238,0,168,6,"options"],[238,18,168,6,"options"],[238,25,168,13],[238,28,168,16],[238,30,168,6],[239,0,169,5],[239,17,167,4],[239,23,169,11],[239,27,169,15],[239,34,169,22,"options"],[239,41,169,29],[239,42,169,30,"quality"],[239,49,169,15],[239,54,169,42],[239,62,169,11],[239,64,169,52],[240,0,170,6,"options"],[240,18,170,6,"options"],[240,25,170,13],[240,26,170,14,"quality"],[240,33,170,6],[240,36,170,24,"Camera"],[240,42,170,30],[240,43,170,31,"Constants"],[240,52,170,24],[240,53,170,41,"VideoQuality"],[240,65,170,24],[240,66,170,54,"options"],[240,73,170,61],[240,74,170,62,"quality"],[240,81,170,24],[240,82,170,6],[241,0,171,5],[244,48,172,17,"CameraManager"],[244,61,172,30],[244,62,172,31,"record"],[244,68,172,17],[244,69,172,38,"options"],[244,76,172,17],[244,78,172,47],[244,83,172,52,"_cameraHandle"],[244,96,172,17],[244,97],[258,38,175,18],[259,0,176,4,"CameraManager"],[259,8,176,4,"CameraManager"],[259,21,176,17],[259,22,176,18,"stopRecording"],[259,35,176,4],[259,36,176,32],[259,41,176,37,"_cameraHandle"],[259,54,176,4],[260,0,177,3],[263,37,179,17],[264,0,180,4,"CameraManager"],[264,8,180,4,"CameraManager"],[264,21,180,17],[264,22,180,18,"pausePreview"],[264,34,180,4],[264,35,180,31],[264,40,180,36,"_cameraHandle"],[264,53,180,4],[265,0,181,3],[268,38,183,18],[269,0,184,4,"CameraManager"],[269,8,184,4,"CameraManager"],[269,21,184,17],[269,22,184,18,"resumePreview"],[269,35,184,4],[269,36,184,32],[269,41,184,37,"_cameraHandle"],[269,54,184,4],[270,0,185,3],[273,31,243,11],[274,0,244,4],[274,12,244,10,"nativeProps"],[274,23,244,21],[274,26,244,24],[274,31,244,29,"_convertNativeProps"],[274,50,244,24],[274,51,244,49],[274,56,244,54,"props"],[274,61,244,24],[274,62,244,4],[276,0,246,4],[276,15,247,6],[276,44,247,7],[276,58,247,6],[276,73,248,12,"nativeProps"],[276,84,247,6],[277,0,249,8],[277,10,249,8],[277,13,249,11],[277,15,249,13],[277,20,249,18,"_setReference"],[277,33,247,6],[278,0,250,8],[278,10,250,8],[278,23,250,21],[278,25,250,23],[278,30,250,28,"_onCameraReady"],[278,44,247,6],[279,0,251,8],[279,10,251,8],[279,22,251,20],[279,24,251,22],[279,29,251,27,"_onMountError"],[279,42,247,6],[280,0,252,8],[280,10,252,8],[280,24,252,22],[280,26,252,24],[280,31,252,29,"_onPictureSaved"],[280,46,247,6],[281,0,253,8],[281,10,253,8],[281,26,253,24],[281,28,253,26],[281,33,253,31,"_onObjectDetected"],[281,50,253,26],[281,51,253,49],[281,56,253,54,"_onBarCodeScanned"],[281,73,253,49],[281,75,253,26],[281,76,247,6],[282,0,254,8],[282,10,254,8],[282,25,254,23],[282,27,254,25],[282,32,254,30,"_onObjectDetected"],[282,49,254,25],[282,50,254,48],[282,55,254,53,"props"],[282,60,254,48],[282,61,254,59,"onFacesDetected"],[282,76,254,25],[282,77,247,6],[283,0,247,6],[284,0,247,6],[285,0,247,6],[286,0,247,6],[287,0,247,6],[287,11,246,4],[288,0,257,3],[291,42,259,22,"props"],[291,47],[291,49,259,40],[292,0,260,4],[292,12,260,10,"newProps"],[292,20,260,18],[292,23,260,21],[292,44,260,31,"props"],[292,49,260,21],[292,51,260,38],[292,56,260,43,"_convertProp"],[292,68,260,21],[292,69,260,4],[293,0,262,4],[293,12,262,10,"propsKeys"],[293,21,262,19],[293,24,262,22,"Object"],[293,30,262,28],[293,31,262,29,"keys"],[293,35,262,22],[293,36,262,34,"newProps"],[293,44,262,22],[293,45,262,4],[295,0,263,4],[295,12,263,8],[295,13,263,9,"propsKeys"],[295,22,263,18],[295,23,263,19,"includes"],[295,31,263,9],[295,32,263,28],[295,56,263,9],[295,57,263,8],[295,61,263,57,"propsKeys"],[295,70,263,66],[295,71,263,67,"includes"],[295,79,263,57],[295,80,263,76],[295,94,263,57],[295,95,263,4],[295,97,263,93],[296,0,264,6,"newProps"],[296,10,264,6,"newProps"],[296,18,264,14],[296,19,264,15,"barCodeScannerSettings"],[296,41,264,6],[296,44,264,40],[297,0,265,8,"barCodeTypes"],[297,12,265,8,"barCodeTypes"],[297,24,265,20],[297,26,265,22,"newProps"],[297,34,265,30],[297,35,265,31,"barCodeTypes"],[298,0,264,40],[298,11,264,6],[299,0,267,5],[301,0,269,4],[301,12,269,8,"props"],[301,17,269,13],[301,18,269,14,"onBarCodeScanned"],[301,34,269,8],[301,38,269,34,"props"],[301,43,269,39],[301,44,269,40,"onBarCodeRead"],[301,57,269,4],[301,59,269,55],[302,0,270,6,"newProps"],[302,10,270,6,"newProps"],[302,18,270,14],[302,19,270,15,"barCodeScannerEnabled"],[302,40,270,6],[302,43,270,39],[302,47,270,6],[303,0,271,5],[305,0,273,4],[305,12,273,8,"props"],[305,17,273,13],[305,18,273,14,"onFacesDetected"],[305,33,273,4],[305,35,273,31],[306,0,274,6,"newProps"],[306,10,274,6,"newProps"],[306,18,274,14],[306,19,274,15,"faceDetectorEnabled"],[306,38,274,6],[306,41,274,37],[306,45,274,6],[307,0,275,5],[309,0,277,4],[309,12,277,8,"Platform"],[309,34,277,17,"OS"],[309,36,277,8],[309,41,277,24],[309,46,277,4],[309,48,277,31],[310,0,278,6],[310,17,278,13,"newProps"],[310,25,278,21],[310,26,278,22,"ratio"],[310,31,278,6],[311,0,279,6],[311,17,279,13,"newProps"],[311,25,279,21],[311,26,279,22,"useCamera2Api"],[311,39,279,6],[312,0,280,5],[314,0,282,4],[314,15,282,11,"newProps"],[314,23,282,4],[315,0,283,3],[318,35,285,15,"value"],[318,40],[318,42,285,25,"key"],[318,45],[318,47,285,41],[319,0,286,4],[319,12,286,8],[319,19,286,15,"value"],[319,24,286,8],[319,29,286,25],[319,37,286,8],[319,41,286,37,"Camera"],[319,47,286,43],[319,48,286,44,"ConversionTables"],[319,64,286,37],[319,65,286,61,"key"],[319,68,286,37],[319,69,286,4],[319,71,286,67],[320,0,287,6],[320,17,287,13,"Camera"],[320,23,287,19],[320,24,287,20,"ConversionTables"],[320,40,287,13],[320,41,287,37,"key"],[320,44,287,13],[320,46,287,42,"value"],[320,51,287,13],[320,52,287,6],[321,0,288,5],[323,0,290,4],[323,15,290,11,"value"],[323,20,290,4],[324,0,291,3],[328,4,77,36,"React"],[328,19,77,42,"Component"],[328,28],[328,38,78,9,"Constants"],[328,47],[328,50,78,21],[329,0,79,4,"Type"],[329,4,79,4,"Type"],[329,8,79,8],[329,10,79,10,"CameraManager"],[329,23,79,23],[329,24,79,24,"Type"],[329,28,78,21],[330,0,80,4,"FlashMode"],[330,4,80,4,"FlashMode"],[330,13,80,13],[330,15,80,15,"CameraManager"],[330,28,80,28],[330,29,80,29,"FlashMode"],[330,38,78,21],[331,0,81,4,"AutoFocus"],[331,4,81,4,"AutoFocus"],[331,13,81,13],[331,15,81,15,"CameraManager"],[331,28,81,28],[331,29,81,29,"AutoFocus"],[331,38,78,21],[332,0,82,4,"WhiteBalance"],[332,4,82,4,"WhiteBalance"],[332,16,82,16],[332,18,82,18,"CameraManager"],[332,31,82,31],[332,32,82,32,"WhiteBalance"],[332,44,78,21],[333,0,83,4,"VideoQuality"],[333,4,83,4,"VideoQuality"],[333,16,83,16],[333,18,83,18,"CameraManager"],[333,31,83,31],[333,32,83,32,"VideoQuality"],[333,44,78,21],[334,0,84,4,"VideoStabilization"],[334,4,84,4,"VideoStabilization"],[334,22,84,22],[334,24,84,24,"CameraManager"],[334,37,84,37],[334,38,84,38,"VideoStabilization"],[334,56,84,24],[334,60,84,60],[335,0,78,21],[335,3],[335,12,89,9,"ConversionTables"],[335,28],[335,31,89,28],[336,0,90,4,"type"],[336,4,90,4,"type"],[336,8,90,8],[336,10,90,10,"CameraManager"],[336,23,90,23],[336,24,90,24,"Type"],[336,28,89,28],[337,0,91,4,"flashMode"],[337,4,91,4,"flashMode"],[337,13,91,13],[337,15,91,15,"CameraManager"],[337,28,91,28],[337,29,91,29,"FlashMode"],[337,38,89,28],[338,0,92,4,"autoFocus"],[338,4,92,4,"autoFocus"],[338,13,92,13],[338,15,92,15,"CameraManager"],[338,28,92,28],[338,29,92,29,"AutoFocus"],[338,38,89,28],[339,0,93,4,"whiteBalance"],[339,4,93,4,"whiteBalance"],[339,16,93,16],[339,18,93,18,"CameraManager"],[339,31,93,31],[339,32,93,32,"WhiteBalance"],[340,0,89,28],[340,3],[340,12,96,9,"propTypes"],[340,21],[340,42,97,7,"ViewPropTypes"],[340,68],[341,0,98,4,"zoom"],[341,4,98,4,"zoom"],[341,8,98,8],[341,10,98,10,"PropTypes"],[341,29,98,20,"number"],[341,35],[342,0,99,4,"ratio"],[342,4,99,4,"ratio"],[342,9,99,9],[342,11,99,11,"PropTypes"],[342,30,99,21,"string"],[342,36],[343,0,100,4,"focusDepth"],[343,4,100,4,"focusDepth"],[343,14,100,14],[343,16,100,16,"PropTypes"],[343,35,100,26,"number"],[343,41],[344,0,101,4,"onMountError"],[344,4,101,4,"onMountError"],[344,16,101,16],[344,18,101,18,"PropTypes"],[344,37,101,28,"func"],[344,41],[345,0,102,4,"pictureSize"],[345,4,102,4,"pictureSize"],[345,15,102,15],[345,17,102,17,"PropTypes"],[345,36,102,27,"string"],[345,42],[346,0,103,4,"onCameraReady"],[346,4,103,4,"onCameraReady"],[346,17,103,17],[346,19,103,19,"PropTypes"],[346,38,103,29,"func"],[346,42],[347,0,104,4,"useCamera2Api"],[347,4,104,4,"useCamera2Api"],[347,17,104,17],[347,19,104,19,"PropTypes"],[347,38,104,29,"bool"],[347,42],[348,0,105,4,"onBarCodeScanned"],[348,4,105,4,"onBarCodeScanned"],[348,20,105,20],[348,22,105,22,"PropTypes"],[348,41,105,32,"func"],[348,45],[349,0,106,4,"barCodeScannerSettings"],[349,4,106,4,"barCodeScannerSettings"],[349,26,106,26],[349,28,106,28,"PropTypes"],[349,47,106,38,"object"],[349,53],[350,0,107,4,"onFacesDetected"],[350,4,107,4,"onFacesDetected"],[350,19,107,19],[350,21,107,21,"PropTypes"],[350,40,107,31,"func"],[350,44],[351,0,108,4,"faceDetectorSettings"],[351,4,108,4,"faceDetectorSettings"],[351,24,108,24],[351,26,108,26,"PropTypes"],[351,45,108,36,"object"],[351,51],[352,0,109,4,"type"],[352,4,109,4,"type"],[352,8,109,8],[352,10,109,10,"PropTypes"],[352,29,109,20,"oneOfType"],[352,38,109,10],[352,39,109,30],[352,40,109,31,"PropTypes"],[352,59,109,41,"string"],[352,65,109,30],[352,67,109,49,"PropTypes"],[352,86,109,59,"number"],[352,92,109,30],[352,93,109,10],[352,94],[353,0,110,4,"flashMode"],[353,4,110,4,"flashMode"],[353,13,110,13],[353,15,110,15,"PropTypes"],[353,34,110,25,"oneOfType"],[353,43,110,15],[353,44,110,35],[353,45,110,36,"PropTypes"],[353,64,110,46,"string"],[353,70,110,35],[353,72,110,54,"PropTypes"],[353,91,110,64,"number"],[353,97,110,35],[353,98,110,15],[353,99],[354,0,111,4,"videoStabilizationMode"],[354,4,111,4,"videoStabilizationMode"],[354,26,111,26],[354,28,111,28,"PropTypes"],[354,47,111,38,"number"],[354,53],[355,0,112,4,"whiteBalance"],[355,4,112,4,"whiteBalance"],[355,16,112,16],[355,18,112,18,"PropTypes"],[355,37,112,28,"oneOfType"],[355,46,112,18],[355,47,112,38],[355,48,112,39,"PropTypes"],[355,67,112,49,"string"],[355,73,112,38],[355,75,112,57,"PropTypes"],[355,94,112,67,"number"],[355,100,112,38],[355,101,112,18],[355,102],[356,0,113,4,"autoFocus"],[356,4,113,4,"autoFocus"],[356,13,113,13],[356,15,113,15,"PropTypes"],[356,34,113,25,"oneOfType"],[356,43,113,15],[356,44,113,35],[356,45,113,36,"PropTypes"],[356,64,113,46,"string"],[356,70,113,35],[356,72,113,54,"PropTypes"],[356,91,113,64,"number"],[356,97,113,35],[356,99,113,72,"PropTypes"],[356,118,113,82,"bool"],[356,122,113,35],[356,123,113,15],[357,13,116,9,"defaultProps"],[357,25],[357,28,116,32],[358,0,117,4,"zoom"],[358,4,117,4,"zoom"],[358,8,117,8],[358,10,117,10],[358,11,116,32],[359,0,118,4,"ratio"],[359,4,118,4,"ratio"],[359,9,118,9],[359,11,118,11],[359,16,116,32],[360,0,119,4,"focusDepth"],[360,4,119,4,"focusDepth"],[360,14,119,14],[360,16,119,16],[360,17,116,32],[361,0,120,4,"faceDetectorSettings"],[361,4,120,4,"faceDetectorSettings"],[361,24,120,24],[361,26,120,26],[361,28,116,32],[362,0,121,4,"type"],[362,4,121,4,"type"],[362,8,121,8],[362,10,121,10,"CameraManager"],[362,23,121,23],[362,24,121,24,"Type"],[362,28,121,10],[362,29,121,29,"back"],[362,33,116,32],[363,0,122,4,"autoFocus"],[363,4,122,4,"autoFocus"],[363,13,122,13],[363,15,122,15,"CameraManager"],[363,28,122,28],[363,29,122,29,"AutoFocus"],[363,38,122,15],[363,39,122,39,"on"],[363,41,116,32],[364,0,123,4,"flashMode"],[364,4,123,4,"flashMode"],[364,13,123,13],[364,15,123,15,"CameraManager"],[364,28,123,28],[364,29,123,29,"FlashMode"],[364,38,123,15],[364,39,123,39,"off"],[364,42,116,32],[365,0,124,4,"whiteBalance"],[365,4,124,4,"whiteBalance"],[365,16,124,16],[365,18,124,18,"CameraManager"],[365,31,124,31],[365,32,124,32,"WhiteBalance"],[365,44,124,18],[365,45,124,45,"auto"],[366,0,116,32],[366,3],[370,0,294,7],[370,6,294,13,"Constants"],[370,15,294,22],[370,18,294,25,"Camera"],[370,24,294,31],[370,25,294,32,"Constants"],[370,34,294,7],[372,0,296,0],[372,6,296,6,"ExponentCamera"],[372,20,296,20],[372,23,296,23],[372,63,296,48],[372,79,296,23],[372,81,296,66,"Camera"],[372,87,296,23],[372,88,296,0]]},"type":"js/module"}]}