{"dependencies":[{"name":"@react-navigation/core","data":{"isAsync":false}},{"name":"./DrawerActions","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _core = _$$_REQUIRE(_dependencyMap[0], \"@react-navigation/core\");\n\n  var _DrawerActions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./DrawerActions\"));\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  function withDefaultValue(obj, key, defaultValue) {\n    if (obj.hasOwnProperty(key) && typeof obj[key] !== 'undefined') {\n      return obj;\n    }\n\n    obj[key] = defaultValue;\n    return obj;\n  }\n\n  var getActiveRouteKey = function getActiveRouteKey(route) {\n    if (route.routes && route.routes[route.index]) {\n      return getActiveRouteKey(route.routes[route.index]);\n    }\n\n    return route.key;\n  };\n\n  var _default = function _default(routeConfigs) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    config = _objectSpread({}, config);\n    config = withDefaultValue(config, 'resetOnBlur', config.unmountInactiveRoutes ? true : !!config.resetOnBlur);\n    config = withDefaultValue(config, 'backBehavior', 'initialRoute');\n    var switchRouter = (0, _core.SwitchRouter)(routeConfigs, config);\n\n    var __id = -1;\n\n    var genId = function genId() {\n      __id++;\n      return __id;\n    };\n\n    return _objectSpread({}, switchRouter, {\n      getActionCreators: function getActionCreators(route, navStateKey) {\n        return _objectSpread({\n          openDrawer: function openDrawer() {\n            return _DrawerActions.default.openDrawer({\n              key: navStateKey\n            });\n          },\n          closeDrawer: function closeDrawer() {\n            return _DrawerActions.default.closeDrawer({\n              key: navStateKey\n            });\n          },\n          toggleDrawer: function toggleDrawer() {\n            return _DrawerActions.default.toggleDrawer({\n              key: navStateKey\n            });\n          }\n        }, switchRouter.getActionCreators(route, navStateKey));\n      },\n      getStateForAction: function getStateForAction(action, state) {\n        if (!state) {\n          return _objectSpread({}, switchRouter.getStateForAction(action, undefined), {\n            isDrawerOpen: false,\n            isDrawerIdle: true,\n            drawerMovementDirection: null,\n            openId: genId(),\n            closeId: genId(),\n            toggleId: genId()\n          });\n        }\n\n        var isRouterTargeted = action.key == null || action.key === state.key;\n\n        if (isRouterTargeted) {\n          if (action.type === _DrawerActions.default.DRAWER_CLOSED) {\n            return _objectSpread({}, state, {\n              isDrawerOpen: false,\n              isDrawerIdle: true,\n              drawerMovementDirection: null\n            });\n          }\n\n          if (action.type === _DrawerActions.default.DRAWER_OPENED) {\n            return _objectSpread({}, state, {\n              isDrawerOpen: true,\n              isDrawerIdle: true,\n              drawerMovementDirection: null\n            });\n          }\n\n          if (action.type === _DrawerActions.default.CLOSE_DRAWER) {\n            return _objectSpread({}, state, {\n              closeId: genId()\n            });\n          }\n\n          if (action.type === _DrawerActions.default.MARK_DRAWER_SETTLING) {\n            return _objectSpread({}, state, {\n              isDrawerIdle: false,\n              drawerMovementDirection: action.willShow ? 'opening' : 'closing'\n            });\n          }\n\n          if (action.type === _DrawerActions.default.MARK_DRAWER_ACTIVE) {\n            return _objectSpread({}, state, {\n              isDrawerIdle: false,\n              drawerMovementDirection: null\n            });\n          }\n\n          if (action.type === _DrawerActions.default.MARK_DRAWER_IDLE) {\n            return _objectSpread({}, state, {\n              isDrawerIdle: true,\n              drawerMovementDirection: null\n            });\n          }\n\n          if (action.type === _core.NavigationActions.BACK && (state.isDrawerOpen || !state.isDrawerIdle) && state.drawerMovementDirection !== 'closing') {\n            return _objectSpread({}, state, {\n              closeId: genId()\n            });\n          }\n\n          if (action.type === _DrawerActions.default.OPEN_DRAWER) {\n            return _objectSpread({}, state, {\n              openId: genId()\n            });\n          }\n\n          if (action.type === _DrawerActions.default.TOGGLE_DRAWER) {\n            return _objectSpread({}, state, {\n              toggleId: genId()\n            });\n          }\n        }\n\n        var switchedState = switchRouter.getStateForAction(action, state);\n\n        if (switchedState === null) {\n          return null;\n        }\n\n        if (switchedState !== state) {\n          if (getActiveRouteKey(switchedState) !== getActiveRouteKey(state) && (state.isDrawerOpen || state.drawerMovementDirection !== 'closing')) {\n            return _objectSpread({}, switchedState, {\n              closeId: genId()\n            });\n          }\n\n          return switchedState;\n        }\n\n        return state;\n      }\n    });\n  };\n\n  exports.default = _default;\n});","map":[[7,0,1,0],[9,0,2,0],[17,0,4,0],[17,11,4,9,"withDefaultValue"],[17,27,4,0],[17,28,4,26,"obj"],[17,31,4,0],[17,33,4,31,"key"],[17,36,4,0],[17,38,4,36,"defaultValue"],[17,50,4,0],[17,52,4,50],[18,0,5,2],[18,8,5,6,"obj"],[18,11,5,9],[18,12,5,10,"hasOwnProperty"],[18,26,5,6],[18,27,5,25,"key"],[18,30,5,6],[18,35,5,33],[18,42,5,40,"obj"],[18,45,5,43],[18,46,5,44,"key"],[18,49,5,43],[18,50,5,33],[18,55,5,53],[18,66,5,2],[18,68,5,66],[19,0,6,4],[19,13,6,11,"obj"],[19,16,6,4],[20,0,7,3],[22,0,9,2,"obj"],[22,4,9,2,"obj"],[22,7,9,5],[22,8,9,6,"key"],[22,11,9,5],[22,12,9,2],[22,15,9,13,"defaultValue"],[22,27,9,2],[23,0,10,2],[23,11,10,9,"obj"],[23,14,10,2],[24,0,11,1],[26,0,13,0],[26,6,13,6,"getActiveRouteKey"],[26,23,13,23],[26,26,13,26],[26,35,13,6,"getActiveRouteKey"],[26,52,13,26],[26,53,13,26,"route"],[26,58,13,31],[26,60,13,35],[27,0,14,2],[27,8,14,6,"route"],[27,13,14,11],[27,14,14,12,"routes"],[27,20,14,6],[27,24,14,22,"route"],[27,29,14,27],[27,30,14,28,"routes"],[27,36,14,22],[27,37,14,35,"route"],[27,42,14,40],[27,43,14,41,"index"],[27,48,14,22],[27,49,14,2],[27,51,14,49],[28,0,15,4],[28,13,15,11,"getActiveRouteKey"],[28,30,15,28],[28,31,15,29,"route"],[28,36,15,34],[28,37,15,35,"routes"],[28,43,15,29],[28,44,15,42,"route"],[28,49,15,47],[28,50,15,48,"index"],[28,55,15,29],[28,56,15,28],[28,57,15,4],[29,0,16,3],[31,0,17,2],[31,11,17,9,"route"],[31,16,17,14],[31,17,17,15,"key"],[31,20,17,2],[32,0,18,1],[32,3,13,0],[34,17,20,16],[34,35,20,17,"routeConfigs"],[34,47,20,16],[34,49,20,47],[35,0,20,47],[35,8,20,31,"config"],[35,14,20,47],[35,85,20,40],[35,87,20,47],[36,0,21,2,"config"],[36,4,21,2,"config"],[36,10,21,8],[36,31,21,16,"config"],[36,37,21,8],[36,38,21,2],[37,0,22,2,"config"],[37,4,22,2,"config"],[37,10,22,8],[37,13,22,11,"withDefaultValue"],[37,29,22,27],[37,30,22,28,"config"],[37,36,22,27],[37,38,22,36],[37,51,22,27],[37,53,22,51,"config"],[37,59,22,57],[37,60,22,58,"unmountInactiveRoutes"],[37,81,22,51],[37,84,22,82],[37,88,22,51],[37,91,22,89],[37,92,22,90],[37,93,22,91,"config"],[37,99,22,97],[37,100,22,98,"resetOnBlur"],[37,111,22,27],[37,112,22,2],[38,0,23,2,"config"],[38,4,23,2,"config"],[38,10,23,8],[38,13,23,11,"withDefaultValue"],[38,29,23,27],[38,30,23,28,"config"],[38,36,23,27],[38,38,23,36],[38,52,23,27],[38,54,23,52],[38,68,23,27],[38,69,23,2],[39,0,25,2],[39,8,25,8,"switchRouter"],[39,20,25,20],[39,23,25,23],[39,47,25,36,"routeConfigs"],[39,59,25,23],[39,61,25,50,"config"],[39,67,25,23],[39,68,25,2],[41,0,27,2],[41,8,27,6,"__id"],[41,12,27,10],[41,15,27,13],[41,16,27,14],[41,17,27,2],[43,0,28,2],[43,8,28,8,"genId"],[43,13,28,13],[43,16,28,16],[43,25,28,8,"genId"],[43,30,28,16],[43,33,28,22],[44,0,29,4,"__id"],[44,6,29,4,"__id"],[44,10,29,8],[45,0,30,4],[45,13,30,11,"__id"],[45,17,30,4],[46,0,31,3],[46,5,28,2],[48,0,33,2],[48,29,34,7,"switchRouter"],[48,41,33,2],[49,0,36,4,"getActionCreators"],[49,6,36,4,"getActionCreators"],[49,23,33,2],[49,52,36,22,"route"],[49,57,33,2],[49,59,36,29,"navStateKey"],[49,70,33,2],[49,72,36,42],[50,0,37,6],[51,0,38,8,"openDrawer"],[51,10,38,8,"openDrawer"],[51,20,38,18],[51,22,38,20],[52,0,38,20],[52,19,38,26,"DrawerActions"],[52,42,38,40,"openDrawer"],[52,52,38,26],[52,53,38,51],[53,0,38,53,"key"],[53,14,38,53,"key"],[53,17,38,56],[53,19,38,58,"navStateKey"],[54,0,38,51],[54,13,38,26],[54,14,38,20],[55,0,38,20],[55,11,37,6],[56,0,39,8,"closeDrawer"],[56,10,39,8,"closeDrawer"],[56,21,39,19],[56,23,39,21],[57,0,39,21],[57,19,39,27,"DrawerActions"],[57,42,39,41,"closeDrawer"],[57,53,39,27],[57,54,39,53],[58,0,39,55,"key"],[58,14,39,55,"key"],[58,17,39,58],[58,19,39,60,"navStateKey"],[59,0,39,53],[59,13,39,27],[59,14,39,21],[60,0,39,21],[60,11,37,6],[61,0,40,8,"toggleDrawer"],[61,10,40,8,"toggleDrawer"],[61,22,40,20],[61,24,40,22],[62,0,40,22],[62,19,40,28,"DrawerActions"],[62,42,40,42,"toggleDrawer"],[62,54,40,28],[62,55,40,55],[63,0,40,57,"key"],[63,14,40,57,"key"],[63,17,40,60],[63,19,40,62,"navStateKey"],[64,0,40,55],[64,13,40,28],[64,14,40,22],[65,0,40,22],[66,0,37,6],[66,11,41,11,"switchRouter"],[66,23,41,23],[66,24,41,24,"getActionCreators"],[66,41,41,11],[66,42,41,42,"route"],[66,47,41,11],[66,49,41,49,"navStateKey"],[66,60,41,11],[66,61,37,6],[67,0,43,5],[67,7,33,2],[68,0,45,4,"getStateForAction"],[68,6,45,4,"getStateForAction"],[68,23,33,2],[68,52,45,22,"action"],[68,58,33,2],[68,60,45,30,"state"],[68,65,33,2],[68,67,45,37],[69,0,47,6],[69,12,47,10],[69,13,47,11,"state"],[69,18,47,6],[69,20,47,18],[70,0,48,8],[70,35,49,13,"switchRouter"],[70,47,49,25],[70,48,49,26,"getStateForAction"],[70,65,49,13],[70,66,49,44,"action"],[70,72,49,13],[70,74,49,52,"undefined"],[70,83,49,13],[70,84,48,8],[71,0,50,10,"isDrawerOpen"],[71,12,50,10,"isDrawerOpen"],[71,24,50,22],[71,26,50,24],[71,31,48,8],[72,0,51,10,"isDrawerIdle"],[72,12,51,10,"isDrawerIdle"],[72,24,51,22],[72,26,51,24],[72,30,48,8],[73,0,52,10,"drawerMovementDirection"],[73,12,52,10,"drawerMovementDirection"],[73,35,52,33],[73,37,52,35],[73,41,48,8],[74,0,53,10,"openId"],[74,12,53,10,"openId"],[74,18,53,16],[74,20,53,18,"genId"],[74,25,53,23],[74,27,48,8],[75,0,54,10,"closeId"],[75,12,54,10,"closeId"],[75,19,54,17],[75,21,54,19,"genId"],[75,26,54,24],[75,28,48,8],[76,0,55,10,"toggleId"],[76,12,55,10,"toggleId"],[76,20,55,18],[76,22,55,20,"genId"],[76,27,55,25],[77,0,48,8],[78,0,57,7],[80,0,59,6],[80,12,59,12,"isRouterTargeted"],[80,28,59,28],[80,31,59,31,"action"],[80,37,59,37],[80,38,59,38,"key"],[80,41,59,31],[80,45,59,45],[80,49,59,31],[80,53,59,53,"action"],[80,59,59,59],[80,60,59,60,"key"],[80,63,59,53],[80,68,59,68,"state"],[80,73,59,73],[80,74,59,74,"key"],[80,77,59,6],[82,0,61,6],[82,12,61,10,"isRouterTargeted"],[82,28,61,6],[82,30,61,28],[83,0,64,8],[83,14,64,12,"action"],[83,20,64,18],[83,21,64,19,"type"],[83,25,64,12],[83,30,64,28,"DrawerActions"],[83,53,64,42,"DRAWER_CLOSED"],[83,66,64,8],[83,68,64,57],[84,0,65,10],[84,37,66,15,"state"],[84,42,65,10],[85,0,67,12,"isDrawerOpen"],[85,14,67,12,"isDrawerOpen"],[85,26,67,24],[85,28,67,26],[85,33,65,10],[86,0,68,12,"isDrawerIdle"],[86,14,68,12,"isDrawerIdle"],[86,26,68,24],[86,28,68,26],[86,32,65,10],[87,0,69,12,"drawerMovementDirection"],[87,14,69,12,"drawerMovementDirection"],[87,37,69,35],[87,39,69,37],[88,0,65,10],[89,0,71,9],[91,0,73,8],[91,14,73,12,"action"],[91,20,73,18],[91,21,73,19,"type"],[91,25,73,12],[91,30,73,28,"DrawerActions"],[91,53,73,42,"DRAWER_OPENED"],[91,66,73,8],[91,68,73,57],[92,0,74,10],[92,37,75,15,"state"],[92,42,74,10],[93,0,76,12,"isDrawerOpen"],[93,14,76,12,"isDrawerOpen"],[93,26,76,24],[93,28,76,26],[93,32,74,10],[94,0,77,12,"isDrawerIdle"],[94,14,77,12,"isDrawerIdle"],[94,26,77,24],[94,28,77,26],[94,32,74,10],[95,0,78,12,"drawerMovementDirection"],[95,14,78,12,"drawerMovementDirection"],[95,37,78,35],[95,39,78,37],[96,0,74,10],[97,0,80,9],[99,0,82,8],[99,14,82,12,"action"],[99,20,82,18],[99,21,82,19,"type"],[99,25,82,12],[99,30,82,28,"DrawerActions"],[99,53,82,42,"CLOSE_DRAWER"],[99,65,82,8],[99,67,82,56],[100,0,83,10],[100,37,84,15,"state"],[100,42,83,10],[101,0,85,12,"closeId"],[101,14,85,12,"closeId"],[101,21,85,19],[101,23,85,21,"genId"],[101,28,85,26],[102,0,83,10],[103,0,87,9],[105,0,89,8],[105,14,89,12,"action"],[105,20,89,18],[105,21,89,19,"type"],[105,25,89,12],[105,30,89,28,"DrawerActions"],[105,53,89,42,"MARK_DRAWER_SETTLING"],[105,73,89,8],[105,75,89,64],[106,0,90,10],[106,37,91,15,"state"],[106,42,90,10],[107,0,92,12,"isDrawerIdle"],[107,14,92,12,"isDrawerIdle"],[107,26,92,24],[107,28,92,26],[107,33,90,10],[108,0,93,12,"drawerMovementDirection"],[108,14,93,12,"drawerMovementDirection"],[108,37,93,35],[108,39,93,37,"action"],[108,45,93,43],[108,46,93,44,"willShow"],[108,54,93,37],[108,57,93,55],[108,66,93,37],[108,69,93,67],[109,0,90,10],[110,0,95,9],[112,0,97,8],[112,14,97,12,"action"],[112,20,97,18],[112,21,97,19,"type"],[112,25,97,12],[112,30,97,28,"DrawerActions"],[112,53,97,42,"MARK_DRAWER_ACTIVE"],[112,71,97,8],[112,73,97,62],[113,0,98,10],[113,37,99,15,"state"],[113,42,98,10],[114,0,100,12,"isDrawerIdle"],[114,14,100,12,"isDrawerIdle"],[114,26,100,24],[114,28,100,26],[114,33,98,10],[115,0,101,12,"drawerMovementDirection"],[115,14,101,12,"drawerMovementDirection"],[115,37,101,35],[115,39,101,37],[116,0,98,10],[117,0,103,9],[119,0,105,8],[119,14,105,12,"action"],[119,20,105,18],[119,21,105,19,"type"],[119,25,105,12],[119,30,105,28,"DrawerActions"],[119,53,105,42,"MARK_DRAWER_IDLE"],[119,69,105,8],[119,71,105,60],[120,0,106,10],[120,37,107,15,"state"],[120,42,106,10],[121,0,108,12,"isDrawerIdle"],[121,14,108,12,"isDrawerIdle"],[121,26,108,24],[121,28,108,26],[121,32,106,10],[122,0,109,12,"drawerMovementDirection"],[122,14,109,12,"drawerMovementDirection"],[122,37,109,35],[122,39,109,37],[123,0,106,10],[124,0,111,9],[126,0,113,8],[126,14,113,12,"action"],[126,20,113,18],[126,21,113,19,"type"],[126,25,113,12],[126,30,113,28,"NavigationActions"],[126,54,113,46,"BACK"],[126,58,113,12],[126,63,113,55,"state"],[126,68,113,60],[126,69,113,61,"isDrawerOpen"],[126,81,113,55],[126,85,113,77],[126,86,113,78,"state"],[126,91,113,83],[126,92,113,84,"isDrawerIdle"],[126,104,113,12],[126,109,113,101,"state"],[126,114,113,106],[126,115,113,107,"drawerMovementDirection"],[126,138,113,101],[126,143,113,135],[126,152,113,8],[126,154,113,146],[127,0,114,10],[127,37,115,15,"state"],[127,42,114,10],[128,0,116,12,"closeId"],[128,14,116,12,"closeId"],[128,21,116,19],[128,23,116,21,"genId"],[128,28,116,26],[129,0,114,10],[130,0,118,9],[132,0,120,8],[132,14,120,12,"action"],[132,20,120,18],[132,21,120,19,"type"],[132,25,120,12],[132,30,120,28,"DrawerActions"],[132,53,120,42,"OPEN_DRAWER"],[132,64,120,8],[132,66,120,55],[133,0,121,10],[133,37,122,15,"state"],[133,42,121,10],[134,0,123,12,"openId"],[134,14,123,12,"openId"],[134,20,123,18],[134,22,123,20,"genId"],[134,27,123,25],[135,0,121,10],[136,0,125,9],[138,0,127,8],[138,14,127,12,"action"],[138,20,127,18],[138,21,127,19,"type"],[138,25,127,12],[138,30,127,28,"DrawerActions"],[138,53,127,42,"TOGGLE_DRAWER"],[138,66,127,8],[138,68,127,57],[139,0,128,10],[139,37,129,15,"state"],[139,42,128,10],[140,0,130,12,"toggleId"],[140,14,130,12,"toggleId"],[140,22,130,20],[140,24,130,22,"genId"],[140,29,130,27],[141,0,128,10],[142,0,132,9],[143,0,133,7],[145,0,136,6],[145,12,136,12,"switchedState"],[145,25,136,25],[145,28,136,28,"switchRouter"],[145,40,136,40],[145,41,136,41,"getStateForAction"],[145,58,136,28],[145,59,136,59,"action"],[145,65,136,28],[145,67,136,67,"state"],[145,72,136,28],[145,73,136,6],[147,0,138,6],[147,12,138,10,"switchedState"],[147,25,138,23],[147,30,138,28],[147,34,138,6],[147,36,138,34],[148,0,140,8],[148,17,140,15],[148,21,140,8],[149,0,141,7],[151,0,144,6],[151,12,144,10,"switchedState"],[151,25,144,23],[151,30,144,28,"state"],[151,35,144,6],[151,37,144,35],[152,0,146,8],[152,14,146,12,"getActiveRouteKey"],[152,31,146,29],[152,32,146,30,"switchedState"],[152,45,146,29],[152,46,146,12],[152,51,146,49,"getActiveRouteKey"],[152,68,146,66],[152,69,146,67,"state"],[152,74,146,66],[152,75,146,12],[152,80,146,78,"state"],[152,85,146,83],[152,86,146,84,"isDrawerOpen"],[152,98,146,78],[152,102,146,100,"state"],[152,107,146,105],[152,108,146,106,"drawerMovementDirection"],[152,131,146,100],[152,136,146,134],[152,145,146,12],[152,146,146,8],[152,148,146,146],[153,0,147,10],[153,37,148,15,"switchedState"],[153,50,147,10],[154,0,149,12,"closeId"],[154,14,149,12,"closeId"],[154,21,149,19],[154,23,149,21,"genId"],[154,28,149,26],[155,0,147,10],[156,0,151,9],[158,0,156,8],[158,17,156,15,"switchedState"],[158,30,156,8],[159,0,157,7],[161,0,159,6],[161,15,159,13,"state"],[161,20,159,6],[162,0,160,5],[163,0,33,2],[164,0,162,1],[164,3]]},"type":"js/module"}]}