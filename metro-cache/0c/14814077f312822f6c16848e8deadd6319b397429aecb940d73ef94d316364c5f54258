{"dependencies":[{"name":"../utils/invariant","data":{"isAsync":false}},{"name":"../utils/shallowEqual","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = ScenesReducer;\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"../utils/invariant\"));\n\n  var _shallowEqual = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"../utils/shallowEqual\"));\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  var SCENE_KEY_PREFIX = 'scene_';\n\n  function compareKey(one, two) {\n    var delta = one.length - two.length;\n\n    if (delta > 0) {\n      return 1;\n    }\n\n    if (delta < 0) {\n      return -1;\n    }\n\n    return one > two ? 1 : -1;\n  }\n\n  function compareScenes(one, two) {\n    if (one.index > two.index) {\n      return 1;\n    }\n\n    if (one.index < two.index) {\n      return -1;\n    }\n\n    return compareKey(one.key, two.key);\n  }\n\n  function areScenesShallowEqual(one, two) {\n    return one.key === two.key && one.index === two.index && one.isStale === two.isStale && one.isActive === two.isActive && areRoutesShallowEqual(one.route, two.route);\n  }\n\n  function areRoutesShallowEqual(one, two) {\n    if (!one || !two) {\n      return one === two;\n    }\n\n    if (one.key !== two.key) {\n      return false;\n    }\n\n    return (0, _shallowEqual.default)(one, two);\n  }\n\n  function ScenesReducer(scenes, nextState, prevState, descriptors) {\n    scenes.forEach(function (scene) {\n      var route = scene.route;\n\n      if (descriptors && descriptors[route.key]) {\n        scene.descriptor = descriptors[route.key];\n      }\n    });\n\n    if (prevState === nextState) {\n      return scenes;\n    }\n\n    var prevScenes = new Map();\n    var freshScenes = new Map();\n    var staleScenes = new Map();\n    scenes.forEach(function (scene) {\n      var key = scene.key;\n\n      if (scene.isStale) {\n        staleScenes.set(key, scene);\n      }\n\n      prevScenes.set(key, scene);\n    });\n    var nextKeys = new Set();\n    var nextRoutes = nextState.routes;\n\n    if (nextRoutes.length > nextState.index + 1) {\n      console.warn('StackRouter provided invalid state, index should always be the top route');\n      nextRoutes = nextState.routes.slice(0, nextState.index + 1);\n    }\n\n    nextRoutes.forEach(function (route, index) {\n      var key = SCENE_KEY_PREFIX + route.key;\n      var descriptor = descriptors && descriptors[route.key];\n      var scene = {\n        index: index,\n        isActive: false,\n        isStale: false,\n        key: key,\n        route: route,\n        descriptor: descriptor\n      };\n      (0, _invariant.default)(!nextKeys.has(key), \"navigation.state.routes[\" + index + \"].key \\\"\" + key + \"\\\" conflicts with \" + 'another route!');\n      nextKeys.add(key);\n\n      if (staleScenes.has(key)) {\n        staleScenes.delete(key);\n      }\n\n      freshScenes.set(key, scene);\n    });\n\n    if (prevState) {\n      var prevRoutes = prevState.routes;\n\n      if (prevRoutes.length > prevState.index + 1) {\n        console.warn('StackRouter provided invalid state, index should always be the top route');\n        prevRoutes = prevRoutes.slice(0, prevState.index + 1);\n      }\n\n      prevRoutes.forEach(function (route, index) {\n        var key = SCENE_KEY_PREFIX + route.key;\n\n        if (freshScenes.has(key)) {\n          return;\n        }\n\n        var lastScene = scenes.find(function (scene) {\n          return scene.route.key === route.key;\n        });\n        var descriptor = lastScene ? lastScene.descriptor : descriptors[route.key];\n\n        if (descriptor) {\n          staleScenes.set(key, {\n            index: index,\n            isActive: false,\n            isStale: true,\n            key: key,\n            route: route,\n            descriptor: descriptor\n          });\n        }\n      });\n    }\n\n    var nextScenes = [];\n\n    var mergeScene = function mergeScene(nextScene) {\n      var key = nextScene.key;\n      var prevScene = prevScenes.has(key) ? prevScenes.get(key) : null;\n\n      if (prevScene && areScenesShallowEqual(prevScene, nextScene)) {\n        nextScenes.push(prevScene);\n      } else {\n        nextScenes.push(nextScene);\n      }\n    };\n\n    staleScenes.forEach(mergeScene);\n    freshScenes.forEach(mergeScene);\n    nextScenes.sort(compareScenes);\n    var activeScenesCount = 0;\n    nextScenes.forEach(function (scene, ii) {\n      var isActive = !scene.isStale && scene.index === nextState.index;\n\n      if (isActive !== scene.isActive) {\n        nextScenes[ii] = _objectSpread({}, scene, {\n          isActive: isActive\n        });\n      }\n\n      if (isActive) {\n        activeScenesCount++;\n      }\n    });\n    (0, _invariant.default)(activeScenesCount === 1, 'there should always be only one scene active, not %s.', activeScenesCount);\n\n    if (nextScenes.length !== scenes.length) {\n      return nextScenes;\n    }\n\n    if (nextScenes.some(function (scene, index) {\n      return !areScenesShallowEqual(scenes[index], scene);\n    })) {\n      return nextScenes;\n    }\n\n    return scenes;\n  }\n});","map":[[7,0,1,0],[9,0,2,0],[17,0,4,0],[17,6,4,6,"SCENE_KEY_PREFIX"],[17,22,4,22],[17,25,4,25],[17,33,4,0],[19,0,9,0],[19,11,9,9,"compareKey"],[19,21,9,0],[19,22,9,20,"one"],[19,25,9,0],[19,27,9,25,"two"],[19,30,9,0],[19,32,9,30],[20,0,10,2],[20,8,10,8,"delta"],[20,13,10,13],[20,16,10,16,"one"],[20,19,10,19],[20,20,10,20,"length"],[20,26,10,16],[20,29,10,29,"two"],[20,32,10,32],[20,33,10,33,"length"],[20,39,10,2],[22,0,11,2],[22,8,11,6,"delta"],[22,13,11,11],[22,16,11,14],[22,17,11,2],[22,19,11,17],[23,0,12,4],[23,13,12,11],[23,14,12,4],[24,0,13,3],[26,0,14,2],[26,8,14,6,"delta"],[26,13,14,11],[26,16,14,14],[26,17,14,2],[26,19,14,17],[27,0,15,4],[27,13,15,11],[27,14,15,12],[27,15,15,4],[28,0,16,3],[30,0,17,2],[30,11,17,9,"one"],[30,14,17,12],[30,17,17,15,"two"],[30,20,17,9],[30,23,17,21],[30,24,17,9],[30,27,17,25],[30,28,17,26],[30,29,17,2],[31,0,18,1],[33,0,23,0],[33,11,23,9,"compareScenes"],[33,24,23,0],[33,25,23,23,"one"],[33,28,23,0],[33,30,23,28,"two"],[33,33,23,0],[33,35,23,33],[34,0,24,2],[34,8,24,6,"one"],[34,11,24,9],[34,12,24,10,"index"],[34,17,24,6],[34,20,24,18,"two"],[34,23,24,21],[34,24,24,22,"index"],[34,29,24,2],[34,31,24,29],[35,0,25,4],[35,13,25,11],[35,14,25,4],[36,0,26,3],[38,0,27,2],[38,8,27,6,"one"],[38,11,27,9],[38,12,27,10,"index"],[38,17,27,6],[38,20,27,18,"two"],[38,23,27,21],[38,24,27,22,"index"],[38,29,27,2],[38,31,27,29],[39,0,28,4],[39,13,28,11],[39,14,28,12],[39,15,28,4],[40,0,29,3],[42,0,31,2],[42,11,31,9,"compareKey"],[42,21,31,19],[42,22,31,20,"one"],[42,25,31,23],[42,26,31,24,"key"],[42,29,31,19],[42,31,31,29,"two"],[42,34,31,32],[42,35,31,33,"key"],[42,38,31,19],[42,39,31,2],[43,0,32,1],[45,0,37,0],[45,11,37,9,"areScenesShallowEqual"],[45,32,37,0],[45,33,37,31,"one"],[45,36,37,0],[45,38,37,36,"two"],[45,41,37,0],[45,43,37,41],[46,0,38,2],[46,11,39,4,"one"],[46,14,39,7],[46,15,39,8,"key"],[46,18,39,4],[46,23,39,16,"two"],[46,26,39,19],[46,27,39,20,"key"],[46,30,39,4],[46,34,40,4,"one"],[46,37,40,7],[46,38,40,8,"index"],[46,43,40,4],[46,48,40,18,"two"],[46,51,40,21],[46,52,40,22,"index"],[46,57,39,4],[46,61,41,4,"one"],[46,64,41,7],[46,65,41,8,"isStale"],[46,72,41,4],[46,77,41,20,"two"],[46,80,41,23],[46,81,41,24,"isStale"],[46,88,39,4],[46,92,42,4,"one"],[46,95,42,7],[46,96,42,8,"isActive"],[46,104,42,4],[46,109,42,21,"two"],[46,112,42,24],[46,113,42,25,"isActive"],[46,121,39,4],[46,125,43,4,"areRoutesShallowEqual"],[46,146,43,25],[46,147,43,26,"one"],[46,150,43,29],[46,151,43,30,"route"],[46,156,43,25],[46,158,43,37,"two"],[46,161,43,40],[46,162,43,41,"route"],[46,167,43,25],[46,168,38,2],[47,0,45,1],[49,0,50,0],[49,11,50,9,"areRoutesShallowEqual"],[49,32,50,0],[49,33,50,31,"one"],[49,36,50,0],[49,38,50,36,"two"],[49,41,50,0],[49,43,50,41],[50,0,51,2],[50,8,51,6],[50,9,51,7,"one"],[50,12,51,6],[50,16,51,14],[50,17,51,15,"two"],[50,20,51,2],[50,22,51,20],[51,0,52,4],[51,13,52,11,"one"],[51,16,52,14],[51,21,52,19,"two"],[51,24,52,4],[52,0,53,3],[54,0,55,2],[54,8,55,6,"one"],[54,11,55,9],[54,12,55,10,"key"],[54,15,55,6],[54,20,55,18,"two"],[54,23,55,21],[54,24,55,22,"key"],[54,27,55,2],[54,29,55,27],[55,0,56,4],[55,13,56,11],[55,18,56,4],[56,0,57,3],[58,0,59,2],[58,11,59,9],[58,38,59,22,"one"],[58,41,59,9],[58,43,59,27,"two"],[58,46,59,9],[58,47,59,2],[59,0,60,1],[61,0,62,15],[61,11,62,24,"ScenesReducer"],[61,24,62,15],[61,25,63,2,"scenes"],[61,31,62,15],[61,33,64,2,"nextState"],[61,42,62,15],[61,44,65,2,"prevState"],[61,53,62,15],[61,55,66,2,"descriptors"],[61,66,62,15],[61,68,67,2],[62,0,71,2,"scenes"],[62,4,71,2,"scenes"],[62,10,71,8],[62,11,71,9,"forEach"],[62,18,71,2],[62,19,71,17],[62,29,71,17,"scene"],[62,34,71,22],[62,36,71,26],[63,0,71,26],[63,10,72,12,"route"],[63,15,71,26],[63,18,72,22,"scene"],[63,23,71,26],[63,24,72,12,"route"],[63,29,71,26],[65,0,73,4],[65,10,73,8,"descriptors"],[65,21,73,19],[65,25,73,23,"descriptors"],[65,36,73,34],[65,37,73,35,"route"],[65,42,73,40],[65,43,73,41,"key"],[65,46,73,34],[65,47,73,4],[65,49,73,47],[66,0,74,6,"scene"],[66,8,74,6,"scene"],[66,13,74,11],[66,14,74,12,"descriptor"],[66,24,74,6],[66,27,74,25,"descriptors"],[66,38,74,36],[66,39,74,37,"route"],[66,44,74,42],[66,45,74,43,"key"],[66,48,74,36],[66,49,74,6],[67,0,75,5],[68,0,76,3],[68,5,71,2],[70,0,79,2],[70,8,79,6,"prevState"],[70,17,79,15],[70,22,79,20,"nextState"],[70,31,79,2],[70,33,79,31],[71,0,80,4],[71,13,80,11,"scenes"],[71,19,80,4],[72,0,81,3],[74,0,83,2],[74,8,83,8,"prevScenes"],[74,18,83,18],[74,21,83,21],[74,25,83,25,"Map"],[74,28,83,21],[74,30,83,2],[75,0,84,2],[75,8,84,8,"freshScenes"],[75,19,84,19],[75,22,84,22],[75,26,84,26,"Map"],[75,29,84,22],[75,31,84,2],[76,0,85,2],[76,8,85,8,"staleScenes"],[76,19,85,19],[76,22,85,22],[76,26,85,26,"Map"],[76,29,85,22],[76,31,85,2],[77,0,88,2,"scenes"],[77,4,88,2,"scenes"],[77,10,88,8],[77,11,88,9,"forEach"],[77,18,88,2],[77,19,88,17],[77,29,88,17,"scene"],[77,34,88,22],[77,36,88,26],[78,0,88,26],[78,10,89,12,"key"],[78,13,88,26],[78,16,89,20,"scene"],[78,21,88,26],[78,22,89,12,"key"],[78,25,88,26],[80,0,90,4],[80,10,90,8,"scene"],[80,15,90,13],[80,16,90,14,"isStale"],[80,23,90,4],[80,25,90,23],[81,0,91,6,"staleScenes"],[81,8,91,6,"staleScenes"],[81,19,91,17],[81,20,91,18,"set"],[81,23,91,6],[81,24,91,22,"key"],[81,27,91,6],[81,29,91,27,"scene"],[81,34,91,6],[82,0,92,5],[84,0,93,4,"prevScenes"],[84,6,93,4,"prevScenes"],[84,16,93,14],[84,17,93,15,"set"],[84,20,93,4],[84,21,93,19,"key"],[84,24,93,4],[84,26,93,24,"scene"],[84,31,93,4],[85,0,94,3],[85,5,88,2],[86,0,96,2],[86,8,96,8,"nextKeys"],[86,16,96,16],[86,19,96,19],[86,23,96,23,"Set"],[86,26,96,19],[86,28,96,2],[87,0,97,2],[87,8,97,6,"nextRoutes"],[87,18,97,16],[87,21,97,19,"nextState"],[87,30,97,28],[87,31,97,29,"routes"],[87,37,97,2],[89,0,98,2],[89,8,98,6,"nextRoutes"],[89,18,98,16],[89,19,98,17,"length"],[89,25,98,6],[89,28,98,26,"nextState"],[89,37,98,35],[89,38,98,36,"index"],[89,43,98,26],[89,46,98,44],[89,47,98,2],[89,49,98,47],[90,0,99,4,"console"],[90,6,99,4,"console"],[90,13,99,11],[90,14,99,12,"warn"],[90,18,99,4],[90,19,100,6],[90,93,99,4],[91,0,102,4,"nextRoutes"],[91,6,102,4,"nextRoutes"],[91,16,102,14],[91,19,102,17,"nextState"],[91,28,102,26],[91,29,102,27,"routes"],[91,35,102,17],[91,36,102,34,"slice"],[91,41,102,17],[91,42,102,40],[91,43,102,17],[91,45,102,43,"nextState"],[91,54,102,52],[91,55,102,53,"index"],[91,60,102,43],[91,63,102,61],[91,64,102,17],[91,65,102,4],[92,0,103,3],[94,0,105,2,"nextRoutes"],[94,4,105,2,"nextRoutes"],[94,14,105,12],[94,15,105,13,"forEach"],[94,22,105,2],[94,23,105,21],[94,33,105,22,"route"],[94,38,105,21],[94,40,105,29,"index"],[94,45,105,21],[94,47,105,39],[95,0,106,4],[95,10,106,10,"key"],[95,13,106,13],[95,16,106,16,"SCENE_KEY_PREFIX"],[95,32,106,32],[95,35,106,35,"route"],[95,40,106,40],[95,41,106,41,"key"],[95,44,106,4],[96,0,108,4],[96,10,108,8,"descriptor"],[96,20,108,18],[96,23,108,21,"descriptors"],[96,34,108,32],[96,38,108,36,"descriptors"],[96,49,108,47],[96,50,108,48,"route"],[96,55,108,53],[96,56,108,54,"key"],[96,59,108,47],[96,60,108,4],[97,0,110,4],[97,10,110,10,"scene"],[97,15,110,15],[97,18,110,18],[98,0,111,6,"index"],[98,8,111,6,"index"],[98,13,111,11],[98,15,111,6,"index"],[98,20,110,18],[99,0,112,6,"isActive"],[99,8,112,6,"isActive"],[99,16,112,14],[99,18,112,16],[99,23,110,18],[100,0,113,6,"isStale"],[100,8,113,6,"isStale"],[100,15,113,13],[100,17,113,15],[100,22,110,18],[101,0,114,6,"key"],[101,8,114,6,"key"],[101,11,114,9],[101,13,114,6,"key"],[101,16,110,18],[102,0,115,6,"route"],[102,8,115,6,"route"],[102,13,115,11],[102,15,115,6,"route"],[102,20,110,18],[103,0,116,6,"descriptor"],[103,8,116,6,"descriptor"],[103,18,116,16],[103,20,116,6,"descriptor"],[104,0,110,18],[104,7,110,4],[105,0,118,4],[105,30,119,6],[105,31,119,7,"nextKeys"],[105,39,119,15],[105,40,119,16,"has"],[105,43,119,7],[105,44,119,20,"key"],[105,47,119,7],[105,48,118,4],[105,50,120,6],[105,79,120,33,"index"],[105,84,120,6],[105,100,120,48,"key"],[105,103,120,6],[105,129,121,8],[105,145,118,4],[106,0,123,4,"nextKeys"],[106,6,123,4,"nextKeys"],[106,14,123,12],[106,15,123,13,"add"],[106,18,123,4],[106,19,123,17,"key"],[106,22,123,4],[108,0,125,4],[108,10,125,8,"staleScenes"],[108,21,125,19],[108,22,125,20,"has"],[108,25,125,8],[108,26,125,24,"key"],[108,29,125,8],[108,30,125,4],[108,32,125,30],[109,0,128,6,"staleScenes"],[109,8,128,6,"staleScenes"],[109,19,128,17],[109,20,128,18,"delete"],[109,26,128,6],[109,27,128,25,"key"],[109,30,128,6],[110,0,129,5],[112,0,130,4,"freshScenes"],[112,6,130,4,"freshScenes"],[112,17,130,15],[112,18,130,16,"set"],[112,21,130,4],[112,22,130,20,"key"],[112,25,130,4],[112,27,130,25,"scene"],[112,32,130,4],[113,0,131,3],[113,5,105,2],[115,0,133,2],[115,8,133,6,"prevState"],[115,17,133,2],[115,19,133,17],[116,0,134,4],[116,10,134,8,"prevRoutes"],[116,20,134,18],[116,23,134,21,"prevState"],[116,32,134,30],[116,33,134,31,"routes"],[116,39,134,4],[118,0,135,4],[118,10,135,8,"prevRoutes"],[118,20,135,18],[118,21,135,19,"length"],[118,27,135,8],[118,30,135,28,"prevState"],[118,39,135,37],[118,40,135,38,"index"],[118,45,135,28],[118,48,135,46],[118,49,135,4],[118,51,135,49],[119,0,136,6,"console"],[119,8,136,6,"console"],[119,15,136,13],[119,16,136,14,"warn"],[119,20,136,6],[119,21,137,8],[119,95,136,6],[120,0,139,6,"prevRoutes"],[120,8,139,6,"prevRoutes"],[120,18,139,16],[120,21,139,19,"prevRoutes"],[120,31,139,29],[120,32,139,30,"slice"],[120,37,139,19],[120,38,139,36],[120,39,139,19],[120,41,139,39,"prevState"],[120,50,139,48],[120,51,139,49,"index"],[120,56,139,39],[120,59,139,57],[120,60,139,19],[120,61,139,6],[121,0,140,5],[123,0,142,4,"prevRoutes"],[123,6,142,4,"prevRoutes"],[123,16,142,14],[123,17,142,15,"forEach"],[123,24,142,4],[123,25,142,23],[123,35,142,24,"route"],[123,40,142,23],[123,42,142,31,"index"],[123,47,142,23],[123,49,142,41],[124,0,143,6],[124,12,143,12,"key"],[124,15,143,15],[124,18,143,18,"SCENE_KEY_PREFIX"],[124,34,143,34],[124,37,143,37,"route"],[124,42,143,42],[124,43,143,43,"key"],[124,46,143,6],[126,0,144,6],[126,12,144,10,"freshScenes"],[126,23,144,21],[126,24,144,22,"has"],[126,27,144,10],[126,28,144,26,"key"],[126,31,144,10],[126,32,144,6],[126,34,144,32],[127,0,145,8],[128,0,146,7],[130,0,147,6],[130,12,147,12,"lastScene"],[130,21,147,21],[130,24,147,24,"scenes"],[130,30,147,30],[130,31,147,31,"find"],[130,35,147,24],[130,36,147,36],[130,46,147,36,"scene"],[130,51,147,41],[131,0,147,41],[131,17,147,45,"scene"],[131,22,147,50],[131,23,147,51,"route"],[131,28,147,45],[131,29,147,57,"key"],[131,32,147,45],[131,37,147,65,"route"],[131,42,147,70],[131,43,147,71,"key"],[131,46,147,41],[132,0,147,41],[132,9,147,24],[132,10,147,6],[133,0,154,6],[133,12,154,12,"descriptor"],[133,22,154,22],[133,25,154,25,"lastScene"],[133,34,154,34],[133,37,155,10,"lastScene"],[133,46,155,19],[133,47,155,20,"descriptor"],[133,57,154,34],[133,60,156,10,"descriptors"],[133,71,156,21],[133,72,156,22,"route"],[133,77,156,27],[133,78,156,28,"key"],[133,81,156,21],[133,82,154,6],[135,0,158,6],[135,12,158,10,"descriptor"],[135,22,158,6],[135,24,158,22],[136,0,159,8,"staleScenes"],[136,10,159,8,"staleScenes"],[136,21,159,19],[136,22,159,20,"set"],[136,25,159,8],[136,26,159,24,"key"],[136,29,159,8],[136,31,159,29],[137,0,160,10,"index"],[137,12,160,10,"index"],[137,17,160,15],[137,19,160,10,"index"],[137,24,159,29],[138,0,161,10,"isActive"],[138,12,161,10,"isActive"],[138,20,161,18],[138,22,161,20],[138,27,159,29],[139,0,162,10,"isStale"],[139,12,162,10,"isStale"],[139,19,162,17],[139,21,162,19],[139,25,159,29],[140,0,163,10,"key"],[140,12,163,10,"key"],[140,15,163,13],[140,17,163,10,"key"],[140,20,159,29],[141,0,164,10,"route"],[141,12,164,10,"route"],[141,17,164,15],[141,19,164,10,"route"],[141,24,159,29],[142,0,165,10,"descriptor"],[142,12,165,10,"descriptor"],[142,22,165,20],[142,24,165,10,"descriptor"],[143,0,159,29],[143,11,159,8],[144,0,167,7],[145,0,168,5],[145,7,142,4],[146,0,169,3],[148,0,171,2],[148,8,171,8,"nextScenes"],[148,18,171,18],[148,21,171,21],[148,23,171,2],[150,0,173,2],[150,8,173,8,"mergeScene"],[150,18,173,18],[150,21,173,21],[150,30,173,8,"mergeScene"],[150,40,173,21],[150,41,173,21,"nextScene"],[150,50,173,30],[150,52,173,34],[151,0,173,34],[151,10,174,12,"key"],[151,13,173,34],[151,16,174,20,"nextScene"],[151,25,173,34],[151,26,174,12,"key"],[151,29,173,34],[152,0,175,4],[152,10,175,10,"prevScene"],[152,19,175,19],[152,22,175,22,"prevScenes"],[152,32,175,32],[152,33,175,33,"has"],[152,36,175,22],[152,37,175,37,"key"],[152,40,175,22],[152,44,175,44,"prevScenes"],[152,54,175,54],[152,55,175,55,"get"],[152,58,175,44],[152,59,175,59,"key"],[152,62,175,44],[152,63,175,22],[152,66,175,66],[152,70,175,4],[154,0,176,4],[154,10,176,8,"prevScene"],[154,19,176,17],[154,23,176,21,"areScenesShallowEqual"],[154,44,176,42],[154,45,176,43,"prevScene"],[154,54,176,42],[154,56,176,54,"nextScene"],[154,65,176,42],[154,66,176,4],[154,68,176,66],[155,0,179,6,"nextScenes"],[155,8,179,6,"nextScenes"],[155,18,179,16],[155,19,179,17,"push"],[155,23,179,6],[155,24,179,22,"prevScene"],[155,33,179,6],[156,0,180,5],[156,7,176,4],[156,13,180,11],[157,0,181,6,"nextScenes"],[157,8,181,6,"nextScenes"],[157,18,181,16],[157,19,181,17,"push"],[157,23,181,6],[157,24,181,22,"nextScene"],[157,33,181,6],[158,0,182,5],[159,0,183,3],[159,5,173,2],[161,0,185,2,"staleScenes"],[161,4,185,2,"staleScenes"],[161,15,185,13],[161,16,185,14,"forEach"],[161,23,185,2],[161,24,185,22,"mergeScene"],[161,34,185,2],[162,0,186,2,"freshScenes"],[162,4,186,2,"freshScenes"],[162,15,186,13],[162,16,186,14,"forEach"],[162,23,186,2],[162,24,186,22,"mergeScene"],[162,34,186,2],[163,0,188,2,"nextScenes"],[163,4,188,2,"nextScenes"],[163,14,188,12],[163,15,188,13,"sort"],[163,19,188,2],[163,20,188,18,"compareScenes"],[163,33,188,2],[164,0,190,2],[164,8,190,6,"activeScenesCount"],[164,25,190,23],[164,28,190,26],[164,29,190,2],[165,0,191,2,"nextScenes"],[165,4,191,2,"nextScenes"],[165,14,191,12],[165,15,191,13,"forEach"],[165,22,191,2],[165,23,191,21],[165,33,191,22,"scene"],[165,38,191,21],[165,40,191,29,"ii"],[165,42,191,21],[165,44,191,36],[166,0,192,4],[166,10,192,10,"isActive"],[166,18,192,18],[166,21,192,21],[166,22,192,22,"scene"],[166,27,192,27],[166,28,192,28,"isStale"],[166,35,192,21],[166,39,192,39,"scene"],[166,44,192,44],[166,45,192,45,"index"],[166,50,192,39],[166,55,192,55,"nextState"],[166,64,192,64],[166,65,192,65,"index"],[166,70,192,4],[168,0,193,4],[168,10,193,8,"isActive"],[168,18,193,16],[168,23,193,21,"scene"],[168,28,193,26],[168,29,193,27,"isActive"],[168,37,193,4],[168,39,193,37],[169,0,194,6,"nextScenes"],[169,8,194,6,"nextScenes"],[169,18,194,16],[169,19,194,17,"ii"],[169,21,194,16],[169,22,194,6],[169,43,195,11,"scene"],[169,48,194,6],[170,0,196,8,"isActive"],[170,10,196,8,"isActive"],[170,18,196,16],[170,20,196,8,"isActive"],[171,0,194,6],[172,0,198,5],[174,0,199,4],[174,10,199,8,"isActive"],[174,18,199,4],[174,20,199,18],[175,0,200,6,"activeScenesCount"],[175,8,200,6,"activeScenesCount"],[175,25,200,23],[176,0,201,5],[177,0,202,3],[177,5,191,2],[178,0,204,2],[178,28,205,4,"activeScenesCount"],[178,45,205,21],[178,50,205,26],[178,51,204,2],[178,53,206,4],[178,108,204,2],[178,110,207,4,"activeScenesCount"],[178,127,204,2],[180,0,210,2],[180,8,210,6,"nextScenes"],[180,18,210,16],[180,19,210,17,"length"],[180,25,210,6],[180,30,210,28,"scenes"],[180,36,210,34],[180,37,210,35,"length"],[180,43,210,2],[180,45,210,43],[181,0,211,4],[181,13,211,11,"nextScenes"],[181,23,211,4],[182,0,212,3],[184,0,214,2],[184,8,215,4,"nextScenes"],[184,18,215,14],[184,19,215,15,"some"],[184,23,215,4],[184,24,216,6],[184,34,216,7,"scene"],[184,39,216,6],[184,41,216,14,"index"],[184,46,216,6],[185,0,216,6],[185,13,216,24],[185,14,216,25,"areScenesShallowEqual"],[185,35,216,46],[185,36,216,47,"scenes"],[185,42,216,53],[185,43,216,54,"index"],[185,48,216,53],[185,49,216,46],[185,51,216,62,"scene"],[185,56,216,46],[185,57,216,6],[186,0,216,6],[186,5,215,4],[186,6,214,2],[186,8,218,4],[187,0,219,4],[187,13,219,11,"nextScenes"],[187,23,219,4],[188,0,220,3],[190,0,223,2],[190,11,223,9,"scenes"],[190,17,223,2],[191,0,224,1]]},"type":"js/module"}]}