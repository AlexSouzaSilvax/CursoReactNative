{"dependencies":[{"name":"react-native","data":{"isAsync":false}},{"name":"expo-core","data":{"isAsync":false}},{"name":"uuid-js","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.shareContactAsync = shareContactAsync;\n  exports.getContactsAsync = getContactsAsync;\n  exports.getPagedContactsAsync = getPagedContactsAsync;\n  exports.getContactByIdAsync = getContactByIdAsync;\n  exports.addContactAsync = addContactAsync;\n  exports.updateContactAsync = updateContactAsync;\n  exports.removeContactAsync = removeContactAsync;\n  exports.writeContactToFileAsync = writeContactToFileAsync;\n  exports.presentFormAsync = presentFormAsync;\n  exports.addExistingGroupToContainerAsync = addExistingGroupToContainerAsync;\n  exports.createGroupAsync = createGroupAsync;\n  exports.updateGroupNameAsync = updateGroupNameAsync;\n  exports.removeGroupAsync = removeGroupAsync;\n  exports.addExistingContactToGroupAsync = addExistingContactToGroupAsync;\n  exports.removeContactFromGroupAsync = removeContactFromGroupAsync;\n  exports.getGroupsAsync = getGroupsAsync;\n  exports.getDefaultContainerIdAsync = getDefaultContainerIdAsync;\n  exports.getContainersAsync = getContainersAsync;\n  exports.ContactTypes = exports.SortTypes = exports.ContainerTypes = exports.CalendarFormats = exports.Fields = exports.RELATIONSHIPS = exports.DATES = exports.URLS = exports.IM_ADDRESSES = exports.SOCIAL_PROFILES = exports.PHONETIC_LAST_NAME = exports.PHONETIC_MIDDLE_NAME = exports.PHONETIC_FIRST_NAME = exports.NAME_SUFFIX = exports.NAME_PREFIX = exports.NON_GREGORIAN_BIRTHDAY = exports.BIRTHDAY = exports.NOTE = exports.RAW_IMAGE = exports.IMAGE = exports.ADDRESSES = exports.EMAILS = exports.PHONE_NUMBERS = void 0;\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[0], \"react-native\");\n\n  var _expoCore = _$$_REQUIRE(_dependencyMap[1], \"expo-core\");\n\n  var _uuidJs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"uuid-js\"));\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\n  function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n  var ExpoContacts = _expoCore.NativeModulesProxy.ExpoContacts;\n  var isIos = _expoCore.Platform.OS === 'ios';\n\n  function shareContactAsync(contactId, message) {\n    var shareOptions,\n        url,\n        _args = arguments;\n    return regeneratorRuntime.async(function shareContactAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            shareOptions = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n\n            if (!isIos) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 4;\n            return regeneratorRuntime.awrap(writeContactToFileAsync({\n              id: contactId\n            }));\n\n          case 4:\n            url = _context.sent;\n\n            _reactNative.Share.share({\n              url: url,\n              message: message\n            }, shareOptions);\n\n            _context.next = 9;\n            break;\n\n          case 8:\n            return _context.abrupt(\"return\", ExpoContacts.shareContactAsync(contactId, message));\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function getContactsAsync() {\n    var contactQuery = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return ExpoContacts.getContactsAsync(contactQuery);\n  }\n\n  function getPagedContactsAsync() {\n    var contactQuery = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var pageSize = contactQuery.pageSize,\n        nOptions = _objectWithoutProperties(contactQuery, [\"pageSize\"]);\n\n    if (pageSize && pageSize <= 0) {\n      throw new Error('Error: Contacts.getPagedContactsAsync: `pageSize` must be greater than 0');\n    }\n\n    return getContactsAsync(_objectSpread({}, nOptions, {\n      pageSize: pageSize\n    }));\n  }\n\n  function getContactByIdAsync(id, fields) {\n    var results;\n    return regeneratorRuntime.async(function getContactByIdAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(id == null)) {\n              _context2.next = 4;\n              break;\n            }\n\n            throw new Error('Error: Contacts.getContactByIdAsync: Please pass an ID as a parameter');\n\n          case 4:\n            _context2.next = 6;\n            return regeneratorRuntime.awrap(ExpoContacts.getContactsAsync({\n              pageSize: 1,\n              pageOffset: 0,\n              fields: fields,\n              id: id\n            }));\n\n          case 6:\n            results = _context2.sent;\n\n            if (!(results && results.data && results.data.length > 0)) {\n              _context2.next = 9;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", results.data[0]);\n\n          case 9:\n            return _context2.abrupt(\"return\", null);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function addContactAsync(contact, containerId) {\n    return ExpoContacts.addContactAsync(contact, containerId);\n  }\n\n  function updateContactAsync(contact) {\n    return ExpoContacts.updateContactAsync(contact);\n  }\n\n  function removeContactAsync(contactId) {\n    return ExpoContacts.removeContactAsync(contactId);\n  }\n\n  function writeContactToFileAsync() {\n    var contactQuery = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return ExpoContacts.writeContactToFileAsync(contactQuery);\n  }\n\n  function presentFormAsync(contactId, contact) {\n    var formOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (isIos) {\n      var adjustedOptions = formOptions;\n\n      if (contactId) {\n        if (contact) {\n          contact = null;\n          console.log('Expo.Contacts.presentFormAsync: You should define either a `contact` or a `contactId` but not both.');\n        }\n\n        if (adjustedOptions.isNew !== undefined) {\n          console.log('Expo.Contacts.presentFormAsync: formOptions.isNew is not supported with `contactId`');\n        }\n      }\n\n      return ExpoContacts.presentFormAsync(contactId, contact, adjustedOptions);\n    } else {\n      return ExpoContacts.presentFormAsync(contactId, contact, formOptions);\n    }\n  }\n\n  function addExistingGroupToContainerAsync(groupId, containerId) {\n    if (isIos) {\n      return ExpoContacts.addExistingGroupToContainerAsync(groupId, containerId);\n    } else {\n      throw new Error('Error: Contacts.addExistingGroupToContainerAsync: iOS Only');\n    }\n  }\n\n  function createGroupAsync(name, containerId) {\n    return regeneratorRuntime.async(function createGroupAsync$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!isIos) {\n              _context3.next = 9;\n              break;\n            }\n\n            name = name || _uuidJs.default.create().toString();\n\n            if (containerId) {\n              _context3.next = 6;\n              break;\n            }\n\n            _context3.next = 5;\n            return regeneratorRuntime.awrap(getDefaultContainerIdAsync());\n\n          case 5:\n            containerId = _context3.sent;\n\n          case 6:\n            return _context3.abrupt(\"return\", ExpoContacts.createGroupAsync(name, containerId));\n\n          case 9:\n            throw new Error('Error: Contacts.createGroupAsync: iOS Only');\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function updateGroupNameAsync(groupName, groupId) {\n    if (isIos) {\n      return ExpoContacts.updateGroupNameAsync(groupName, groupId);\n    } else {\n      throw new Error('Error: Contacts.updateGroupNameAsync: iOS Only');\n    }\n  }\n\n  function removeGroupAsync(groupId) {\n    if (isIos) {\n      return ExpoContacts.removeGroupAsync(groupId);\n    } else {\n      throw new Error('Error: Contacts.removeGroupAsync: iOS Only');\n    }\n  }\n\n  function addExistingContactToGroupAsync(contactId, groupId) {\n    if (isIos) {\n      return ExpoContacts.addExistingContactToGroupAsync(contactId, groupId);\n    } else {\n      throw new Error('Error: Contacts.addExistingContactToGroupAsync: iOS Only');\n    }\n  }\n\n  function removeContactFromGroupAsync(contactId, groupId) {\n    if (isIos) {\n      return ExpoContacts.removeContactFromGroupAsync(contactId, groupId);\n    } else {\n      throw new Error('Error: Contacts.removeContactFromGroupAsync: iOS Only');\n    }\n  }\n\n  function getGroupsAsync(groupQuery) {\n    if (isIos) {\n      return ExpoContacts.getGroupsAsync(groupQuery);\n    } else {\n      throw new Error('Error: Contacts.getGroupsAsync: iOS Only');\n    }\n  }\n\n  function getDefaultContainerIdAsync() {\n    if (isIos) {\n      return ExpoContacts.getDefaultContainerIdentifierAsync();\n    } else {\n      throw new Error('Error: Contacts.getDefaultContainerIdAsync: iOS Only');\n    }\n  }\n\n  function getContainersAsync(containerQuery) {\n    if (isIos) {\n      return ExpoContacts.getContainersAsync(containerQuery);\n    } else {\n      throw new Error('Error: Contacts.getContainersAsync: iOS Only');\n    }\n  }\n\n  var PHONE_NUMBERS = 'phoneNumbers';\n  exports.PHONE_NUMBERS = PHONE_NUMBERS;\n  var EMAILS = 'emails';\n  exports.EMAILS = EMAILS;\n  var ADDRESSES = 'addresses';\n  exports.ADDRESSES = ADDRESSES;\n  var IMAGE = 'image';\n  exports.IMAGE = IMAGE;\n  var RAW_IMAGE = 'rawImage';\n  exports.RAW_IMAGE = RAW_IMAGE;\n  var NOTE = 'note';\n  exports.NOTE = NOTE;\n  var BIRTHDAY = 'birthday';\n  exports.BIRTHDAY = BIRTHDAY;\n  var NON_GREGORIAN_BIRTHDAY = 'nonGregorianBirthday';\n  exports.NON_GREGORIAN_BIRTHDAY = NON_GREGORIAN_BIRTHDAY;\n  var NAME_PREFIX = 'namePrefix';\n  exports.NAME_PREFIX = NAME_PREFIX;\n  var NAME_SUFFIX = 'nameSuffix';\n  exports.NAME_SUFFIX = NAME_SUFFIX;\n  var PHONETIC_FIRST_NAME = 'phoneticFirstName';\n  exports.PHONETIC_FIRST_NAME = PHONETIC_FIRST_NAME;\n  var PHONETIC_MIDDLE_NAME = 'phoneticMiddleName';\n  exports.PHONETIC_MIDDLE_NAME = PHONETIC_MIDDLE_NAME;\n  var PHONETIC_LAST_NAME = 'phoneticLastName';\n  exports.PHONETIC_LAST_NAME = PHONETIC_LAST_NAME;\n  var SOCIAL_PROFILES = 'socialProfiles';\n  exports.SOCIAL_PROFILES = SOCIAL_PROFILES;\n  var IM_ADDRESSES = 'instantMessageAddresses';\n  exports.IM_ADDRESSES = IM_ADDRESSES;\n  var URLS = 'urlAddresses';\n  exports.URLS = URLS;\n  var DATES = 'dates';\n  exports.DATES = DATES;\n  var RELATIONSHIPS = 'relationships';\n  exports.RELATIONSHIPS = RELATIONSHIPS;\n  var Fields = {\n    ID: 'id',\n    ContactType: 'contactType',\n    Name: 'name',\n    FirstName: 'firstName',\n    MiddleName: 'middleName',\n    LastName: 'lastName',\n    MaidenName: 'maidenName',\n    NamePrefix: 'namePrefix',\n    NameSuffix: 'nameSuffix',\n    Nickname: 'nickname',\n    PhoneticFirstName: 'phoneticFirstName',\n    PhoneticMiddleName: 'phoneticMiddleName',\n    PhoneticLastName: 'phoneticLastName',\n    Birthday: 'birthday',\n    NonGregorianBirthday: 'nonGregorianBirthday',\n    Emails: 'emails',\n    PhoneNumbers: 'phoneNumbers',\n    Addresses: 'addresses',\n    SocialProfiles: 'socialProfiles',\n    InstantMessageAddresses: 'instantMessageAddresses',\n    UrlAddresses: 'urlAddresses',\n    Company: 'company',\n    JobTitle: 'jobTitle',\n    Department: 'department',\n    ImageAvailable: 'imageAvailable',\n    Image: 'image',\n    RawImage: 'rawImage',\n    ExtraNames: 'extraNames',\n    Note: 'note',\n    Dates: 'dates',\n    Relationships: 'relationships'\n  };\n  exports.Fields = Fields;\n  var CalendarFormats = {\n    Gregorian: 'gregorian',\n    Buddhist: 'buddhist',\n    Chinese: 'chinese',\n    Coptic: 'coptic',\n    EthiopicAmeteMihret: 'ethiopicAmeteMihret',\n    EthiopicAmeteAlem: 'ethiopicAmeteAlem',\n    Hebrew: 'hebrew',\n    ISO8601: 'iso8601',\n    Indian: 'indian',\n    Islamic: 'islamic',\n    IslamicCivil: 'islamicCivil',\n    Japanese: 'japanese',\n    Persian: 'persian',\n    RepublicOfChina: 'republicOfChina',\n    IslamicTabular: 'islamicTabular',\n    IslamicUmmAlQura: 'islamicUmmAlQura'\n  };\n  exports.CalendarFormats = CalendarFormats;\n  var ContainerTypes = {\n    Local: 'local',\n    Exchange: 'exchange',\n    CardDAV: 'cardDAV',\n    Unassigned: 'unassigned'\n  };\n  exports.ContainerTypes = ContainerTypes;\n  var SortTypes = {\n    UserDefault: 'userDefault',\n    FirstName: 'firstName',\n    LastName: 'lastName',\n    None: 'none'\n  };\n  exports.SortTypes = SortTypes;\n  var ContactTypes = {\n    Person: 'person',\n    Company: 'company'\n  };\n  exports.ContactTypes = ContactTypes;\n});","map":[[25,0,4,0],[27,0,5,0],[29,0,6,0],[41,6,8,8,"ExpoContacts"],[41,18],[41,21,8,25,"NativeModulesProxy"],[41,49],[41,50,8,8,"ExpoContacts"],[41,62],[42,0,238,0],[42,6,238,6,"isIos"],[42,11,238,11],[42,14,238,14,"Platform"],[42,33,238,23,"OS"],[42,35,238,14],[42,40,238,30],[42,45,238,0],[44,0,240,7],[44,11,240,22,"shareContactAsync"],[44,28,240,7],[44,29,241,2,"contactId"],[44,38,240,7],[44,40,242,2,"message"],[44,47,240,7],[45,0,240,7],[46,0,240,7],[47,0,240,7],[48,0,240,7],[49,0,240,7],[50,0,240,7],[51,0,240,7],[52,0,243,2,"shareOptions"],[52,12,243,2,"shareOptions"],[52,24,240,7],[52,83,243,25],[52,85,240,7],[54,0,240,7],[54,17,245,6,"isIos"],[54,22,240,7],[55,0,240,7],[56,0,240,7],[57,0,240,7],[59,0,240,7],[60,0,240,7],[60,44,246,22,"writeContactToFileAsync"],[60,67,246,45],[60,68,246,46],[61,0,247,6,"id"],[61,14,247,6,"id"],[61,16,247,8],[61,18,247,10,"contactId"],[62,0,246,46],[62,13,246,45],[62,14,240,7],[64,0,240,7],[65,0,246,10,"url"],[65,12,246,10,"url"],[65,15,240,7],[67,0,249,4,"Share"],[67,31,249,10,"share"],[67,36,249,4],[67,37,250,6],[68,0,251,8,"url"],[68,14,251,8,"url"],[68,17,251,11],[68,19,251,8,"url"],[68,22,250,6],[69,0,252,8,"message"],[69,14,252,8,"message"],[69,21,252,15],[69,23,252,8,"message"],[70,0,250,6],[70,13,249,4],[70,15,254,6,"shareOptions"],[70,27,249,4],[72,0,240,7],[73,0,240,7],[75,0,240,7],[76,0,240,7],[76,45,257,11,"ExpoContacts"],[76,57,257,23],[76,58,257,24,"shareContactAsync"],[76,75,257,11],[76,76,257,42,"contactId"],[76,85,257,11],[76,87,257,53,"message"],[76,94,257,11],[76,95,240,7],[78,0,240,7],[79,0,240,7],[80,0,240,7],[81,0,240,7],[82,0,240,7],[83,0,240,7],[84,0,240,7],[86,0,261,7],[86,11,261,16,"getContactsAsync"],[86,27,261,7],[86,30,261,92],[87,0,261,92],[87,8,261,33,"contactQuery"],[87,20,261,92],[87,91,261,62],[87,93,261,92],[88,0,262,2],[88,11,262,9,"ExpoContacts"],[88,23,262,21],[88,24,262,22,"getContactsAsync"],[88,40,262,9],[88,41,262,39,"contactQuery"],[88,53,262,9],[88,54,262,2],[89,0,263,1],[91,0,265,7],[91,11,265,16,"getPagedContactsAsync"],[91,32,265,7],[91,35,265,97],[92,0,265,97],[92,8,265,38,"contactQuery"],[92,20,265,97],[92,91,265,67],[92,93,265,97],[94,0,265,97],[94,8,266,10,"pageSize"],[94,16,265,97],[94,19,266,36,"contactQuery"],[94,31,265,97],[94,32,266,10,"pageSize"],[94,40,265,97],[95,0,265,97],[95,8,266,23,"nOptions"],[95,16,265,97],[95,44,266,36,"contactQuery"],[95,56,265,97],[97,0,268,2],[97,8,268,6,"pageSize"],[97,16,268,14],[97,20,268,18,"pageSize"],[97,28,268,26],[97,32,268,30],[97,33,268,2],[97,35,268,33],[98,0,269,4],[98,12,269,10],[98,16,269,14,"Error"],[98,21,269,10],[98,22,269,20],[98,96,269,10],[98,97,269,4],[99,0,270,3],[101,0,272,2],[101,11,272,9,"getContactsAsync"],[101,27,272,25],[101,46,273,7,"nOptions"],[101,54,272,25],[102,0,274,4,"pageSize"],[102,6,274,4,"pageSize"],[102,14,274,12],[102,16,274,4,"pageSize"],[103,0,272,25],[103,7,272,2],[104,0,276,1],[106,0,278,7],[106,11,278,22,"getContactByIdAsync"],[106,30,278,7],[106,31,278,42,"id"],[106,33,278,7],[106,35,278,54,"fields"],[106,41,278,7],[107,0,278,7],[108,0,278,7],[109,0,278,7],[110,0,278,7],[111,0,278,7],[112,0,278,7],[112,18,279,6,"id"],[112,20,279,8],[112,24,279,12],[112,28,278,7],[113,0,278,7],[114,0,278,7],[115,0,278,7],[117,0,278,7],[117,18,280,10],[117,22,280,14,"Error"],[117,27,280,10],[117,28,280,20],[117,99,280,10],[117,100,278,7],[119,0,278,7],[120,0,278,7],[121,0,278,7],[121,44,282,26,"ExpoContacts"],[121,56,282,38],[121,57,282,39,"getContactsAsync"],[121,73,282,26],[121,74,282,56],[122,0,283,6,"pageSize"],[122,14,283,6,"pageSize"],[122,22,283,14],[122,24,283,16],[122,25,282,56],[123,0,284,6,"pageOffset"],[123,14,284,6,"pageOffset"],[123,24,284,16],[123,26,284,18],[123,27,282,56],[124,0,285,6,"fields"],[124,14,285,6,"fields"],[124,20,285,12],[124,22,285,6,"fields"],[124,28,282,56],[125,0,286,6,"id"],[125,14,286,6,"id"],[125,16,286,8],[125,18,286,6,"id"],[126,0,282,56],[126,13,282,26],[126,14,278,7],[128,0,278,7],[129,0,282,10,"results"],[129,12,282,10,"results"],[129,19,278,7],[131,0,278,7],[131,18,288,8,"results"],[131,25,288,15],[131,29,288,19,"results"],[131,36,288,26],[131,37,288,27,"data"],[131,41,288,8],[131,45,288,35,"results"],[131,52,288,42],[131,53,288,43,"data"],[131,57,288,35],[131,58,288,48,"length"],[131,64,288,35],[131,67,288,57],[131,68,278,7],[132,0,278,7],[133,0,278,7],[134,0,278,7],[136,0,278,7],[136,46,289,13,"results"],[136,53,289,20],[136,54,289,21,"data"],[136,58,289,13],[136,59,289,26],[136,60,289,13],[136,61,278,7],[138,0,278,7],[139,0,278,7],[139,46,291,11],[139,50,278,7],[141,0,278,7],[142,0,278,7],[143,0,278,7],[144,0,278,7],[145,0,278,7],[146,0,278,7],[147,0,278,7],[149,0,295,7],[149,11,295,16,"addContactAsync"],[149,26,295,7],[149,27,295,32,"contact"],[149,34,295,7],[149,36,295,50,"containerId"],[149,47,295,7],[149,49,295,88],[150,0,296,2],[150,11,296,9,"ExpoContacts"],[150,23,296,21],[150,24,296,22,"addContactAsync"],[150,39,296,9],[150,40,296,38,"contact"],[150,47,296,9],[150,49,296,47,"containerId"],[150,60,296,9],[150,61,296,2],[151,0,297,1],[153,0,299,7],[153,11,299,16,"updateContactAsync"],[153,29,299,7],[153,30,299,35,"contact"],[153,37,299,7],[153,39,299,70],[154,0,300,2],[154,11,300,9,"ExpoContacts"],[154,23,300,21],[154,24,300,22,"updateContactAsync"],[154,42,300,9],[154,43,300,41,"contact"],[154,50,300,9],[154,51,300,2],[155,0,301,1],[157,0,303,7],[157,11,303,16,"removeContactAsync"],[157,29,303,7],[157,30,303,35,"contactId"],[157,39,303,7],[157,41,303,68],[158,0,304,2],[158,11,304,9,"ExpoContacts"],[158,23,304,21],[158,24,304,22,"removeContactAsync"],[158,42,304,9],[158,43,304,41,"contactId"],[158,52,304,9],[158,53,304,2],[159,0,305,1],[161,0,307,7],[161,11,307,16,"writeContactToFileAsync"],[161,34,307,7],[161,37,307,91],[162,0,307,91],[162,8,307,40,"contactQuery"],[162,20,307,91],[162,91,307,69],[162,93,307,91],[163,0,308,2],[163,11,308,9,"ExpoContacts"],[163,23,308,21],[163,24,308,22,"writeContactToFileAsync"],[163,47,308,9],[163,48,308,46,"contactQuery"],[163,60,308,9],[163,61,308,2],[164,0,309,1],[166,0,312,7],[166,11,312,16,"presentFormAsync"],[166,27,312,7],[166,28,313,2,"contactId"],[166,37,312,7],[166,39,314,2,"contact"],[166,46,312,7],[166,48,316,16],[167,0,316,16],[167,8,315,2,"formOptions"],[167,19,316,16],[167,90,315,29],[167,92,316,16],[169,0,317,2],[169,8,317,6,"isIos"],[169,13,317,2],[169,15,317,13],[170,0,318,4],[170,10,318,8,"adjustedOptions"],[170,25,318,23],[170,28,318,26,"formOptions"],[170,39,318,4],[172,0,320,4],[172,10,320,8,"contactId"],[172,19,320,4],[172,21,320,19],[173,0,321,6],[173,12,321,10,"contact"],[173,19,321,6],[173,21,321,19],[174,0,322,8,"contact"],[174,10,322,8,"contact"],[174,17,322,15],[174,20,322,18],[174,24,322,8],[175,0,323,8,"console"],[175,10,323,8,"console"],[175,17,323,15],[175,18,323,16,"log"],[175,21,323,8],[175,22,324,10],[175,123,323,8],[176,0,326,7],[178,0,327,6],[178,12,327,10,"adjustedOptions"],[178,27,327,25],[178,28,327,26,"isNew"],[178,33,327,10],[178,38,327,36,"undefined"],[178,47,327,6],[178,49,327,47],[179,0,328,8,"console"],[179,10,328,8,"console"],[179,17,328,15],[179,18,328,16,"log"],[179,21,328,8],[179,22,329,10],[179,107,328,8],[180,0,331,7],[181,0,332,5],[183,0,333,4],[183,13,333,11,"ExpoContacts"],[183,25,333,23],[183,26,333,24,"presentFormAsync"],[183,42,333,11],[183,43,333,41,"contactId"],[183,52,333,11],[183,54,333,52,"contact"],[183,61,333,11],[183,63,333,61,"adjustedOptions"],[183,78,333,11],[183,79,333,4],[184,0,334,3],[184,5,317,2],[184,11,334,9],[185,0,335,4],[185,13,335,11,"ExpoContacts"],[185,25,335,23],[185,26,335,24,"presentFormAsync"],[185,42,335,11],[185,43,335,41,"contactId"],[185,52,335,11],[185,54,335,52,"contact"],[185,61,335,11],[185,63,335,61,"formOptions"],[185,74,335,11],[185,75,335,4],[186,0,336,3],[187,0,337,1],[189,0,341,7],[189,11,341,16,"addExistingGroupToContainerAsync"],[189,43,341,7],[189,44,342,2,"groupId"],[189,51,341,7],[189,53,343,2,"containerId"],[189,64,341,7],[189,66,344,16],[190,0,345,2],[190,8,345,6,"isIos"],[190,13,345,2],[190,15,345,13],[191,0,346,4],[191,13,346,11,"ExpoContacts"],[191,25,346,23],[191,26,346,24,"addExistingGroupToContainerAsync"],[191,58,346,11],[191,59,346,57,"groupId"],[191,66,346,11],[191,68,346,66,"containerId"],[191,79,346,11],[191,80,346,4],[192,0,347,3],[192,5,345,2],[192,11,347,9],[193,0,348,4],[193,12,348,10],[193,16,348,14,"Error"],[193,21,348,10],[193,22,348,20],[193,82,348,10],[193,83,348,4],[194,0,349,3],[195,0,350,1],[197,0,352,7],[197,11,352,22,"createGroupAsync"],[197,27,352,7],[197,28,352,39,"name"],[197,32,352,7],[197,34,352,54,"containerId"],[197,45,352,7],[198,0,352,7],[199,0,352,7],[200,0,352,7],[201,0,352,7],[202,0,352,7],[202,17,353,6,"isIos"],[202,22,352,7],[203,0,352,7],[204,0,352,7],[205,0,352,7],[207,0,354,4,"name"],[207,12,354,4,"name"],[207,16,354,8],[207,19,354,11,"name"],[207,23,354,15],[207,27,354,19,"UUID"],[207,43,354,24,"create"],[207,49,354,19],[207,52,354,33,"toString"],[207,60,354,19],[207,62,354,4],[209,0,352,7],[209,16,355,9,"containerId"],[209,27,352,7],[210,0,352,7],[211,0,352,7],[212,0,352,7],[214,0,352,7],[215,0,352,7],[215,44,355,42,"getDefaultContainerIdAsync"],[215,70,355,68],[215,72,352,7],[217,0,352,7],[218,0,355,22,"containerId"],[218,12,355,22,"containerId"],[218,23,352,7],[220,0,352,7],[221,0,352,7],[221,46,357,11,"ExpoContacts"],[221,58,357,23],[221,59,357,24,"createGroupAsync"],[221,75,357,11],[221,76,357,41,"name"],[221,80,357,11],[221,82,357,47,"containerId"],[221,93,357,11],[221,94,352,7],[223,0,352,7],[224,0,352,7],[224,18,359,10],[224,22,359,14,"Error"],[224,27,359,10],[224,28,359,20],[224,72,359,10],[224,73,352,7],[226,0,352,7],[227,0,352,7],[228,0,352,7],[229,0,352,7],[230,0,352,7],[231,0,352,7],[232,0,352,7],[234,0,363,7],[234,11,363,16,"updateGroupNameAsync"],[234,31,363,7],[234,32,363,37,"groupName"],[234,41,363,7],[234,43,363,56,"groupId"],[234,50,363,7],[234,52,363,87],[235,0,364,2],[235,8,364,6,"isIos"],[235,13,364,2],[235,15,364,13],[236,0,365,4],[236,13,365,11,"ExpoContacts"],[236,25,365,23],[236,26,365,24,"updateGroupNameAsync"],[236,46,365,11],[236,47,365,45,"groupName"],[236,56,365,11],[236,58,365,56,"groupId"],[236,65,365,11],[236,66,365,4],[237,0,366,3],[237,5,364,2],[237,11,366,9],[238,0,367,4],[238,12,367,10],[238,16,367,14,"Error"],[238,21,367,10],[238,22,367,20],[238,70,367,10],[238,71,367,4],[239,0,368,3],[240,0,369,1],[242,0,371,7],[242,11,371,16,"removeGroupAsync"],[242,27,371,7],[242,28,371,33,"groupId"],[242,35,371,7],[242,37,371,64],[243,0,372,2],[243,8,372,6,"isIos"],[243,13,372,2],[243,15,372,13],[244,0,373,4],[244,13,373,11,"ExpoContacts"],[244,25,373,23],[244,26,373,24,"removeGroupAsync"],[244,42,373,11],[244,43,373,41,"groupId"],[244,50,373,11],[244,51,373,4],[245,0,374,3],[245,5,372,2],[245,11,374,9],[246,0,375,4],[246,12,375,10],[246,16,375,14,"Error"],[246,21,375,10],[246,22,375,20],[246,66,375,10],[246,67,375,4],[247,0,376,3],[248,0,377,1],[250,0,379,7],[250,11,379,16,"addExistingContactToGroupAsync"],[250,41,379,7],[250,42,379,47,"contactId"],[250,51,379,7],[250,53,379,66,"groupId"],[250,60,379,7],[250,62,379,97],[251,0,380,2],[251,8,380,6,"isIos"],[251,13,380,2],[251,15,380,13],[252,0,381,4],[252,13,381,11,"ExpoContacts"],[252,25,381,23],[252,26,381,24,"addExistingContactToGroupAsync"],[252,56,381,11],[252,57,381,55,"contactId"],[252,66,381,11],[252,68,381,66,"groupId"],[252,75,381,11],[252,76,381,4],[253,0,382,3],[253,5,380,2],[253,11,382,9],[254,0,383,4],[254,12,383,10],[254,16,383,14,"Error"],[254,21,383,10],[254,22,383,20],[254,80,383,10],[254,81,383,4],[255,0,384,3],[256,0,385,1],[258,0,387,7],[258,11,387,16,"removeContactFromGroupAsync"],[258,38,387,7],[258,39,387,44,"contactId"],[258,48,387,7],[258,50,387,63,"groupId"],[258,57,387,7],[258,59,387,94],[259,0,388,2],[259,8,388,6,"isIos"],[259,13,388,2],[259,15,388,13],[260,0,389,4],[260,13,389,11,"ExpoContacts"],[260,25,389,23],[260,26,389,24,"removeContactFromGroupAsync"],[260,53,389,11],[260,54,389,52,"contactId"],[260,63,389,11],[260,65,389,63,"groupId"],[260,72,389,11],[260,73,389,4],[261,0,390,3],[261,5,388,2],[261,11,390,9],[262,0,391,4],[262,12,391,10],[262,16,391,14,"Error"],[262,21,391,10],[262,22,391,20],[262,77,391,10],[262,78,391,4],[263,0,392,3],[264,0,393,1],[266,0,395,7],[266,11,395,16,"getGroupsAsync"],[266,25,395,7],[266,26,395,31,"groupQuery"],[266,36,395,7],[266,38,395,73],[267,0,396,2],[267,8,396,6,"isIos"],[267,13,396,2],[267,15,396,13],[268,0,397,4],[268,13,397,11,"ExpoContacts"],[268,25,397,23],[268,26,397,24,"getGroupsAsync"],[268,40,397,11],[268,41,397,39,"groupQuery"],[268,51,397,11],[268,52,397,4],[269,0,398,3],[269,5,396,2],[269,11,398,9],[270,0,399,4],[270,12,399,10],[270,16,399,14,"Error"],[270,21,399,10],[270,22,399,20],[270,64,399,10],[270,65,399,4],[271,0,400,3],[272,0,401,1],[274,0,403,7],[274,11,403,16,"getDefaultContainerIdAsync"],[274,37,403,7],[274,40,403,62],[275,0,404,2],[275,8,404,6,"isIos"],[275,13,404,2],[275,15,404,13],[276,0,405,4],[276,13,405,11,"ExpoContacts"],[276,25,405,23],[276,26,405,24,"getDefaultContainerIdentifierAsync"],[276,60,405,11],[276,62,405,4],[277,0,406,3],[277,5,404,2],[277,11,406,9],[278,0,407,4],[278,12,407,10],[278,16,407,14,"Error"],[278,21,407,10],[278,22,407,20],[278,76,407,10],[278,77,407,4],[279,0,408,3],[280,0,409,1],[282,0,411,7],[282,11,411,16,"getContainersAsync"],[282,29,411,7],[282,30,411,35,"containerQuery"],[282,44,411,7],[282,46,411,89],[283,0,412,2],[283,8,412,6,"isIos"],[283,13,412,2],[283,15,412,13],[284,0,413,4],[284,13,413,11,"ExpoContacts"],[284,25,413,23],[284,26,413,24,"getContainersAsync"],[284,44,413,11],[284,45,413,43,"containerQuery"],[284,59,413,11],[284,60,413,4],[285,0,414,3],[285,5,412,2],[285,11,414,9],[286,0,415,4],[286,12,415,10],[286,16,415,14,"Error"],[286,21,415,10],[286,22,415,20],[286,68,415,10],[286,69,415,4],[287,0,416,3],[288,0,417,1],[290,0,420,7],[290,6,420,13,"PHONE_NUMBERS"],[290,19,420,26],[290,22,420,29],[290,36,420,7],[292,0,421,7],[292,6,421,13,"EMAILS"],[292,12,421,19],[292,15,421,22],[292,23,421,7],[294,0,422,7],[294,6,422,13,"ADDRESSES"],[294,15,422,22],[294,18,422,25],[294,29,422,7],[296,0,423,7],[296,6,423,13,"IMAGE"],[296,11,423,18],[296,14,423,21],[296,21,423,7],[298,0,424,7],[298,6,424,13,"RAW_IMAGE"],[298,15,424,22],[298,18,424,25],[298,28,424,7],[300,0,425,7],[300,6,425,13,"NOTE"],[300,10,425,17],[300,13,425,20],[300,19,425,7],[302,0,426,7],[302,6,426,13,"BIRTHDAY"],[302,14,426,21],[302,17,426,24],[302,27,426,7],[304,0,427,7],[304,6,427,13,"NON_GREGORIAN_BIRTHDAY"],[304,28,427,35],[304,31,427,38],[304,53,427,7],[306,0,428,7],[306,6,428,13,"NAME_PREFIX"],[306,17,428,24],[306,20,428,27],[306,32,428,7],[308,0,429,7],[308,6,429,13,"NAME_SUFFIX"],[308,17,429,24],[308,20,429,27],[308,32,429,7],[310,0,430,7],[310,6,430,13,"PHONETIC_FIRST_NAME"],[310,25,430,32],[310,28,430,35],[310,47,430,7],[312,0,431,7],[312,6,431,13,"PHONETIC_MIDDLE_NAME"],[312,26,431,33],[312,29,431,36],[312,49,431,7],[314,0,432,7],[314,6,432,13,"PHONETIC_LAST_NAME"],[314,24,432,31],[314,27,432,34],[314,45,432,7],[316,0,433,7],[316,6,433,13,"SOCIAL_PROFILES"],[316,21,433,28],[316,24,433,31],[316,40,433,7],[318,0,434,7],[318,6,434,13,"IM_ADDRESSES"],[318,18,434,25],[318,21,434,28],[318,46,434,7],[320,0,435,7],[320,6,435,13,"URLS"],[320,10,435,17],[320,13,435,20],[320,27,435,7],[322,0,436,7],[322,6,436,13,"DATES"],[322,11,436,18],[322,14,436,21],[322,21,436,7],[324,0,437,7],[324,6,437,13,"RELATIONSHIPS"],[324,19,437,26],[324,22,437,29],[324,37,437,7],[326,0,439,7],[326,6,439,13,"Fields"],[326,12,439,19],[326,15,439,22],[327,0,440,2,"ID"],[327,4,440,2,"ID"],[327,6,440,4],[327,8,440,6],[327,12,439,22],[328,0,441,2,"ContactType"],[328,4,441,2,"ContactType"],[328,15,441,13],[328,17,441,15],[328,30,439,22],[329,0,442,2,"Name"],[329,4,442,2,"Name"],[329,8,442,6],[329,10,442,8],[329,16,439,22],[330,0,443,2,"FirstName"],[330,4,443,2,"FirstName"],[330,13,443,11],[330,15,443,13],[330,26,439,22],[331,0,444,2,"MiddleName"],[331,4,444,2,"MiddleName"],[331,14,444,12],[331,16,444,14],[331,28,439,22],[332,0,445,2,"LastName"],[332,4,445,2,"LastName"],[332,12,445,10],[332,14,445,12],[332,24,439,22],[333,0,446,2,"MaidenName"],[333,4,446,2,"MaidenName"],[333,14,446,12],[333,16,446,14],[333,28,439,22],[334,0,447,2,"NamePrefix"],[334,4,447,2,"NamePrefix"],[334,14,447,12],[334,16,447,14],[334,28,439,22],[335,0,448,2,"NameSuffix"],[335,4,448,2,"NameSuffix"],[335,14,448,12],[335,16,448,14],[335,28,439,22],[336,0,449,2,"Nickname"],[336,4,449,2,"Nickname"],[336,12,449,10],[336,14,449,12],[336,24,439,22],[337,0,450,2,"PhoneticFirstName"],[337,4,450,2,"PhoneticFirstName"],[337,21,450,19],[337,23,450,21],[337,42,439,22],[338,0,451,2,"PhoneticMiddleName"],[338,4,451,2,"PhoneticMiddleName"],[338,22,451,20],[338,24,451,22],[338,44,439,22],[339,0,452,2,"PhoneticLastName"],[339,4,452,2,"PhoneticLastName"],[339,20,452,18],[339,22,452,20],[339,40,439,22],[340,0,453,2,"Birthday"],[340,4,453,2,"Birthday"],[340,12,453,10],[340,14,453,12],[340,24,439,22],[341,0,454,2,"NonGregorianBirthday"],[341,4,454,2,"NonGregorianBirthday"],[341,24,454,22],[341,26,454,24],[341,48,439,22],[342,0,455,2,"Emails"],[342,4,455,2,"Emails"],[342,10,455,8],[342,12,455,10],[342,20,439,22],[343,0,456,2,"PhoneNumbers"],[343,4,456,2,"PhoneNumbers"],[343,16,456,14],[343,18,456,16],[343,32,439,22],[344,0,457,2,"Addresses"],[344,4,457,2,"Addresses"],[344,13,457,11],[344,15,457,13],[344,26,439,22],[345,0,458,2,"SocialProfiles"],[345,4,458,2,"SocialProfiles"],[345,18,458,16],[345,20,458,18],[345,36,439,22],[346,0,459,2,"InstantMessageAddresses"],[346,4,459,2,"InstantMessageAddresses"],[346,27,459,25],[346,29,459,27],[346,54,439,22],[347,0,460,2,"UrlAddresses"],[347,4,460,2,"UrlAddresses"],[347,16,460,14],[347,18,460,16],[347,32,439,22],[348,0,461,2,"Company"],[348,4,461,2,"Company"],[348,11,461,9],[348,13,461,11],[348,22,439,22],[349,0,462,2,"JobTitle"],[349,4,462,2,"JobTitle"],[349,12,462,10],[349,14,462,12],[349,24,439,22],[350,0,463,2,"Department"],[350,4,463,2,"Department"],[350,14,463,12],[350,16,463,14],[350,28,439,22],[351,0,464,2,"ImageAvailable"],[351,4,464,2,"ImageAvailable"],[351,18,464,16],[351,20,464,18],[351,36,439,22],[352,0,465,2,"Image"],[352,4,465,2,"Image"],[352,9,465,7],[352,11,465,9],[352,18,439,22],[353,0,466,2,"RawImage"],[353,4,466,2,"RawImage"],[353,12,466,10],[353,14,466,12],[353,24,439,22],[354,0,467,2,"ExtraNames"],[354,4,467,2,"ExtraNames"],[354,14,467,12],[354,16,467,14],[354,28,439,22],[355,0,468,2,"Note"],[355,4,468,2,"Note"],[355,8,468,6],[355,10,468,8],[355,16,439,22],[356,0,469,2,"Dates"],[356,4,469,2,"Dates"],[356,9,469,7],[356,11,469,9],[356,18,439,22],[357,0,470,2,"Relationships"],[357,4,470,2,"Relationships"],[357,17,470,15],[357,19,470,17],[358,0,439,22],[358,3,439,7],[360,0,473,7],[360,6,473,13,"CalendarFormats"],[360,21,473,28],[360,24,473,31],[361,0,474,2,"Gregorian"],[361,4,474,2,"Gregorian"],[361,13,474,11],[361,15,474,13],[361,26,473,31],[362,0,475,2,"Buddhist"],[362,4,475,2,"Buddhist"],[362,12,475,10],[362,14,475,12],[362,24,473,31],[363,0,476,2,"Chinese"],[363,4,476,2,"Chinese"],[363,11,476,9],[363,13,476,11],[363,22,473,31],[364,0,477,2,"Coptic"],[364,4,477,2,"Coptic"],[364,10,477,8],[364,12,477,10],[364,20,473,31],[365,0,478,2,"EthiopicAmeteMihret"],[365,4,478,2,"EthiopicAmeteMihret"],[365,23,478,21],[365,25,478,23],[365,46,473,31],[366,0,479,2,"EthiopicAmeteAlem"],[366,4,479,2,"EthiopicAmeteAlem"],[366,21,479,19],[366,23,479,21],[366,42,473,31],[367,0,480,2,"Hebrew"],[367,4,480,2,"Hebrew"],[367,10,480,8],[367,12,480,10],[367,20,473,31],[368,0,481,2,"ISO8601"],[368,4,481,2,"ISO8601"],[368,11,481,9],[368,13,481,11],[368,22,473,31],[369,0,482,2,"Indian"],[369,4,482,2,"Indian"],[369,10,482,8],[369,12,482,10],[369,20,473,31],[370,0,483,2,"Islamic"],[370,4,483,2,"Islamic"],[370,11,483,9],[370,13,483,11],[370,22,473,31],[371,0,484,2,"IslamicCivil"],[371,4,484,2,"IslamicCivil"],[371,16,484,14],[371,18,484,16],[371,32,473,31],[372,0,485,2,"Japanese"],[372,4,485,2,"Japanese"],[372,12,485,10],[372,14,485,12],[372,24,473,31],[373,0,486,2,"Persian"],[373,4,486,2,"Persian"],[373,11,486,9],[373,13,486,11],[373,22,473,31],[374,0,487,2,"RepublicOfChina"],[374,4,487,2,"RepublicOfChina"],[374,19,487,17],[374,21,487,19],[374,38,473,31],[375,0,488,2,"IslamicTabular"],[375,4,488,2,"IslamicTabular"],[375,18,488,16],[375,20,488,18],[375,36,473,31],[376,0,489,2,"IslamicUmmAlQura"],[376,4,489,2,"IslamicUmmAlQura"],[376,20,489,18],[376,22,489,20],[377,0,473,31],[377,3,473,7],[379,0,492,7],[379,6,492,13,"ContainerTypes"],[379,20,492,27],[379,23,492,30],[380,0,493,2,"Local"],[380,4,493,2,"Local"],[380,9,493,7],[380,11,493,9],[380,18,492,30],[381,0,494,2,"Exchange"],[381,4,494,2,"Exchange"],[381,12,494,10],[381,14,494,12],[381,24,492,30],[382,0,495,2,"CardDAV"],[382,4,495,2,"CardDAV"],[382,11,495,9],[382,13,495,11],[382,22,492,30],[383,0,496,2,"Unassigned"],[383,4,496,2,"Unassigned"],[383,14,496,12],[383,16,496,14],[384,0,492,30],[384,3,492,7],[386,0,499,7],[386,6,499,13,"SortTypes"],[386,15,499,22],[386,18,499,25],[387,0,500,2,"UserDefault"],[387,4,500,2,"UserDefault"],[387,15,500,13],[387,17,500,15],[387,30,499,25],[388,0,501,2,"FirstName"],[388,4,501,2,"FirstName"],[388,13,501,11],[388,15,501,13],[388,26,499,25],[389,0,502,2,"LastName"],[389,4,502,2,"LastName"],[389,12,502,10],[389,14,502,12],[389,24,499,25],[390,0,503,2,"None"],[390,4,503,2,"None"],[390,8,503,6],[390,10,503,8],[391,0,499,25],[391,3,499,7],[393,0,506,7],[393,6,506,13,"ContactTypes"],[393,18,506,25],[393,21,506,28],[394,0,507,2,"Person"],[394,4,507,2,"Person"],[394,10,507,8],[394,12,507,10],[394,20,506,28],[395,0,508,2,"Company"],[395,4,508,2,"Company"],[395,11,508,9],[395,13,508,11],[396,0,506,28],[396,3,506,7]]},"type":"js/module"}]}