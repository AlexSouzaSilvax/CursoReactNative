{"dependencies":[{"name":"react","data":{"isAsync":false}},{"name":"./../../../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"@react-navigation/core","data":{"isAsync":false}},{"name":"react-native-screens","data":{"isAsync":false}},{"name":"../routers/DrawerActions","data":{"isAsync":false}},{"name":"./DrawerLayout","data":{"isAsync":false}},{"name":"./DrawerSidebar","data":{"isAsync":false}},{"name":"../utils/DrawerGestureContext","data":{"isAsync":false}},{"name":"../views/ResourceSavingScene","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../../../react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n\n  var _core = _$$_REQUIRE(_dependencyMap[3], \"@react-navigation/core\");\n\n  var _reactNativeScreens = _$$_REQUIRE(_dependencyMap[4], \"react-native-screens\");\n\n  var _DrawerActions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"../routers/DrawerActions\"));\n\n  var _DrawerLayout = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./DrawerLayout\"));\n\n  var _DrawerSidebar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./DrawerSidebar\"));\n\n  var _DrawerGestureContext = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"../utils/DrawerGestureContext\"));\n\n  var _ResourceSavingScene = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"../views/ResourceSavingScene\"));\n\n  var _class,\n      _temp,\n      _jsxFileName = \"/home/alex/Documentos/CursoReactNative/node_modules/react-navigation-drawer/dist/views/DrawerView.js\";\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\n  function _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\n  function _iterableToArray(iter) { if ((typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\") in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\n  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  var _components = {\n    DrawerView: {\n      displayName: \"DrawerView\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/alex/Documentos/CursoReactNative/node_modules/react-navigation-drawer/dist/views/DrawerView.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var DrawerView = _wrapComponent(\"DrawerView\")((_temp = _class = function (_React$PureComponent) {\n    _inherits(DrawerView, _React$PureComponent);\n\n    function DrawerView() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      _classCallCheck(this, DrawerView);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DrawerView)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = {\n        loaded: [_this.props.navigation.state.index],\n        drawerWidth: typeof _this.props.navigationConfig.drawerWidth === 'function' ? _this.props.navigationConfig.drawerWidth() : _this.props.navigationConfig.drawerWidth\n      };\n      _this.drawerGestureRef = _react.default.createRef();\n\n      _this._handleDrawerStateChange = function (newState, willShow) {\n        if (newState === 'Idle') {\n          if (!_this.props.navigation.state.isDrawerIdle) {\n            _this.props.navigation.dispatch({\n              type: _DrawerActions.default.MARK_DRAWER_IDLE,\n              key: _this.props.navigation.state.key\n            });\n          }\n        } else if (newState === 'Settling') {\n          _this.props.navigation.dispatch({\n            type: _DrawerActions.default.MARK_DRAWER_SETTLING,\n            key: _this.props.navigation.state.key,\n            willShow: willShow\n          });\n        } else {\n          if (_this.props.navigation.state.isDrawerIdle) {\n            _this.props.navigation.dispatch({\n              type: _DrawerActions.default.MARK_DRAWER_ACTIVE,\n              key: _this.props.navigation.state.key\n            });\n          }\n        }\n      };\n\n      _this._handleDrawerOpen = function () {\n        _this.props.navigation.dispatch({\n          type: _DrawerActions.default.DRAWER_OPENED,\n          key: _this.props.navigation.state.key\n        });\n      };\n\n      _this._handleDrawerClose = function () {\n        _this.props.navigation.dispatch({\n          type: _DrawerActions.default.DRAWER_CLOSED,\n          key: _this.props.navigation.state.key\n        });\n      };\n\n      _this._updateWidth = function () {\n        var drawerWidth = typeof _this.props.navigationConfig.drawerWidth === 'function' ? _this.props.navigationConfig.drawerWidth() : _this.props.navigationConfig.drawerWidth;\n\n        if (_this.state.drawerWidth !== drawerWidth) {\n          _this.setState({\n            drawerWidth: drawerWidth\n          });\n        }\n      };\n\n      _this._renderNavigationView = function () {\n        return _react.default.createElement(_DrawerGestureContext.default.Provider, {\n          value: _this.drawerGestureRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          }\n        }, _react.default.createElement(_DrawerSidebar.default, _extends({\n          screenProps: _this.props.screenProps,\n          navigation: _this.props.navigation,\n          descriptors: _this.props.descriptors,\n          contentComponent: _this.props.navigationConfig.contentComponent,\n          contentOptions: _this.props.navigationConfig.contentOptions,\n          drawerPosition: _this.props.navigationConfig.drawerPosition,\n          style: _this.props.navigationConfig.style\n        }, _this.props.navigationConfig, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          }\n        })));\n      };\n\n      _this._renderContent = function () {\n        var _this$props = _this.props,\n            lazy = _this$props.lazy,\n            navigation = _this$props.navigation;\n        var loaded = _this.state.loaded;\n        var routes = navigation.state.routes;\n\n        if (_this.props.navigationConfig.unmountInactiveRoutes) {\n          var activeKey = navigation.state.routes[navigation.state.index].key;\n          var descriptor = _this.props.descriptors[activeKey];\n          return _react.default.createElement(_core.SceneView, {\n            navigation: descriptor.navigation,\n            screenProps: _this.props.screenProps,\n            component: descriptor.getComponent(),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            }\n          });\n        } else {\n          return _react.default.createElement(_reactNativeScreens.ScreenContainer, {\n            style: styles.pages,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            }\n          }, routes.map(function (route, index) {\n            if (lazy && !loaded.includes(index)) {\n              return null;\n            }\n\n            var isFocused = navigation.state.index === index;\n            var descriptor = _this.props.descriptors[route.key];\n            return _react.default.createElement(_ResourceSavingScene.default, {\n              key: route.key,\n              style: [_reactNative.StyleSheet.absoluteFill, {\n                opacity: isFocused ? 1 : 0\n              }],\n              isVisible: isFocused,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 148\n              }\n            }, _react.default.createElement(_core.SceneView, {\n              navigation: descriptor.navigation,\n              screenProps: _this.props.screenProps,\n              component: descriptor.getComponent(),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 149\n              }\n            }));\n          }));\n        }\n      };\n\n      return _this;\n    }\n\n    _createClass(DrawerView, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        _reactNative.Dimensions.addEventListener('change', this._updateWidth);\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        var _this2 = this;\n\n        var _this$props$navigatio = this.props.navigation.state,\n            openId = _this$props$navigatio.openId,\n            closeId = _this$props$navigatio.closeId,\n            toggleId = _this$props$navigatio.toggleId,\n            isDrawerOpen = _this$props$navigatio.isDrawerOpen;\n        var _prevProps$navigation = prevProps.navigation.state,\n            prevOpenId = _prevProps$navigation.openId,\n            prevCloseId = _prevProps$navigation.closeId,\n            prevToggleId = _prevProps$navigation.toggleId;\n        var prevIds = [prevOpenId, prevCloseId, prevToggleId];\n        var changedIds = [openId, closeId, toggleId].filter(function (id) {\n          return !prevIds.includes(id);\n        }).sort(function (a, b) {\n          return a > b;\n        });\n        changedIds.forEach(function (id) {\n          if (id === openId) {\n            _this2._drawer.openDrawer();\n          } else if (id === closeId) {\n            _this2._drawer.closeDrawer();\n          } else if (id === toggleId) {\n            if (isDrawerOpen) {\n              _this2._drawer.closeDrawer();\n            } else {\n              _this2._drawer.openDrawer();\n            }\n          }\n        });\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        _reactNative.Dimensions.removeEventListener('change', this._updateWidth);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this3 = this;\n\n        var navigation = this.props.navigation;\n        var activeKey = navigation.state.routes[navigation.state.index].key;\n        var drawerLockMode = this.props.descriptors[activeKey].options.drawerLockMode;\n        return _react.default.createElement(_DrawerLayout.default, {\n          ref: function ref(c) {\n            _this3._drawer = c;\n          },\n          gestureRef: this.drawerGestureRef,\n          drawerLockMode: drawerLockMode || this.props.screenProps && this.props.screenProps.drawerLockMode || this.props.navigationConfig.drawerLockMode,\n          drawerBackgroundColor: this.props.navigationConfig.drawerBackgroundColor,\n          keyboardDismissMode: this.props.navigationConfig.keyboardDismissMode,\n          drawerWidth: this.state.drawerWidth,\n          onDrawerOpen: this._handleDrawerOpen,\n          onDrawerClose: this._handleDrawerClose,\n          onDrawerStateChanged: this._handleDrawerStateChange,\n          useNativeAnimations: this.props.navigationConfig.useNativeAnimations,\n          renderNavigationView: this._renderNavigationView,\n          drawerPosition: this.props.navigationConfig.drawerPosition === 'right' ? _DrawerLayout.default.positions.Right : _DrawerLayout.default.positions.Left,\n          drawerType: this.props.navigationConfig.drawerType,\n          edgeWidth: this.props.navigationConfig.edgeWidth,\n          hideStatusBar: this.props.navigationConfig.hideStatusBar,\n          statusBarAnimation: this.props.navigationConfig.statusBarAnimation,\n          minSwipeDistance: this.props.navigationConfig.minSwipeDistance,\n          overlayColor: this.props.navigationConfig.overlayColor,\n          contentContainerStyle: this.props.navigationConfig.contentContainerStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          }\n        }, _react.default.createElement(_DrawerGestureContext.default.Provider, {\n          value: this.drawerGestureRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          }\n        }, this._renderContent()));\n      }\n    }], [{\n      key: \"getDerivedStateFromProps\",\n      value: function getDerivedStateFromProps(nextProps, prevState) {\n        var index = nextProps.navigation.state.index;\n        return {\n          loaded: prevState.loaded.includes(index) ? prevState.loaded : [].concat(_toConsumableArray(prevState.loaded), [index])\n        };\n      }\n    }]);\n\n    return DrawerView;\n  }(_react.default.PureComponent), _class.defaultProps = {\n    lazy: true\n  }, _temp));\n\n  var _default2 = DrawerView;\n  exports.default = _default2;\n\n  var styles = _reactNative.StyleSheet.create({\n    pages: {\n      flex: 1\n    }\n  });\n});","map":[[7,0,1,0],[11,0,2,0],[13,0,3,0],[15,0,4,0],[17,0,6,0],[19,0,7,0],[21,0,8,0],[23,0,9,0],[25,0,10,0],[93,12,29,2,"state"],[93,17],[93,20,29,10],[94,0,30,4,"loaded"],[94,8,30,4,"loaded"],[94,14,30,10],[94,16,30,12],[94,17,30,13],[94,23,30,18,"props"],[94,28,30,13],[94,29,30,24,"navigation"],[94,39,30,13],[94,40,30,35,"state"],[94,45,30,13],[94,46,30,41,"index"],[94,51,30,12],[94,52,29,10],[95,0,31,4,"drawerWidth"],[95,8,31,4,"drawerWidth"],[95,19,31,15],[95,21,31,17],[95,28,31,24],[95,34,31,29,"props"],[95,39,31,24],[95,40,31,35,"navigationConfig"],[95,56,31,24],[95,57,31,52,"drawerWidth"],[95,68,31,17],[95,73,31,68],[95,83,31,17],[95,86,31,81],[95,92,31,86,"props"],[95,97,31,81],[95,98,31,92,"navigationConfig"],[95,114,31,81],[95,115,31,109,"drawerWidth"],[95,126,31,81],[95,128,31,17],[95,131,31,125],[95,137,31,130,"props"],[95,142,31,125],[95,143,31,136,"navigationConfig"],[95,159,31,125],[95,160,31,153,"drawerWidth"],[96,0,29,10],[96,7],[97,12,73,2,"drawerGestureRef"],[97,28],[97,31,73,21,"React"],[97,46,73,27,"createRef"],[97,55,73,21],[97,57],[99,12,75,2,"_handleDrawerStateChange"],[99,36],[99,39,75,29],[99,49,75,30,"newState"],[99,57,75,29],[99,59,75,40,"willShow"],[99,67,75,29],[99,69,75,53],[100,0,76,4],[100,12,76,8,"newState"],[100,20,76,16],[100,25,76,21],[100,31,76,4],[100,33,76,29],[101,0,77,6],[101,14,77,10],[101,15,77,11],[101,21,77,16,"props"],[101,26,77,11],[101,27,77,22,"navigation"],[101,37,77,11],[101,38,77,33,"state"],[101,43,77,11],[101,44,77,39,"isDrawerIdle"],[101,56,77,6],[101,58,77,53],[102,0,78,8],[102,18,78,13,"props"],[102,23,78,8],[102,24,78,19,"navigation"],[102,34,78,8],[102,35,78,30,"dispatch"],[102,43,78,8],[102,44,78,39],[103,0,79,10,"type"],[103,14,79,10,"type"],[103,18,79,14],[103,20,79,16,"DrawerActions"],[103,43,79,30,"MARK_DRAWER_IDLE"],[103,59,78,39],[104,0,80,10,"key"],[104,14,80,10,"key"],[104,17,80,13],[104,19,80,15],[104,25,80,20,"props"],[104,30,80,15],[104,31,80,26,"navigation"],[104,41,80,15],[104,42,80,37,"state"],[104,47,80,15],[104,48,80,43,"key"],[105,0,78,39],[105,13,78,8],[106,0,82,7],[107,0,83,5],[107,9,76,4],[107,15,83,11],[107,19,83,15,"newState"],[107,27,83,23],[107,32,83,28],[107,42,83,11],[107,44,83,40],[108,0,84,6],[108,16,84,11,"props"],[108,21,84,6],[108,22,84,17,"navigation"],[108,32,84,6],[108,33,84,28,"dispatch"],[108,41,84,6],[108,42,84,37],[109,0,85,8,"type"],[109,12,85,8,"type"],[109,16,85,12],[109,18,85,14,"DrawerActions"],[109,41,85,28,"MARK_DRAWER_SETTLING"],[109,61,84,37],[110,0,86,8,"key"],[110,12,86,8,"key"],[110,15,86,11],[110,17,86,13],[110,23,86,18,"props"],[110,28,86,13],[110,29,86,24,"navigation"],[110,39,86,13],[110,40,86,35,"state"],[110,45,86,13],[110,46,86,41,"key"],[110,49,84,37],[111,0,87,8,"willShow"],[111,12,87,8,"willShow"],[111,20,87,16],[111,22,87,8,"willShow"],[112,0,84,37],[112,11,84,6],[113,0,89,5],[113,9,83,11],[113,15,89,11],[114,0,90,6],[114,14,90,10],[114,20,90,15,"props"],[114,25,90,10],[114,26,90,21,"navigation"],[114,36,90,10],[114,37,90,32,"state"],[114,42,90,10],[114,43,90,38,"isDrawerIdle"],[114,55,90,6],[114,57,90,52],[115,0,91,8],[115,18,91,13,"props"],[115,23,91,8],[115,24,91,19,"navigation"],[115,34,91,8],[115,35,91,30,"dispatch"],[115,43,91,8],[115,44,91,39],[116,0,92,10,"type"],[116,14,92,10,"type"],[116,18,92,14],[116,20,92,16,"DrawerActions"],[116,43,92,30,"MARK_DRAWER_ACTIVE"],[116,61,91,39],[117,0,93,10,"key"],[117,14,93,10,"key"],[117,17,93,13],[117,19,93,15],[117,25,93,20,"props"],[117,30,93,15],[117,31,93,26,"navigation"],[117,41,93,15],[117,42,93,37,"state"],[117,47,93,15],[117,48,93,43,"key"],[118,0,91,39],[118,13,91,8],[119,0,95,7],[120,0,96,5],[121,0,97,3],[121,7],[123,12,99,2,"_handleDrawerOpen"],[123,29],[123,32,99,22],[123,44,99,28],[124,0,100,4],[124,14,100,9,"props"],[124,19,100,4],[124,20,100,15,"navigation"],[124,30,100,4],[124,31,100,26,"dispatch"],[124,39,100,4],[124,40,100,35],[125,0,101,6,"type"],[125,10,101,6,"type"],[125,14,101,10],[125,16,101,12,"DrawerActions"],[125,39,101,26,"DRAWER_OPENED"],[125,52,100,35],[126,0,102,6,"key"],[126,10,102,6,"key"],[126,13,102,9],[126,15,102,11],[126,21,102,16,"props"],[126,26,102,11],[126,27,102,22,"navigation"],[126,37,102,11],[126,38,102,33,"state"],[126,43,102,11],[126,44,102,39,"key"],[127,0,100,35],[127,9,100,4],[128,0,104,3],[128,7],[130,12,106,2,"_handleDrawerClose"],[130,30],[130,33,106,23],[130,45,106,29],[131,0,107,4],[131,14,107,9,"props"],[131,19,107,4],[131,20,107,15,"navigation"],[131,30,107,4],[131,31,107,26,"dispatch"],[131,39,107,4],[131,40,107,35],[132,0,108,6,"type"],[132,10,108,6,"type"],[132,14,108,10],[132,16,108,12,"DrawerActions"],[132,39,108,26,"DRAWER_CLOSED"],[132,52,107,35],[133,0,109,6,"key"],[133,10,109,6,"key"],[133,13,109,9],[133,15,109,11],[133,21,109,16,"props"],[133,26,109,11],[133,27,109,22,"navigation"],[133,37,109,11],[133,38,109,33,"state"],[133,43,109,11],[133,44,109,39,"key"],[134,0,107,35],[134,9,107,4],[135,0,111,3],[135,7],[137,12,113,2,"_updateWidth"],[137,24],[137,27,113,17],[137,39,113,23],[138,0,114,4],[138,12,114,10,"drawerWidth"],[138,23,114,21],[138,26,114,24],[138,33,114,31],[138,39,114,36,"props"],[138,44,114,31],[138,45,114,42,"navigationConfig"],[138,61,114,31],[138,62,114,59,"drawerWidth"],[138,73,114,24],[138,78,114,75],[138,88,114,24],[138,91,114,88],[138,97,114,93,"props"],[138,102,114,88],[138,103,114,99,"navigationConfig"],[138,119,114,88],[138,120,114,116,"drawerWidth"],[138,131,114,88],[138,133,114,24],[138,136,114,132],[138,142,114,137,"props"],[138,147,114,132],[138,148,114,143,"navigationConfig"],[138,164,114,132],[138,165,114,160,"drawerWidth"],[138,176,114,4],[140,0,116,4],[140,12,116,8],[140,18,116,13,"state"],[140,23,116,8],[140,24,116,19,"drawerWidth"],[140,35,116,8],[140,40,116,35,"drawerWidth"],[140,51,116,4],[140,53,116,48],[141,0,117,6],[141,16,117,11,"setState"],[141,24,117,6],[141,25,117,20],[142,0,117,22,"drawerWidth"],[142,12,117,22,"drawerWidth"],[142,23,117,33],[142,25,117,22,"drawerWidth"],[143,0,117,20],[143,11,117,6],[144,0,118,5],[145,0,119,3],[145,7],[147,12,121,2,"_renderNavigationView"],[147,33],[147,36,121,26],[147,48,121,32],[148,0,122,4],[148,15,122,11],[148,44,122,12],[148,73,122,11],[148,74,122,33],[148,82,122,11],[149,0,122,42],[149,10,122,42],[149,15,122,47],[149,17,122,49],[149,23,122,54,"drawerGestureRef"],[149,39,122,11],[150,0,122,11],[151,0,122,11],[152,0,122,11],[153,0,122,11],[154,0,122,11],[154,11,123,8],[154,40,123,9],[154,62,123,8],[155,0,123,23],[155,10,123,23],[155,21,123,34],[155,23,123,36],[155,29,123,41,"props"],[155,34,123,36],[155,35,123,47,"screenProps"],[155,46,123,8],[156,0,123,60],[156,10,123,60],[156,20,123,70],[156,22,123,72],[156,28,123,77,"props"],[156,33,123,72],[156,34,123,83,"navigation"],[156,44,123,8],[157,0,123,95],[157,10,123,95],[157,21,123,106],[157,23,123,108],[157,29,123,113,"props"],[157,34,123,108],[157,35,123,119,"descriptors"],[157,46,123,8],[158,0,123,132],[158,10,123,132],[158,26,123,148],[158,28,123,150],[158,34,123,155,"props"],[158,39,123,150],[158,40,123,161,"navigationConfig"],[158,56,123,150],[158,57,123,178,"contentComponent"],[158,73,123,8],[159,0,123,196],[159,10,123,196],[159,24,123,210],[159,26,123,212],[159,32,123,217,"props"],[159,37,123,212],[159,38,123,223,"navigationConfig"],[159,54,123,212],[159,55,123,240,"contentOptions"],[159,69,123,8],[160,0,123,256],[160,10,123,256],[160,24,123,270],[160,26,123,272],[160,32,123,277,"props"],[160,37,123,272],[160,38,123,283,"navigationConfig"],[160,54,123,272],[160,55,123,300,"drawerPosition"],[160,69,123,8],[161,0,123,316],[161,10,123,316],[161,15,123,321],[161,17,123,323],[161,23,123,328,"props"],[161,28,123,323],[161,29,123,334,"navigationConfig"],[161,45,123,323],[161,46,123,351,"style"],[162,0,123,8],[162,11,123,362],[162,17,123,367,"props"],[162,22,123,362],[162,23,123,373,"navigationConfig"],[162,39,123,8],[163,0,123,8],[164,0,123,8],[165,0,123,8],[166,0,123,8],[167,0,123,8],[167,11,122,11],[167,12,122,4],[168,0,125,3],[168,7],[170,12,127,2,"_renderContent"],[170,26],[170,29,127,19],[170,41,127,25],[171,0,127,25],[171,26,128,31],[171,32,128,36,"props"],[171,37,127,25],[172,0,127,25],[172,12,128,10,"lazy"],[172,16,127,25],[172,31,128,10,"lazy"],[172,35,127,25],[173,0,127,25],[173,12,128,16,"navigation"],[173,22,127,25],[173,37,128,16,"navigation"],[173,47,127,25],[174,0,127,25],[174,12,129,10,"loaded"],[174,18,127,25],[174,21,129,21],[174,27,129,26,"state"],[174,32,127,25],[174,33,129,10,"loaded"],[174,39,127,25],[175,0,127,25],[175,12,130,10,"routes"],[175,18,127,25],[175,21,130,21,"navigation"],[175,31,130,31],[175,32,130,32,"state"],[175,37,127,25],[175,38,130,10,"routes"],[175,44,127,25],[177,0,132,4],[177,12,132,8],[177,18,132,13,"props"],[177,23,132,8],[177,24,132,19,"navigationConfig"],[177,40,132,8],[177,41,132,36,"unmountInactiveRoutes"],[177,62,132,4],[177,64,132,59],[178,0,133,6],[178,14,133,10,"activeKey"],[178,23,133,19],[178,26,133,22,"navigation"],[178,36,133,32],[178,37,133,33,"state"],[178,42,133,22],[178,43,133,39,"routes"],[178,49,133,22],[178,50,133,46,"navigation"],[178,60,133,56],[178,61,133,57,"state"],[178,66,133,46],[178,67,133,63,"index"],[178,72,133,22],[178,74,133,70,"key"],[178,77,133,6],[179,0,134,6],[179,14,134,10,"descriptor"],[179,24,134,20],[179,27,134,23],[179,33,134,28,"props"],[179,38,134,23],[179,39,134,34,"descriptors"],[179,50,134,23],[179,51,134,46,"activeKey"],[179,60,134,23],[179,61,134,6],[180,0,136,6],[180,17,136,13],[180,46,136,14],[180,61,136,13],[181,0,136,24],[181,12,136,24],[181,22,136,34],[181,24,136,36,"descriptor"],[181,34,136,46],[181,35,136,47,"navigation"],[181,45,136,13],[182,0,136,59],[182,12,136,59],[182,23,136,70],[182,25,136,72],[182,31,136,77,"props"],[182,36,136,72],[182,37,136,83,"screenProps"],[182,48,136,13],[183,0,136,96],[183,12,136,96],[183,21,136,105],[183,23,136,107,"descriptor"],[183,33,136,117],[183,34,136,118,"getComponent"],[183,46,136,107],[183,48,136,13],[184,0,136,13],[185,0,136,13],[186,0,136,13],[187,0,136,13],[188,0,136,13],[188,12,136,6],[189,0,137,5],[189,9,132,4],[189,15,137,11],[190,0,138,6],[190,17,138,13],[190,46,138,14],[190,81,138,13],[191,0,138,30],[191,12,138,30],[191,17,138,35],[191,19,138,37,"styles"],[191,25,138,43],[191,26,138,44,"pages"],[191,31,138,13],[192,0,138,13],[193,0,138,13],[194,0,138,13],[195,0,138,13],[196,0,138,13],[196,13,139,11,"routes"],[196,19,139,17],[196,20,139,18,"map"],[196,23,139,11],[196,24,139,22],[196,34,139,23,"route"],[196,39,139,22],[196,41,139,30,"index"],[196,46,139,22],[196,48,139,40],[197,0,140,10],[197,16,140,14,"lazy"],[197,20,140,18],[197,24,140,22],[197,25,140,23,"loaded"],[197,31,140,29],[197,32,140,30,"includes"],[197,40,140,23],[197,41,140,39,"index"],[197,46,140,23],[197,47,140,10],[197,49,140,47],[198,0,142,12],[198,21,142,19],[198,25,142,12],[199,0,143,11],[201,0,145,10],[201,16,145,14,"isFocused"],[201,25,145,23],[201,28,145,26,"navigation"],[201,38,145,36],[201,39,145,37,"state"],[201,44,145,26],[201,45,145,43,"index"],[201,50,145,26],[201,55,145,53,"index"],[201,60,145,10],[202,0,146,10],[202,16,146,14,"descriptor"],[202,26,146,24],[202,29,146,27],[202,35,146,32,"props"],[202,40,146,27],[202,41,146,38,"descriptors"],[202,52,146,27],[202,53,146,50,"route"],[202,58,146,55],[202,59,146,56,"key"],[202,62,146,27],[202,63,146,10],[203,0,148,10],[203,19,148,17],[203,48,148,18],[203,76,148,17],[204,0,148,38],[204,14,148,38],[204,17,148,41],[204,19,148,43,"route"],[204,24,148,48],[204,25,148,49,"key"],[204,28,148,17],[205,0,148,54],[205,14,148,54],[205,19,148,59],[205,21,148,61],[205,22,148,62,"StyleSheet"],[205,46,148,73,"absoluteFill"],[205,58,148,61],[205,60,148,87],[206,0,148,89,"opacity"],[206,16,148,89,"opacity"],[206,23,148,96],[206,25,148,98,"isFocused"],[206,34,148,107],[206,37,148,110],[206,38,148,107],[206,41,148,114],[207,0,148,87],[207,15,148,61],[207,16,148,17],[208,0,148,120],[208,14,148,120],[208,23,148,129],[208,25,148,131,"isFocused"],[208,34,148,17],[209,0,148,17],[210,0,148,17],[211,0,148,17],[212,0,148,17],[213,0,148,17],[213,15,149,16],[213,44,149,17],[213,59,149,16],[214,0,149,27],[214,14,149,27],[214,24,149,37],[214,26,149,39,"descriptor"],[214,36,149,49],[214,37,149,50,"navigation"],[214,47,149,16],[215,0,149,62],[215,14,149,62],[215,25,149,73],[215,27,149,75],[215,33,149,80,"props"],[215,38,149,75],[215,39,149,86,"screenProps"],[215,50,149,16],[216,0,149,99],[216,14,149,99],[216,23,149,108],[216,25,149,110,"descriptor"],[216,35,149,120],[216,36,149,121,"getComponent"],[216,48,149,110],[216,50,149,16],[217,0,149,16],[218,0,149,16],[219,0,149,16],[220,0,149,16],[221,0,149,16],[221,14,148,17],[221,15,148,10],[222,0,151,9],[222,11,139,11],[222,12,138,13],[222,13,138,6],[223,0,153,5],[224,0,154,3],[224,7],[231,42,34,22],[232,0,35,4,"Dimensions"],[232,32,35,15,"addEventListener"],[232,48,35,4],[232,49,35,32],[232,57,35,4],[232,59,35,42],[232,64,35,47,"_updateWidth"],[232,76,35,4],[233,0,36,3],[236,41,38,21,"prevProps"],[236,50],[236,52,38,32],[237,0,38,32],[239,0,38,32],[239,36,44,8],[239,41,44,13,"props"],[239,46,44,8],[239,47,44,19,"navigation"],[239,57,44,8],[239,58,44,30,"state"],[239,63,38,32],[240,0,38,32],[240,12,40,6,"openId"],[240,18,38,32],[240,43,40,6,"openId"],[240,49,38,32],[241,0,38,32],[241,12,41,6,"closeId"],[241,19,38,32],[241,44,41,6,"closeId"],[241,51,38,32],[242,0,38,32],[242,12,42,6,"toggleId"],[242,20,38,32],[242,45,42,6,"toggleId"],[242,53,38,32],[243,0,38,32],[243,12,43,6,"isDrawerOpen"],[243,24,38,32],[243,49,43,6,"isDrawerOpen"],[243,61,38,32],[244,0,38,32],[244,36,49,8,"prevProps"],[244,45,49,17],[244,46,49,18,"navigation"],[244,56,49,8],[244,57,49,29,"state"],[244,62,38,32],[245,0,38,32],[245,12,46,14,"prevOpenId"],[245,22,38,32],[245,47,46,6,"openId"],[245,53,38,32],[246,0,38,32],[246,12,47,15,"prevCloseId"],[246,23,38,32],[246,48,47,6,"closeId"],[246,55,38,32],[247,0,38,32],[247,12,48,16,"prevToggleId"],[247,24,38,32],[247,49,48,6,"toggleId"],[247,57,38,32],[248,0,51,4],[248,12,51,8,"prevIds"],[248,19,51,15],[248,22,51,18],[248,23,51,19,"prevOpenId"],[248,33,51,18],[248,35,51,31,"prevCloseId"],[248,46,51,18],[248,48,51,44,"prevToggleId"],[248,60,51,18],[248,61,51,4],[249,0,52,4],[249,12,52,8,"changedIds"],[249,22,52,18],[249,25,52,21],[249,26,52,22,"openId"],[249,32,52,21],[249,34,52,30,"closeId"],[249,41,52,21],[249,43,52,39,"toggleId"],[249,51,52,21],[249,53,52,49,"filter"],[249,59,52,21],[249,60,52,56],[249,70,52,56,"id"],[249,72,52,58],[250,0,52,58],[250,17,52,62],[250,18,52,63,"prevIds"],[250,25,52,70],[250,26,52,71,"includes"],[250,34,52,63],[250,35,52,80,"id"],[250,37,52,63],[250,38,52,58],[251,0,52,58],[251,9,52,21],[251,11,52,85,"sort"],[251,15,52,21],[251,16,52,90],[251,26,52,91,"a"],[251,27,52,90],[251,29,52,94,"b"],[251,30,52,90],[252,0,52,90],[252,17,52,100,"a"],[252,18,52,101],[252,21,52,104,"b"],[252,22,52,90],[253,0,52,90],[253,9,52,21],[253,10,52,4],[254,0,54,4,"changedIds"],[254,8,54,4,"changedIds"],[254,18,54,14],[254,19,54,15,"forEach"],[254,26,54,4],[254,27,54,23],[254,37,54,23,"id"],[254,39,54,25],[254,41,54,29],[255,0,55,6],[255,14,55,10,"id"],[255,16,55,12],[255,21,55,17,"openId"],[255,27,55,6],[255,29,55,25],[256,0,56,8],[256,12,56,8],[256,18,56,12],[256,19,56,13,"_drawer"],[256,26,56,8],[256,27,56,21,"openDrawer"],[256,37,56,8],[257,0,57,7],[257,11,55,6],[257,17,57,13],[257,21,57,17,"id"],[257,23,57,19],[257,28,57,24,"closeId"],[257,35,57,13],[257,37,57,33],[258,0,58,8],[258,12,58,8],[258,18,58,12],[258,19,58,13,"_drawer"],[258,26,58,8],[258,27,58,21,"closeDrawer"],[258,38,58,8],[259,0,59,7],[259,11,57,13],[259,17,59,13],[259,21,59,17,"id"],[259,23,59,19],[259,28,59,24,"toggleId"],[259,36,59,13],[259,38,59,34],[260,0,60,8],[260,16,60,12,"isDrawerOpen"],[260,28,60,8],[260,30,60,26],[261,0,61,10],[261,14,61,10],[261,20,61,14],[261,21,61,15,"_drawer"],[261,28,61,10],[261,29,61,23,"closeDrawer"],[261,40,61,10],[262,0,62,9],[262,13,60,8],[262,19,62,15],[263,0,63,10],[263,14,63,10],[263,20,63,14],[263,21,63,15,"_drawer"],[263,28,63,10],[263,29,63,23,"openDrawer"],[263,39,63,10],[264,0,64,9],[265,0,65,7],[266,0,66,5],[266,9,54,4],[267,0,67,3],[270,45,69,25],[271,0,70,4,"Dimensions"],[271,32,70,15,"removeEventListener"],[271,51,70,4],[271,52,70,35],[271,60,70,4],[271,62,70,45],[271,67,70,50,"_updateWidth"],[271,79,70,4],[272,0,71,3],[275,31,156,11],[276,0,156,11],[278,0,156,11],[278,12,157,12,"navigation"],[278,22,156,11],[278,25,157,27],[278,30,157,32,"props"],[278,35,156,11],[278,36,157,12,"navigation"],[278,46,156,11],[279,0,158,4],[279,12,158,10,"activeKey"],[279,21,158,19],[279,24,158,22,"navigation"],[279,34,158,32],[279,35,158,33,"state"],[279,40,158,22],[279,41,158,39,"routes"],[279,47,158,22],[279,48,158,46,"navigation"],[279,58,158,56],[279,59,158,57,"state"],[279,64,158,46],[279,65,158,63,"index"],[279,70,158,22],[279,72,158,70,"key"],[279,75,158,4],[280,0,156,11],[280,12,159,12,"drawerLockMode"],[280,26,156,11],[280,29,159,31],[280,34,159,36,"props"],[280,39,159,31],[280,40,159,42,"descriptors"],[280,51,159,31],[280,52,159,54,"activeKey"],[280,61,159,31],[280,63,159,65,"options"],[280,70,156,11],[280,71,159,12,"drawerLockMode"],[280,85,156,11],[281,0,161,4],[281,15,161,11],[281,44,161,12],[281,65,161,11],[282,0,161,25],[282,10,161,25],[282,13,161,28],[282,15,161,30],[282,28,161,30,"c"],[282,29,161,31],[282,31,161,35],[283,0,162,6],[283,12,162,6],[283,18,162,10],[283,19,162,11,"_drawer"],[283,26,162,6],[283,29,162,21,"c"],[283,30,162,6],[284,0,163,5],[284,11,161,11],[285,0,163,7],[285,10,163,7],[285,20,163,17],[285,22,163,19],[285,27,163,24,"drawerGestureRef"],[285,43,161,11],[286,0,163,42],[286,10,163,42],[286,24,163,56],[286,26,163,58,"drawerLockMode"],[286,40,163,72],[286,44,163,76],[286,49,163,81,"props"],[286,54,163,76],[286,55,163,87,"screenProps"],[286,66,163,76],[286,70,163,102],[286,75,163,107,"props"],[286,80,163,102],[286,81,163,113,"screenProps"],[286,92,163,102],[286,93,163,125,"drawerLockMode"],[286,107,163,58],[286,111,163,143],[286,116,163,148,"props"],[286,121,163,143],[286,122,163,154,"navigationConfig"],[286,138,163,143],[286,139,163,171,"drawerLockMode"],[286,153,161,11],[287,0,163,187],[287,10,163,187],[287,31,163,208],[287,33,163,210],[287,38,163,215,"props"],[287,43,163,210],[287,44,163,221,"navigationConfig"],[287,60,163,210],[287,61,163,238,"drawerBackgroundColor"],[287,82,161,11],[288,0,163,261],[288,10,163,261],[288,29,163,280],[288,31,163,282],[288,36,163,287,"props"],[288,41,163,282],[288,42,163,293,"navigationConfig"],[288,58,163,282],[288,59,163,310,"keyboardDismissMode"],[288,78,161,11],[289,0,163,331],[289,10,163,331],[289,21,163,342],[289,23,163,344],[289,28,163,349,"state"],[289,33,163,344],[289,34,163,355,"drawerWidth"],[289,45,161,11],[290,0,163,368],[290,10,163,368],[290,22,163,380],[290,24,163,382],[290,29,163,387,"_handleDrawerOpen"],[290,46,161,11],[291,0,163,406],[291,10,163,406],[291,23,163,419],[291,25,163,421],[291,30,163,426,"_handleDrawerClose"],[291,48,161,11],[292,0,163,446],[292,10,163,446],[292,30,163,466],[292,32,163,468],[292,37,163,473,"_handleDrawerStateChange"],[292,61,161,11],[293,0,163,499],[293,10,163,499],[293,29,163,518],[293,31,163,520],[293,36,163,525,"props"],[293,41,163,520],[293,42,163,531,"navigationConfig"],[293,58,163,520],[293,59,163,548,"useNativeAnimations"],[293,78,161,11],[294,0,163,569],[294,10,163,569],[294,30,163,589],[294,32,163,591],[294,37,163,596,"_renderNavigationView"],[294,58,161,11],[295,0,163,619],[295,10,163,619],[295,24,163,633],[295,26,163,635],[295,31,163,640,"props"],[295,36,163,635],[295,37,163,646,"navigationConfig"],[295,53,163,635],[295,54,163,663,"drawerPosition"],[295,68,163,635],[295,73,163,682],[295,80,163,635],[295,83,163,692,"DrawerLayout"],[295,105,163,705,"positions"],[295,114,163,692],[295,115,163,715,"Right"],[295,120,163,635],[295,123,163,723,"DrawerLayout"],[295,145,163,736,"positions"],[295,154,163,723],[295,155,163,746,"Left"],[295,159,161,11],[296,0,165,4],[296,10,165,4],[296,20,165,14],[296,22,165,16],[296,27,165,21,"props"],[296,32,165,16],[296,33,165,27,"navigationConfig"],[296,49,165,16],[296,50,165,44,"drawerType"],[296,60,161,11],[297,0,165,56],[297,10,165,56],[297,19,165,65],[297,21,165,67],[297,26,165,72,"props"],[297,31,165,67],[297,32,165,78,"navigationConfig"],[297,48,165,67],[297,49,165,95,"edgeWidth"],[297,58,161,11],[298,0,165,106],[298,10,165,106],[298,23,165,119],[298,25,165,121],[298,30,165,126,"props"],[298,35,165,121],[298,36,165,132,"navigationConfig"],[298,52,165,121],[298,53,165,149,"hideStatusBar"],[298,66,161,11],[299,0,165,164],[299,10,165,164],[299,28,165,182],[299,30,165,184],[299,35,165,189,"props"],[299,40,165,184],[299,41,165,195,"navigationConfig"],[299,57,165,184],[299,58,165,212,"statusBarAnimation"],[299,76,161,11],[300,0,165,232],[300,10,165,232],[300,26,165,248],[300,28,165,250],[300,33,165,255,"props"],[300,38,165,250],[300,39,165,261,"navigationConfig"],[300,55,165,250],[300,56,165,278,"minSwipeDistance"],[300,72,161,11],[301,0,165,296],[301,10,165,296],[301,22,165,308],[301,24,165,310],[301,29,165,315,"props"],[301,34,165,310],[301,35,165,321,"navigationConfig"],[301,51,165,310],[301,52,165,338,"overlayColor"],[301,64,161,11],[302,0,165,352],[302,10,165,352],[302,31,165,373],[302,33,165,375],[302,38,165,380,"props"],[302,43,165,375],[302,44,165,386,"navigationConfig"],[302,60,165,375],[302,61,165,403,"contentContainerStyle"],[302,82,161,11],[303,0,161,11],[304,0,161,11],[305,0,161,11],[306,0,161,11],[307,0,161,11],[307,11,166,8],[307,40,166,9],[307,69,166,8],[307,70,166,30],[307,78,166,8],[308,0,166,39],[308,10,166,39],[308,15,166,44],[308,17,166,46],[308,22,166,51,"drawerGestureRef"],[308,38,166,8],[309,0,166,8],[310,0,166,8],[311,0,166,8],[312,0,166,8],[313,0,166,8],[313,11,167,11],[313,16,167,16,"_renderContent"],[313,30,167,11],[313,32,166,8],[313,33,161,11],[313,34,161,4],[314,0,170,3],[317,47,20,34,"nextProps"],[317,56],[317,58,20,45,"prevState"],[317,67],[317,69,20,56],[318,0,20,56],[318,12,21,12,"index"],[318,17,20,56],[318,20,21,22,"nextProps"],[318,29,21,31],[318,30,21,32,"navigation"],[318,40,21,22],[318,41,21,43,"state"],[318,46,20,56],[318,47,21,12,"index"],[318,52,20,56],[319,0,23,4],[319,15,23,11],[320,0,25,6,"loaded"],[320,10,25,6,"loaded"],[320,16,25,12],[320,18,25,14,"prevState"],[320,27,25,23],[320,28,25,24,"loaded"],[320,34,25,14],[320,35,25,31,"includes"],[320,43,25,14],[320,44,25,40,"index"],[320,49,25,14],[320,53,25,49,"prevState"],[320,62,25,58],[320,63,25,59,"loaded"],[320,69,25,14],[320,101,25,72,"prevState"],[320,110,25,81],[320,111,25,82,"loaded"],[320,117,25,14],[320,121,25,90,"index"],[320,126,25,14],[321,0,23,11],[321,9,23,4],[322,0,27,3],[326,4,15,40,"React"],[326,19,15,46,"PureComponent"],[326,32],[326,42,16,9,"defaultProps"],[326,54],[326,57,16,24],[327,0,17,4,"lazy"],[327,4,17,4,"lazy"],[327,8,17,8],[327,10,17,10],[328,0,16,24],[328,3],[333,0,173,0],[333,6,173,6,"styles"],[333,12,173,12],[333,15,173,15,"StyleSheet"],[333,39,173,26,"create"],[333,45,173,15],[333,46,173,33],[334,0,174,2,"pages"],[334,4,174,2,"pages"],[334,9,174,7],[334,11,174,9],[335,0,175,4,"flex"],[335,6,175,4,"flex"],[335,10,175,8],[335,12,175,10],[336,0,174,9],[337,0,173,33],[337,3,173,15],[337,4,173,0]]},"type":"js/module"}]}