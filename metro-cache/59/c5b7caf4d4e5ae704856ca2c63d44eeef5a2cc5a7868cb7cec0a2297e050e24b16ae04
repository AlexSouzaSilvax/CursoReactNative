{"dependencies":[{"name":"react","data":{"isAsync":false}},{"name":"./../../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"expo-font","data":{"isAsync":false}},{"name":"./vendor/react-native-vector-icons/lib/create-icon-set","data":{"isAsync":false}},{"name":"./vendor/react-native-vector-icons/lib/icon-button","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _default2;\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../../react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n\n  var _expoFont = _$$_REQUIRE(_dependencyMap[3], \"expo-font\");\n\n  var _createIconSet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./vendor/react-native-vector-icons/lib/create-icon-set\"));\n\n  var _iconButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./vendor/react-native-vector-icons/lib/icon-button\"));\n\n  var _jsxFileName = \"/home/alex/Documentos/CursoReactNative/node_modules/@expo/vector-icons/createIconSet.js\";\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  var _components = {\n    Icon: {\n      displayName: \"Icon\",\n      isInFunction: true\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/alex/Documentos/CursoReactNative/node_modules/@expo/vector-icons/createIconSet.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  function _default2(glyphMap, fontName, expoAssetId) {\n    var font = _defineProperty({}, fontName, expoAssetId);\n\n    var RNVIconComponent = (0, _createIconSet.default)(glyphMap, fontName);\n\n    var Icon = function (_React$Component) {\n      _inherits(Icon, _React$Component);\n\n      function Icon() {\n        var _getPrototypeOf2;\n\n        var _this;\n\n        _classCallCheck(this, Icon);\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Icon)).call.apply(_getPrototypeOf2, [this].concat(args)));\n        _this.state = {\n          fontIsLoaded: _expoFont.Font.isLoaded(fontName)\n        };\n        return _this;\n      }\n\n      _createClass(Icon, [{\n        key: \"componentWillMount\",\n        value: function componentWillMount() {\n          return regeneratorRuntime.async(function componentWillMount$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  this._mounted = true;\n\n                  if (this.state.fontIsLoaded) {\n                    _context.next = 5;\n                    break;\n                  }\n\n                  _context.next = 4;\n                  return regeneratorRuntime.awrap(_expoFont.Font.loadAsync(font));\n\n                case 4:\n                  this._mounted && this.setState({\n                    fontIsLoaded: true\n                  });\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, null, this);\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          this._mounted = false;\n        }\n      }, {\n        key: \"setNativeProps\",\n        value: function setNativeProps(props) {\n          if (this._icon) {\n            this._icon.setNativeProps(props);\n          }\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var _this2 = this;\n\n          if (!this.state.fontIsLoaded) {\n            return _react.default.createElement(_reactNative.Text, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 39\n              }\n            });\n          }\n\n          return _react.default.createElement(RNVIconComponent, _extends({\n            ref: function ref(view) {\n              _this2._icon = view;\n            }\n          }, this.props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43\n            }\n          }));\n        }\n      }]);\n\n      return Icon;\n    }(_react.default.Component);\n\n    Icon.propTypes = RNVIconComponent.propTypes;\n    Icon.defaultProps = RNVIconComponent.defaultProps;\n    Icon = _wrapComponent(\"Icon\")(Icon);\n\n    function getRawGlyphMap() {\n      return glyphMap;\n    }\n\n    Icon.Button = (0, _iconButton.default)(Icon);\n    Icon.glyphMap = glyphMap;\n    Icon.getRawGlyphMap = getRawGlyphMap;\n\n    Icon.getFontFamily = function () {\n      return fontName;\n    };\n\n    Icon.loadFont = function () {\n      return _expoFont.Font.loadAsync(font);\n    };\n\n    Icon.font = font;\n    return Icon;\n  }\n});","map":[[7,0,1,0],[11,0,2,0],[13,0,3,0],[15,0,4,0],[17,0,5,0],[63,0,7,15],[63,21,7,24,"glyphMap"],[63,29,7,15],[63,31,7,34,"fontName"],[63,39,7,15],[63,41,7,44,"expoAssetId"],[63,52,7,15],[63,54,7,57],[64,0,8,2],[64,8,8,8,"font"],[64,12,8,12],[64,35,8,18,"fontName"],[64,43,8,12],[64,45,8,29,"expoAssetId"],[64,56,8,12],[64,57,8,2],[66,0,9,2],[66,8,9,8,"RNVIconComponent"],[66,24,9,24],[66,27,9,27],[66,55,9,41,"glyphMap"],[66,63,9,27],[66,65,9,51,"fontName"],[66,73,9,27],[66,74,9,2],[68,0,7,57],[68,8,11,8,"Icon"],[68,12,7,57],[69,0,7,57],[71,0,7,57],[72,0,7,57],[74,0,7,57],[76,0,7,57],[78,0,7,57],[79,0,7,57],[80,0,7,57],[82,0,7,57],[83,0,7,57],[83,14,15,4,"state"],[83,19,7,57],[83,22,15,12],[84,0,16,6,"fontIsLoaded"],[84,10,16,6,"fontIsLoaded"],[84,22,16,18],[84,24,16,20,"Font"],[84,39,16,25,"isLoaded"],[84,47,16,20],[84,48,16,34,"fontName"],[84,56,16,20],[85,0,15,12],[85,9,7,57],[86,0,7,57],[87,0,7,57],[89,0,7,57],[90,0,7,57],[91,0,7,57],[92,0,7,57],[93,0,7,57],[94,0,7,57],[95,0,7,57],[96,0,20,6],[96,23,20,11,"_mounted"],[96,31,20,6],[96,34,20,22],[96,38,20,6],[98,0,7,57],[98,22,21,11],[98,27,21,16,"state"],[98,32,21,11],[98,33,21,22,"fontIsLoaded"],[98,45,7,57],[99,0,7,57],[100,0,7,57],[101,0,7,57],[103,0,7,57],[104,0,7,57],[104,50,22,14,"Font"],[104,65,22,19,"loadAsync"],[104,74,22,14],[104,75,22,29,"font"],[104,79,22,14],[104,80,7,57],[106,0,7,57],[107,0,23,8],[107,23,23,13,"_mounted"],[107,31,23,8],[107,35,23,25],[107,40,23,30,"setState"],[107,48,23,25],[107,49,23,39],[108,0,23,41,"fontIsLoaded"],[108,20,23,41,"fontIsLoaded"],[108,32,23,53],[108,34,23,55],[109,0,23,39],[109,19,23,25],[109,20,23,8],[111,0,7,57],[112,0,7,57],[113,0,7,57],[114,0,7,57],[115,0,7,57],[116,0,7,57],[117,0,7,57],[118,0,7,57],[119,0,7,57],[120,0,7,57],[120,47,27,27],[121,0,28,6],[121,15,28,11,"_mounted"],[121,23,28,6],[121,26,28,22],[121,31,28,6],[122,0,29,5],[123,0,7,57],[124,0,7,57],[125,0,7,57],[125,39,31,19,"props"],[125,44,7,57],[125,46,31,26],[126,0,32,6],[126,14,32,10],[126,19,32,15,"_icon"],[126,24,32,6],[126,26,32,22],[127,0,33,8],[127,17,33,13,"_icon"],[127,22,33,8],[127,23,33,19,"setNativeProps"],[127,37,33,8],[127,38,33,34,"props"],[127,43,33,8],[128,0,34,7],[129,0,35,5],[130,0,7,57],[131,0,7,57],[132,0,7,57],[132,33,37,13],[133,0,37,13],[135,0,38,6],[135,14,38,10],[135,15,38,11],[135,20,38,16,"state"],[135,25,38,11],[135,26,38,22,"fontIsLoaded"],[135,38,38,6],[135,40,38,36],[136,0,39,8],[136,19,39,15],[136,48,39,16],[136,65,39,15],[137,0,39,15],[138,0,39,15],[139,0,39,15],[140,0,39,15],[141,0,39,15],[141,14,39,8],[142,0,40,7],[144,0,42,6],[144,17,43,8],[144,46,43,9],[144,62,43,8],[145,0,44,10],[145,12,44,10],[145,15,44,13],[145,17,44,15],[145,30,44,15,"view"],[145,34,44,19],[145,36,44,23],[146,0,45,12],[146,14,45,12],[146,20,45,16],[146,21,45,17,"_icon"],[146,26,45,12],[146,29,45,25,"view"],[146,33,45,12],[147,0,46,11],[148,0,43,8],[148,13,47,14],[148,18,47,19,"props"],[148,23,43,8],[149,0,43,8],[150,0,43,8],[151,0,43,8],[152,0,43,8],[153,0,43,8],[153,13,42,6],[154,0,50,5],[155,0,7,57],[157,0,7,57],[158,0,7,57],[158,6,11,21,"React"],[158,21,11,27,"Component"],[158,30,7,57],[160,0,11,8,"Icon"],[160,4,11,8,"Icon"],[160,8,7,57],[160,9,12,11,"propTypes"],[160,18,7,57],[160,21,12,23,"RNVIconComponent"],[160,37,12,39],[160,38,12,40,"propTypes"],[160,47,7,57],[161,0,11,8,"Icon"],[161,4,11,8,"Icon"],[161,8,7,57],[161,9,13,11,"defaultProps"],[161,21,7,57],[161,24,13,26,"RNVIconComponent"],[161,40,13,42],[161,41,13,43,"defaultProps"],[161,53,7,57],[162,0,7,57],[164,0,53,2],[164,13,53,11,"getRawGlyphMap"],[164,27,53,2],[164,30,53,28],[165,0,54,4],[165,13,54,11,"glyphMap"],[165,21,54,4],[166,0,55,3],[168,0,57,2,"Icon"],[168,4,57,2,"Icon"],[168,8,57,6],[168,9,57,7,"Button"],[168,15,57,2],[168,18,57,16],[168,43,57,42,"Icon"],[168,47,57,16],[168,48,57,2],[169,0,58,2,"Icon"],[169,4,58,2,"Icon"],[169,8,58,6],[169,9,58,7,"glyphMap"],[169,17,58,2],[169,20,58,18,"glyphMap"],[169,28,58,2],[170,0,59,2,"Icon"],[170,4,59,2,"Icon"],[170,8,59,6],[170,9,59,7,"getRawGlyphMap"],[170,23,59,2],[170,26,59,24,"getRawGlyphMap"],[170,40,59,2],[172,0,60,2,"Icon"],[172,4,60,2,"Icon"],[172,8,60,6],[172,9,60,7,"getFontFamily"],[172,22,60,2],[172,25,60,23],[173,0,60,23],[173,13,60,29,"fontName"],[173,21,60,23],[174,0,60,23],[174,5,60,2],[176,0,61,2,"Icon"],[176,4,61,2,"Icon"],[176,8,61,6],[176,9,61,7,"loadFont"],[176,17,61,2],[176,20,61,18],[177,0,61,18],[177,13,61,24,"Font"],[177,28,61,29,"loadAsync"],[177,37,61,24],[177,38,61,39,"font"],[177,42,61,24],[177,43,61,18],[178,0,61,18],[178,5,61,2],[180,0,62,2,"Icon"],[180,4,62,2,"Icon"],[180,8,62,6],[180,9,62,7,"font"],[180,13,62,2],[180,16,62,14,"font"],[180,20,62,2],[181,0,64,2],[181,11,64,9,"Icon"],[181,15,64,2],[182,0,65,1]]},"type":"js/module"}]}