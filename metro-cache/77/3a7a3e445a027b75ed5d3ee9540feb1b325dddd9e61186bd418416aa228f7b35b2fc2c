{"dependencies":[{"name":"./DeviceSensor","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _DeviceSensor2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"./DeviceSensor\"));\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  var ThreeAxisSensor = function (_DeviceSensor) {\n    _inherits(ThreeAxisSensor, _DeviceSensor);\n\n    function ThreeAxisSensor() {\n      _classCallCheck(this, ThreeAxisSensor);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(ThreeAxisSensor).apply(this, arguments));\n    }\n\n    return ThreeAxisSensor;\n  }(_DeviceSensor2.default);\n\n  exports.default = ThreeAxisSensor;\n});","map":[[7,0,3,0],[23,6,14,21,"ThreeAxisSensor"],[23,21],[33,4,14,45,"DeviceSensor"],[33,26]]},"type":"js/module"}]}