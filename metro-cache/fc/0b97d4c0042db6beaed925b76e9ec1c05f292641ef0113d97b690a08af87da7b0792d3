{"dependencies":[{"name":"lodash","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./extractLengthList","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.extractFont = extractFont;\n  exports.default = _default;\n\n  var _lodash = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"lodash\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1], \"react\"));\n\n  var _extractLengthList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"./extractLengthList\"));\n\n  var _jsxFileName = \"/home/alex/Documentos/CursoReactNative/node_modules/react-native-svg/lib/extract/extractText.js\";\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  var fontRegExp = /^\\s*((?:(?:normal|bold|italic)\\s+)*)(?:(\\d+(?:\\.\\d+)?[ptexm%])*(?:\\s*\\/.*?)?\\s+)?\\s*\"?([^\"]*)/i;\n  var fontFamilyPrefix = /^[\\s\"']*/;\n  var fontFamilySuffix = /[\\s\"']*$/;\n  var commaReg = /\\s*,\\s*/g;\n  var cachedFontObjectsFromString = {};\n\n  function extractSingleFontFamily(fontFamilyString) {\n    return fontFamilyString ? fontFamilyString.split(commaReg)[0].replace(fontFamilyPrefix, \"\").replace(fontFamilySuffix, \"\") : null;\n  }\n\n  function parseFontString(font) {\n    if (cachedFontObjectsFromString.hasOwnProperty(font)) {\n      return cachedFontObjectsFromString[font];\n    }\n\n    var match = fontRegExp.exec(font);\n\n    if (!match) {\n      return null;\n    }\n\n    var fontFamily = extractSingleFontFamily(match[3]);\n    var fontSize = match[2] || \"12\";\n    var isBold = /bold/.exec(match[1]);\n    var isItalic = /italic/.exec(match[1]);\n    var fontWeight = isBold ? \"bold\" : \"normal\";\n    var fontStyle = isItalic ? \"italic\" : \"normal\";\n    cachedFontObjectsFromString[font] = {\n      fontSize: fontSize,\n      fontFamily: fontFamily,\n      fontWeight: fontWeight,\n      fontStyle: fontStyle\n    };\n    return cachedFontObjectsFromString[font];\n  }\n\n  function extractFont(prop) {\n    var props = _objectSpread({}, prop.style, prop);\n\n    var fontData = props.fontData,\n        fontStyle = props.fontStyle,\n        fontVariant = props.fontVariant,\n        fontWeight = props.fontWeight,\n        fontStretch = props.fontStretch,\n        textAnchor = props.textAnchor,\n        textDecoration = props.textDecoration,\n        letterSpacing = props.letterSpacing,\n        wordSpacing = props.wordSpacing,\n        kerning = props.kerning,\n        fontVariantLigatures = props.fontVariantLigatures,\n        fontFeatureSettings = props.fontFeatureSettings;\n    var fontSize = props.fontSize,\n        fontFamily = props.fontFamily,\n        font = props.font;\n    fontFamily = extractSingleFontFamily(fontFamily);\n    fontSize = fontSize ? \"\" + fontSize : null;\n\n    var ownedFont = _lodash.default.pickBy({\n      fontData: fontData,\n      fontStyle: fontStyle,\n      fontVariant: fontVariant,\n      fontWeight: fontWeight,\n      fontStretch: fontStretch,\n      fontSize: fontSize,\n      fontFamily: fontFamily,\n      textAnchor: textAnchor,\n      textDecoration: textDecoration,\n      letterSpacing: letterSpacing,\n      wordSpacing: wordSpacing,\n      kerning: kerning,\n      fontVariantLigatures: fontVariantLigatures,\n      fontFeatureSettings: fontFeatureSettings\n    }, function (p) {\n      return !_lodash.default.isNil(p);\n    });\n\n    if (typeof font === \"string\") {\n      font = parseFontString(font);\n    }\n\n    return _lodash.default.defaults(ownedFont, font);\n  }\n\n  function _default(props) {\n    var container = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var TSpan = arguments.length > 2 ? arguments[2] : undefined;\n    var x = props.x,\n        y = props.y,\n        dx = props.dx,\n        dy = props.dy,\n        rotate = props.rotate,\n        baselineShift = props.baselineShift,\n        verticalAlign = props.verticalAlign,\n        alignmentBaseline = props.alignmentBaseline;\n    var children = props.children;\n    var content = null;\n\n    if (typeof children === \"string\" || typeof children === \"number\") {\n      var childrenString = children.toString();\n\n      if (container) {\n        children = _react.default.createElement(TSpan, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          }\n        }, childrenString);\n      } else {\n        content = childrenString;\n        children = null;\n      }\n    } else if (_react.Children.count(children) > 1 || Array.isArray(children)) {\n      children = _react.Children.map(children, function (child) {\n        if (typeof child === \"string\" || typeof child === \"number\") {\n          return _react.default.createElement(TSpan, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            }\n          }, child.toString());\n        } else {\n          return child;\n        }\n      });\n    }\n\n    return {\n      content: content,\n      children: children,\n      baselineShift: baselineShift,\n      verticalAlign: verticalAlign,\n      alignmentBaseline: alignmentBaseline,\n      font: extractFont(props),\n      x: (0, _extractLengthList.default)(x),\n      y: (0, _extractLengthList.default)(y),\n      dx: (0, _extractLengthList.default)(dx),\n      dy: (0, _extractLengthList.default)(dy),\n      rotate: (0, _extractLengthList.default)(rotate)\n    };\n  }\n});","map":[[8,0,1,0],[10,0,3,0],[12,0,4,0],[24,0,6,0],[24,6,6,6,"fontRegExp"],[24,16,6,16],[24,19,6,19],[24,115,6,0],[25,0,7,0],[25,6,7,6,"fontFamilyPrefix"],[25,22,7,22],[25,25,7,25],[25,35,7,0],[26,0,8,0],[26,6,8,6,"fontFamilySuffix"],[26,22,8,22],[26,25,8,25],[26,35,8,0],[27,0,9,0],[27,6,9,6,"commaReg"],[27,14,9,14],[27,17,9,17],[27,27,9,0],[28,0,11,0],[28,6,11,6,"cachedFontObjectsFromString"],[28,33,11,33],[28,36,11,36],[28,38,11,0],[30,0,13,0],[30,11,13,9,"extractSingleFontFamily"],[30,34,13,0],[30,35,13,33,"fontFamilyString"],[30,51,13,0],[30,53,13,51],[31,0,17,4],[31,11,17,11,"fontFamilyString"],[31,27,17,27],[31,30,18,10,"fontFamilyString"],[31,46,18,26],[31,47,19,15,"split"],[31,52,18,10],[31,53,19,21,"commaReg"],[31,61,18,10],[31,63,19,31],[31,64,18,10],[31,66,20,15,"replace"],[31,73,18,10],[31,74,20,23,"fontFamilyPrefix"],[31,90,18,10],[31,92,20,41],[31,94,18,10],[31,96,21,15,"replace"],[31,103,18,10],[31,104,21,23,"fontFamilySuffix"],[31,120,18,10],[31,122,21,41],[31,124,18,10],[31,125,17,27],[31,128,22,10],[31,132,17,4],[32,0,23,1],[34,0,25,0],[34,11,25,9,"parseFontString"],[34,26,25,0],[34,27,25,25,"font"],[34,31,25,0],[34,33,25,31],[35,0,26,4],[35,8,26,8,"cachedFontObjectsFromString"],[35,35,26,35],[35,36,26,36,"hasOwnProperty"],[35,50,26,8],[35,51,26,51,"font"],[35,55,26,8],[35,56,26,4],[35,58,26,58],[36,0,27,8],[36,13,27,15,"cachedFontObjectsFromString"],[36,40,27,42],[36,41,27,43,"font"],[36,45,27,42],[36,46,27,8],[37,0,28,5],[39,0,29,4],[39,8,29,10,"match"],[39,13,29,15],[39,16,29,18,"fontRegExp"],[39,26,29,28],[39,27,29,29,"exec"],[39,31,29,18],[39,32,29,34,"font"],[39,36,29,18],[39,37,29,4],[41,0,30,4],[41,8,30,8],[41,9,30,9,"match"],[41,14,30,4],[41,16,30,16],[42,0,31,8],[42,13,31,15],[42,17,31,8],[43,0,32,5],[45,0,33,4],[45,8,33,10,"fontFamily"],[45,18,33,20],[45,21,33,23,"extractSingleFontFamily"],[45,44,33,46],[45,45,33,47,"match"],[45,50,33,52],[45,51,33,53],[45,52,33,52],[45,53,33,46],[45,54,33,4],[46,0,34,4],[46,8,34,10,"fontSize"],[46,16,34,18],[46,19,34,21,"match"],[46,24,34,26],[46,25,34,27],[46,26,34,26],[46,27,34,21],[46,31,34,33],[46,35,34,4],[47,0,35,4],[47,8,35,10,"isBold"],[47,14,35,16],[47,17,35,19],[47,24,35,26,"exec"],[47,28,35,19],[47,29,35,31,"match"],[47,34,35,36],[47,35,35,37],[47,36,35,36],[47,37,35,19],[47,38,35,4],[48,0,36,4],[48,8,36,10,"isItalic"],[48,16,36,18],[48,19,36,21],[48,28,36,30,"exec"],[48,32,36,21],[48,33,36,35,"match"],[48,38,36,40],[48,39,36,41],[48,40,36,40],[48,41,36,21],[48,42,36,4],[49,0,37,4],[49,8,37,10,"fontWeight"],[49,18,37,20],[49,21,37,23,"isBold"],[49,27,37,29],[49,30,37,32],[49,36,37,29],[49,39,37,41],[49,47,37,4],[50,0,38,4],[50,8,38,10,"fontStyle"],[50,17,38,19],[50,20,38,22,"isItalic"],[50,28,38,30],[50,31,38,33],[50,39,38,30],[50,42,38,44],[50,50,38,4],[51,0,39,4,"cachedFontObjectsFromString"],[51,4,39,4,"cachedFontObjectsFromString"],[51,31,39,31],[51,32,39,32,"font"],[51,36,39,31],[51,37,39,4],[51,40,39,40],[52,0,40,8,"fontSize"],[52,6,40,8,"fontSize"],[52,14,40,16],[52,16,40,8,"fontSize"],[52,24,39,40],[53,0,41,8,"fontFamily"],[53,6,41,8,"fontFamily"],[53,16,41,18],[53,18,41,8,"fontFamily"],[53,28,39,40],[54,0,42,8,"fontWeight"],[54,6,42,8,"fontWeight"],[54,16,42,18],[54,18,42,8,"fontWeight"],[54,28,39,40],[55,0,43,8,"fontStyle"],[55,6,43,8,"fontStyle"],[55,15,43,17],[55,17,43,8,"fontStyle"],[56,0,39,40],[56,5,39,4],[57,0,45,4],[57,11,45,11,"cachedFontObjectsFromString"],[57,38,45,38],[57,39,45,39,"font"],[57,43,45,38],[57,44,45,4],[58,0,46,1],[60,0,48,7],[60,11,48,16,"extractFont"],[60,22,48,7],[60,23,48,28,"prop"],[60,27,48,7],[60,29,48,34],[61,0,49,4],[61,8,49,10,"props"],[61,13,49,15],[61,34,49,23,"prop"],[61,38,49,27],[61,39,49,28,"style"],[61,44,49,15],[61,46,49,38,"prop"],[61,50,49,15],[61,51,49,4],[63,0,48,34],[63,8,51,8,"fontData"],[63,16,48,34],[63,19,63,8,"props"],[63,24,48,34],[63,25,51,8,"fontData"],[63,33,48,34],[64,0,48,34],[64,8,52,8,"fontStyle"],[64,17,48,34],[64,20,63,8,"props"],[64,25,48,34],[64,26,52,8,"fontStyle"],[64,35,48,34],[65,0,48,34],[65,8,53,8,"fontVariant"],[65,19,48,34],[65,22,63,8,"props"],[65,27,48,34],[65,28,53,8,"fontVariant"],[65,39,48,34],[66,0,48,34],[66,8,54,8,"fontWeight"],[66,18,48,34],[66,21,63,8,"props"],[66,26,48,34],[66,27,54,8,"fontWeight"],[66,37,48,34],[67,0,48,34],[67,8,55,8,"fontStretch"],[67,19,48,34],[67,22,63,8,"props"],[67,27,48,34],[67,28,55,8,"fontStretch"],[67,39,48,34],[68,0,48,34],[68,8,56,8,"textAnchor"],[68,18,48,34],[68,21,63,8,"props"],[68,26,48,34],[68,27,56,8,"textAnchor"],[68,37,48,34],[69,0,48,34],[69,8,57,8,"textDecoration"],[69,22,48,34],[69,25,63,8,"props"],[69,30,48,34],[69,31,57,8,"textDecoration"],[69,45,48,34],[70,0,48,34],[70,8,58,8,"letterSpacing"],[70,21,48,34],[70,24,63,8,"props"],[70,29,48,34],[70,30,58,8,"letterSpacing"],[70,43,48,34],[71,0,48,34],[71,8,59,8,"wordSpacing"],[71,19,48,34],[71,22,63,8,"props"],[71,27,48,34],[71,28,59,8,"wordSpacing"],[71,39,48,34],[72,0,48,34],[72,8,60,8,"kerning"],[72,15,48,34],[72,18,63,8,"props"],[72,23,48,34],[72,24,60,8,"kerning"],[72,31,48,34],[73,0,48,34],[73,8,61,8,"fontVariantLigatures"],[73,28,48,34],[73,31,63,8,"props"],[73,36,48,34],[73,37,61,8,"fontVariantLigatures"],[73,57,48,34],[74,0,48,34],[74,8,62,8,"fontFeatureSettings"],[74,27,48,34],[74,30,63,8,"props"],[74,35,48,34],[74,36,62,8,"fontFeatureSettings"],[74,55,48,34],[75,0,48,34],[75,8,64,10,"fontSize"],[75,16,48,34],[75,19,64,41,"props"],[75,24,48,34],[75,25,64,10,"fontSize"],[75,33,48,34],[76,0,48,34],[76,8,64,20,"fontFamily"],[76,18,48,34],[76,21,64,41,"props"],[76,26,48,34],[76,27,64,20,"fontFamily"],[76,37,48,34],[77,0,48,34],[77,8,64,32,"font"],[77,12,48,34],[77,15,64,41,"props"],[77,20,48,34],[77,21,64,32,"font"],[77,25,48,34],[78,0,66,4,"fontFamily"],[78,4,66,4,"fontFamily"],[78,14,66,14],[78,17,66,17,"extractSingleFontFamily"],[78,40,66,40],[78,41,66,41,"fontFamily"],[78,51,66,40],[78,52,66,4],[79,0,67,4,"fontSize"],[79,4,67,4,"fontSize"],[79,12,67,12],[79,15,67,15,"fontSize"],[79,23,67,23],[79,26,67,26],[79,31,67,31,"fontSize"],[79,39,67,23],[79,42,67,42],[79,46,67,4],[81,0,69,4],[81,8,69,10,"ownedFont"],[81,17,69,19],[81,20,69,22,"_"],[81,36,69,24,"pickBy"],[81,42,69,22],[81,43,70,8],[82,0,71,12,"fontData"],[82,6,71,12,"fontData"],[82,14,71,20],[82,16,71,12,"fontData"],[82,24,70,8],[83,0,72,12,"fontStyle"],[83,6,72,12,"fontStyle"],[83,15,72,21],[83,17,72,12,"fontStyle"],[83,26,70,8],[84,0,73,12,"fontVariant"],[84,6,73,12,"fontVariant"],[84,17,73,23],[84,19,73,12,"fontVariant"],[84,30,70,8],[85,0,74,12,"fontWeight"],[85,6,74,12,"fontWeight"],[85,16,74,22],[85,18,74,12,"fontWeight"],[85,28,70,8],[86,0,75,12,"fontStretch"],[86,6,75,12,"fontStretch"],[86,17,75,23],[86,19,75,12,"fontStretch"],[86,30,70,8],[87,0,76,12,"fontSize"],[87,6,76,12,"fontSize"],[87,14,76,20],[87,16,76,12,"fontSize"],[87,24,70,8],[88,0,77,12,"fontFamily"],[88,6,77,12,"fontFamily"],[88,16,77,22],[88,18,77,12,"fontFamily"],[88,28,70,8],[89,0,78,12,"textAnchor"],[89,6,78,12,"textAnchor"],[89,16,78,22],[89,18,78,12,"textAnchor"],[89,28,70,8],[90,0,79,12,"textDecoration"],[90,6,79,12,"textDecoration"],[90,20,79,26],[90,22,79,12,"textDecoration"],[90,36,70,8],[91,0,80,12,"letterSpacing"],[91,6,80,12,"letterSpacing"],[91,19,80,25],[91,21,80,12,"letterSpacing"],[91,34,70,8],[92,0,81,12,"wordSpacing"],[92,6,81,12,"wordSpacing"],[92,17,81,23],[92,19,81,12,"wordSpacing"],[92,30,70,8],[93,0,82,12,"kerning"],[93,6,82,12,"kerning"],[93,13,82,19],[93,15,82,12,"kerning"],[93,22,70,8],[94,0,83,12,"fontVariantLigatures"],[94,6,83,12,"fontVariantLigatures"],[94,26,83,32],[94,28,83,12,"fontVariantLigatures"],[94,48,70,8],[95,0,84,12,"fontFeatureSettings"],[95,6,84,12,"fontFeatureSettings"],[95,25,84,31],[95,27,84,12,"fontFeatureSettings"],[96,0,70,8],[96,5,69,22],[96,7,86,8],[96,17,86,8,"p"],[96,18,86,9],[97,0,86,9],[97,13,86,13],[97,14,86,14,"_"],[97,30,86,16,"isNil"],[97,35,86,14],[97,36,86,22,"p"],[97,37,86,14],[97,38,86,9],[98,0,86,9],[98,5,69,22],[98,6,69,4],[100,0,89,4],[100,8,89,8],[100,15,89,15,"font"],[100,19,89,8],[100,24,89,24],[100,32,89,4],[100,34,89,34],[101,0,90,8,"font"],[101,6,90,8,"font"],[101,10,90,12],[101,13,90,15,"parseFontString"],[101,28,90,30],[101,29,90,31,"font"],[101,33,90,30],[101,34,90,8],[102,0,91,5],[104,0,93,4],[104,11,93,11,"_"],[104,27,93,13,"defaults"],[104,35,93,11],[104,36,93,22,"ownedFont"],[104,45,93,11],[104,47,93,33,"font"],[104,51,93,11],[104,52,93,4],[105,0,94,1],[107,0,96,15],[107,20,96,24,"props"],[107,25,96,15],[107,27,96,57],[108,0,96,57],[108,8,96,31,"container"],[108,17,96,57],[108,88,96,43],[108,93,96,57],[109,0,96,57],[109,8,96,50,"TSpan"],[109,13,96,57],[110,0,96,57],[110,8,98,8,"x"],[110,9,96,57],[110,12,106,8,"props"],[110,17,96,57],[110,18,98,8,"x"],[110,19,96,57],[111,0,96,57],[111,8,99,8,"y"],[111,9,96,57],[111,12,106,8,"props"],[111,17,96,57],[111,18,99,8,"y"],[111,19,96,57],[112,0,96,57],[112,8,100,8,"dx"],[112,10,96,57],[112,13,106,8,"props"],[112,18,96,57],[112,19,100,8,"dx"],[112,21,96,57],[113,0,96,57],[113,8,101,8,"dy"],[113,10,96,57],[113,13,106,8,"props"],[113,18,96,57],[113,19,101,8,"dy"],[113,21,96,57],[114,0,96,57],[114,8,102,8,"rotate"],[114,14,96,57],[114,17,106,8,"props"],[114,22,96,57],[114,23,102,8,"rotate"],[114,29,96,57],[115,0,96,57],[115,8,103,8,"baselineShift"],[115,21,96,57],[115,24,106,8,"props"],[115,29,96,57],[115,30,103,8,"baselineShift"],[115,43,96,57],[116,0,96,57],[116,8,104,8,"verticalAlign"],[116,21,96,57],[116,24,106,8,"props"],[116,29,96,57],[116,30,104,8,"verticalAlign"],[116,43,96,57],[117,0,96,57],[117,8,105,8,"alignmentBaseline"],[117,25,96,57],[117,28,106,8,"props"],[117,33,96,57],[117,34,105,8,"alignmentBaseline"],[117,51,96,57],[118,0,96,57],[118,8,107,10,"children"],[118,16,96,57],[118,19,107,23,"props"],[118,24,96,57],[118,25,107,10,"children"],[118,33,96,57],[119,0,109,4],[119,8,109,8,"content"],[119,15,109,15],[119,18,109,18],[119,22,109,4],[121,0,110,4],[121,8,110,8],[121,15,110,15,"children"],[121,23,110,8],[121,28,110,28],[121,36,110,8],[121,40,110,40],[121,47,110,47,"children"],[121,55,110,40],[121,60,110,60],[121,68,110,4],[121,70,110,70],[122,0,111,8],[122,10,111,14,"childrenString"],[122,24,111,28],[122,27,111,31,"children"],[122,35,111,39],[122,36,111,40,"toString"],[122,44,111,31],[122,46,111,8],[124,0,112,8],[124,10,112,12,"container"],[124,19,112,8],[124,21,112,23],[125,0,113,12,"children"],[125,8,113,12,"children"],[125,16,113,20],[125,19,113,23],[125,48,113,24],[125,53,113,23],[126,0,113,23],[127,0,113,23],[128,0,113,23],[129,0,113,23],[130,0,113,23],[130,11,113,31,"childrenString"],[130,25,113,23],[130,26,113,12],[131,0,114,9],[131,7,112,8],[131,13,114,15],[132,0,115,12,"content"],[132,8,115,12,"content"],[132,15,115,19],[132,18,115,22,"childrenString"],[132,32,115,12],[133,0,116,12,"children"],[133,8,116,12,"children"],[133,16,116,20],[133,19,116,23],[133,23,116,12],[134,0,117,9],[135,0,118,5],[135,5,110,4],[135,11,118,11],[135,15,118,15,"Children"],[135,31,118,24,"count"],[135,36,118,15],[135,37,118,30,"children"],[135,45,118,15],[135,49,118,42],[135,50,118,15],[135,54,118,47,"Array"],[135,59,118,52],[135,60,118,53,"isArray"],[135,67,118,47],[135,68,118,61,"children"],[135,76,118,47],[135,77,118,11],[135,79,118,72],[136,0,119,8,"children"],[136,6,119,8,"children"],[136,14,119,16],[136,17,119,19,"Children"],[136,33,119,28,"map"],[136,36,119,19],[136,37,119,32,"children"],[136,45,119,19],[136,47,119,42],[136,57,119,42,"child"],[136,62,119,47],[136,64,119,51],[137,0,120,12],[137,12,120,16],[137,19,120,23,"child"],[137,24,120,16],[137,29,120,33],[137,37,120,16],[137,41,120,45],[137,48,120,52,"child"],[137,53,120,45],[137,58,120,62],[137,66,120,12],[137,68,120,72],[138,0,121,16],[138,17,121,23],[138,46,121,24],[138,51,121,23],[139,0,121,23],[140,0,121,23],[141,0,121,23],[142,0,121,23],[143,0,121,23],[143,13,121,31,"child"],[143,18,121,36],[143,19,121,37,"toString"],[143,27,121,31],[143,29,121,23],[143,30,121,16],[144,0,122,13],[144,9,120,12],[144,15,122,19],[145,0,123,16],[145,17,123,23,"child"],[145,22,123,16],[146,0,124,13],[147,0,125,9],[147,7,119,19],[147,8,119,8],[148,0,126,5],[150,0,128,4],[150,11,128,11],[151,0,129,8,"content"],[151,6,129,8,"content"],[151,13,129,15],[151,15,129,8,"content"],[151,22,128,11],[152,0,130,8,"children"],[152,6,130,8,"children"],[152,14,130,16],[152,16,130,8,"children"],[152,24,128,11],[153,0,131,8,"baselineShift"],[153,6,131,8,"baselineShift"],[153,19,131,21],[153,21,131,8,"baselineShift"],[153,34,128,11],[154,0,132,8,"verticalAlign"],[154,6,132,8,"verticalAlign"],[154,19,132,21],[154,21,132,8,"verticalAlign"],[154,34,128,11],[155,0,133,8,"alignmentBaseline"],[155,6,133,8,"alignmentBaseline"],[155,23,133,25],[155,25,133,8,"alignmentBaseline"],[155,42,128,11],[156,0,134,8,"font"],[156,6,134,8,"font"],[156,10,134,12],[156,12,134,14,"extractFont"],[156,23,134,25],[156,24,134,26,"props"],[156,29,134,25],[156,30,128,11],[157,0,135,8,"x"],[157,6,135,8,"x"],[157,7,135,9],[157,9,135,11],[157,41,135,29,"x"],[157,42,135,11],[157,43,128,11],[158,0,136,8,"y"],[158,6,136,8,"y"],[158,7,136,9],[158,9,136,11],[158,41,136,29,"y"],[158,42,136,11],[158,43,128,11],[159,0,137,8,"dx"],[159,6,137,8,"dx"],[159,8,137,10],[159,10,137,12],[159,42,137,30,"dx"],[159,44,137,12],[159,45,128,11],[160,0,138,8,"dy"],[160,6,138,8,"dy"],[160,8,138,10],[160,10,138,12],[160,42,138,30,"dy"],[160,44,138,12],[160,45,128,11],[161,0,139,8,"rotate"],[161,6,139,8,"rotate"],[161,12,139,14],[161,14,139,16],[161,46,139,34,"rotate"],[161,52,139,16],[162,0,128,11],[162,5,128,4],[163,0,141,1]]},"type":"js/module"}]}