{"dependencies":[{"name":"./base","data":{"isAsync":false}},{"name":"./core/AnimatedBezier","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _base = _$$_REQUIRE(_dependencyMap[0], \"./base\");\n\n  var _AnimatedBezier = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./core/AnimatedBezier\"));\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  var Easing = function () {\n    function Easing() {\n      _classCallCheck(this, Easing);\n    }\n\n    _createClass(Easing, null, [{\n      key: \"linear\",\n      value: function linear(t) {\n        return t;\n      }\n    }, {\n      key: \"ease\",\n      value: function ease(t) {\n        return new _AnimatedBezier.default(t, 0.42, 0, 1, 1);\n      }\n    }, {\n      key: \"quad\",\n      value: function quad(t) {\n        return (0, _base.multiply)(t, t);\n      }\n    }, {\n      key: \"cubic\",\n      value: function cubic(t) {\n        return (0, _base.multiply)(t, t, t);\n      }\n    }, {\n      key: \"poly\",\n      value: function poly(n) {\n        return function (t) {\n          return (0, _base.pow)(t, n);\n        };\n      }\n    }, {\n      key: \"sin\",\n      value: function sin(t) {\n        return (0, _base.sub)(1, (0, _base.cos)((0, _base.multiply)(t, Math.PI, 0.5)));\n      }\n    }, {\n      key: \"circle\",\n      value: function circle(t) {\n        return (0, _base.sub)(1, (0, _base.sqrt)((0, _base.sub)(1, (0, _base.multiply)(t, t))));\n      }\n    }, {\n      key: \"exp\",\n      value: function exp(t) {\n        return (0, _base.pow)(2, (0, _base.multiply)(10, (0, _base.sub)(t, 1)));\n      }\n    }, {\n      key: \"elastic\",\n      value: function elastic() {\n        var bounciness = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        var p = bounciness * Math.PI;\n        return function (t) {\n          return (0, _base.sub)(1, (0, _base.multiply)((0, _base.pow)((0, _base.cos)((0, _base.multiply)(t, Math.PI, 0.5)), 3), (0, _base.cos)((0, _base.multiply)(t, p))));\n        };\n      }\n    }, {\n      key: \"back\",\n      value: function back(s) {\n        if (s === undefined) {\n          s = 1.70158;\n        }\n\n        return function (t) {\n          return (0, _base.multiply)(t, t, (0, _base.sub)((0, _base.multiply)((0, _base.add)(s, 1), t), s));\n        };\n      }\n    }, {\n      key: \"bounce\",\n      value: function bounce(t) {\n        var sq = function sq(v) {\n          return (0, _base.multiply)(7.5625, v, v);\n        };\n\n        return (0, _base.cond)((0, _base.lessThan)(t, 1 / 2.75), sq(t), (0, _base.cond)((0, _base.lessThan)(t, 2 / 2.75), (0, _base.add)(0.75, sq((0, _base.sub)(t, 1.5 / 2.75))), (0, _base.cond)((0, _base.lessThan)(t, 2.5 / 2.76), (0, _base.add)(0.9375, sq((0, _base.sub)(t, 2.25 / 2.75))), (0, _base.add)(0.984375, sq((0, _base.sub)(t, 2.625 / 2.75))))));\n      }\n    }, {\n      key: \"bezier\",\n      value: function bezier(x1, y1, x2, y2) {\n        return function (t) {\n          return new _AnimatedBezier.default(t, x1, y1, x2, y2);\n        };\n      }\n    }, {\n      key: \"in\",\n      value: function _in(easing) {\n        return easing;\n      }\n    }, {\n      key: \"out\",\n      value: function out(easing) {\n        return function (t) {\n          return (0, _base.sub)(1, easing((0, _base.sub)(1, t)));\n        };\n      }\n    }, {\n      key: \"inOut\",\n      value: function inOut(easing) {\n        return function (t) {\n          return (0, _base.cond)((0, _base.lessThan)(t, 0.5), (0, _base.divide)(easing((0, _base.multiply)(t, 2)), 2), (0, _base.sub)(1, (0, _base.divide)(easing((0, _base.multiply)((0, _base.sub)(1, t), 2)), 2)));\n        };\n      }\n    }]);\n\n    return Easing;\n  }();\n\n  exports.default = Easing;\n});","map":[[7,0,1,0],[9,0,12,0],[19,6,59,21,"Easing"],[19,12],[26,29,66,16,"t"],[26,30],[26,32,66,19],[27,0,67,4],[27,15,67,11,"t"],[27,16,67,4],[28,0,68,3],[31,27,76,14,"t"],[31,28],[31,30,76,17],[32,0,77,4],[32,15,77,11],[32,19,77,15,"AnimatedBezier"],[32,42,77,11],[32,43,77,30,"t"],[32,44,77,11],[32,46,77,33],[32,50,77,11],[32,52,77,39],[32,53,77,11],[32,55,77,42],[32,56,77,11],[32,58,77,45],[32,59,77,11],[32,60,77,4],[33,0,78,3],[36,27,86,14,"t"],[36,28],[36,30,86,17],[37,0,87,4],[37,15,87,11],[37,35,87,20,"t"],[37,36,87,11],[37,38,87,23,"t"],[37,39,87,11],[37,40,87,4],[38,0,88,3],[41,28,96,15,"t"],[41,29],[41,31,96,18],[42,0,97,4],[42,15,97,11],[42,35,97,20,"t"],[42,36,97,11],[42,38,97,23,"t"],[42,39,97,11],[42,41,97,26,"t"],[42,42,97,11],[42,43,97,4],[43,0,98,3],[46,27,106,14,"n"],[46,28],[46,30,106,17],[47,0,107,4],[47,15,107,11],[47,25,107,11,"t"],[47,26,107,12],[48,0,107,12],[48,17,107,16],[48,32,107,20,"t"],[48,33,107,16],[48,35,107,23,"n"],[48,36,107,16],[48,37,107,12],[49,0,107,12],[49,9,107,4],[50,0,108,3],[53,26,115,13,"t"],[53,27],[53,29,115,16],[54,0,116,4],[54,15,116,11],[54,30,116,15],[54,31,116,11],[54,33,116,18],[54,48,116,22],[54,68,116,31,"t"],[54,69,116,22],[54,71,116,34,"Math"],[54,75,116,38],[54,76,116,39,"PI"],[54,78,116,22],[54,80,116,43],[54,83,116,22],[54,84,116,18],[54,85,116,11],[54,86,116,4],[55,0,117,3],[58,29,124,16,"t"],[58,30],[58,32,124,19],[59,0,125,4],[59,15,125,11],[59,30,125,15],[59,31,125,11],[59,33,125,18],[59,49,125,23],[59,64,125,27],[59,65,125,23],[59,67,125,30],[59,87,125,39,"t"],[59,88,125,30],[59,90,125,42,"t"],[59,91,125,30],[59,92,125,23],[59,93,125,18],[59,94,125,11],[59,95,125,4],[60,0,126,3],[63,26,133,13,"t"],[63,27],[63,29,133,16],[64,0,134,4],[64,15,134,11],[64,30,134,15],[64,31,134,11],[64,33,134,18],[64,53,134,27],[64,55,134,18],[64,57,134,31],[64,72,134,35,"t"],[64,73,134,31],[64,75,134,38],[64,76,134,31],[64,77,134,18],[64,78,134,11],[64,79,134,4],[65,0,135,3],[68,32,147,33],[69,0,147,33],[69,12,147,17,"bounciness"],[69,22,147,33],[69,93,147,30],[69,94,147,33],[70,0,148,4],[70,12,148,10,"p"],[70,13,148,11],[70,16,148,14,"bounciness"],[70,26,148,24],[70,29,148,27,"Math"],[70,33,148,31],[70,34,148,32,"PI"],[70,36,148,4],[71,0,149,4],[71,15,149,11],[71,25,149,11,"t"],[71,26,149,12],[72,0,149,12],[72,17,150,6],[72,32,151,8],[72,33,150,6],[72,35,152,8],[72,55,152,17],[72,70,152,21],[72,85,152,25],[72,105,152,34,"t"],[72,106,152,25],[72,108,152,37,"Math"],[72,112,152,41],[72,113,152,42,"PI"],[72,115,152,25],[72,117,152,46],[72,120,152,25],[72,121,152,21],[72,122,152,17],[72,124,152,53],[72,125,152,17],[72,126,152,8],[72,128,152,57],[72,143,152,61],[72,163,152,70,"t"],[72,164,152,61],[72,166,152,73,"p"],[72,167,152,61],[72,168,152,57],[72,169,152,8],[72,170,150,6],[72,171,149,12],[73,0,149,12],[73,9,149,4],[74,0,154,3],[77,27,164,14,"s"],[77,28],[77,30,164,17],[78,0,165,4],[78,12,165,8,"s"],[78,13,165,9],[78,18,165,14,"undefined"],[78,27,165,4],[78,29,165,25],[79,0,166,6,"s"],[79,10,166,6,"s"],[79,11,166,7],[79,14,166,10],[79,21,166,6],[80,0,167,5],[82,0,168,4],[82,15,168,11],[82,25,168,11,"t"],[82,26,168,12],[83,0,168,12],[83,17,168,16],[83,37,168,25,"t"],[83,38,168,16],[83,40,168,28,"t"],[83,41,168,16],[83,43,168,31],[83,58,168,35],[83,78,168,44],[83,93,168,48,"s"],[83,94,168,44],[83,96,168,51],[83,97,168,44],[83,98,168,35],[83,100,168,55,"t"],[83,101,168,35],[83,102,168,31],[83,104,168,59,"s"],[83,105,168,31],[83,106,168,16],[83,107,168,12],[84,0,168,12],[84,9,168,4],[85,0,169,3],[88,29,176,16,"t"],[88,30],[88,32,176,19],[89,0,177,4],[89,12,177,10,"sq"],[89,14,177,12],[89,17,177,15],[89,26,177,10,"sq"],[89,28,177,15],[89,29,177,15,"v"],[89,30,177,16],[90,0,177,16],[90,17,177,20],[90,37,177,29],[90,43,177,20],[90,45,177,37,"v"],[90,46,177,20],[90,48,177,40,"v"],[90,49,177,20],[90,50,177,16],[91,0,177,16],[91,9,177,4],[93,0,178,4],[93,15,178,11],[93,31,179,6],[93,51,179,15,"t"],[93,52,179,6],[93,54,179,18],[93,58,179,22],[93,62,179,6],[93,63,178,11],[93,65,180,6,"sq"],[93,67,180,8],[93,68,180,9,"t"],[93,69,180,8],[93,70,178,11],[93,72,181,6],[93,88,182,8],[93,108,182,17,"t"],[93,109,182,8],[93,111,182,20],[93,115,182,24],[93,119,182,8],[93,120,181,6],[93,122,183,8],[93,137,183,12],[93,141,183,8],[93,143,183,18,"sq"],[93,145,183,20],[93,146,183,21],[93,161,183,25,"t"],[93,162,183,21],[93,164,183,28],[93,170,183,34],[93,174,183,21],[93,175,183,20],[93,176,183,8],[93,177,181,6],[93,179,184,8],[93,195,185,10],[93,215,185,19,"t"],[93,216,185,10],[93,218,185,22],[93,224,185,28],[93,228,185,10],[93,229,184,8],[93,231,186,10],[93,246,186,14],[93,252,186,10],[93,254,186,22,"sq"],[93,256,186,24],[93,257,186,25],[93,272,186,29,"t"],[93,273,186,25],[93,275,186,32],[93,282,186,39],[93,286,186,25],[93,287,186,24],[93,288,186,10],[93,289,184,8],[93,291,187,10],[93,306,187,14],[93,314,187,10],[93,316,187,24,"sq"],[93,318,187,26],[93,319,187,27],[93,334,187,31,"t"],[93,335,187,27],[93,337,187,34],[93,345,187,42],[93,349,187,27],[93,350,187,26],[93,351,187,10],[93,352,184,8],[93,353,181,6],[93,354,178,11],[93,355,178,4],[94,0,191,3],[97,29,200,16,"x1"],[97,31],[97,33,200,20,"y1"],[97,35],[97,37,200,24,"x2"],[97,39],[97,41,200,28,"y2"],[97,43],[97,45,200,32],[98,0,201,4],[98,15,201,11],[98,25,201,11,"t"],[98,26,201,12],[99,0,201,12],[99,17,201,16],[99,21,201,20,"AnimatedBezier"],[99,44,201,16],[99,45,201,35,"t"],[99,46,201,16],[99,48,201,38,"x1"],[99,50,201,16],[99,52,201,42,"y1"],[99,54,201,16],[99,56,201,46,"x2"],[99,58,201,16],[99,60,201,50,"y2"],[99,62,201,16],[99,63,201,12],[100,0,201,12],[100,9,201,4],[101,0,202,3],[104,26,207,12,"easing"],[104,32],[104,34,207,20],[105,0,208,4],[105,15,208,11,"easing"],[105,21,208,4],[106,0,209,3],[109,26,214,13,"easing"],[109,32],[109,34,214,21],[110,0,215,4],[110,15,215,11],[110,25,215,11,"t"],[110,26,215,12],[111,0,215,12],[111,17,215,16],[111,32,215,20],[111,33,215,16],[111,35,215,23,"easing"],[111,41,215,29],[111,42,215,30],[111,57,215,34],[111,58,215,30],[111,60,215,37,"t"],[111,61,215,30],[111,62,215,29],[111,63,215,16],[111,64,215,12],[112,0,215,12],[112,9,215,4],[113,0,216,3],[116,28,223,15,"easing"],[116,34],[116,36,223,23],[117,0,224,4],[117,15,224,11],[117,25,224,11,"t"],[117,26,224,12],[118,0,224,12],[118,17,225,6],[118,33,226,8],[118,53,226,17,"t"],[118,54,226,8],[118,56,226,20],[118,59,226,8],[118,60,225,6],[118,62,227,8],[118,80,227,15,"easing"],[118,86,227,21],[118,87,227,22],[118,107,227,31,"t"],[118,108,227,22],[118,110,227,34],[118,111,227,22],[118,112,227,21],[118,113,227,8],[118,115,227,39],[118,116,227,8],[118,117,225,6],[118,119,228,8],[118,134,228,12],[118,135,228,8],[118,137,228,15],[118,155,228,22,"easing"],[118,161,228,28],[118,162,228,29],[118,182,228,38],[118,197,228,42],[118,198,228,38],[118,200,228,45,"t"],[118,201,228,38],[118,202,228,29],[118,204,228,49],[118,205,228,29],[118,206,228,28],[118,207,228,15],[118,209,228,54],[118,210,228,15],[118,211,228,8],[118,212,225,6],[118,213,224,12],[119,0,224,12],[119,9,224,4],[120,0,230,3]]},"type":"js/module"}]}