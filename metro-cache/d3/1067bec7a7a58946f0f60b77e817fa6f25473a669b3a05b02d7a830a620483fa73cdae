{"dependencies":[{"name":"expo-core","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _expoCore = _$$_REQUIRE(_dependencyMap[0], \"expo-core\");\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  var DeviceSensor = function () {\n    function DeviceSensor(nativeSensorModule, nativeEventName) {\n      _classCallCheck(this, DeviceSensor);\n\n      this._nativeModule = nativeSensorModule;\n      this._nativeEmitter = new _expoCore.EventEmitter(nativeSensorModule);\n      this._nativeEventName = nativeEventName;\n    }\n\n    _createClass(DeviceSensor, [{\n      key: \"addListener\",\n      value: function addListener(listener) {\n        var _this = this;\n\n        var subscription = this._nativeEmitter.addListener(this._nativeEventName, listener);\n\n        subscription.remove = function () {\n          return _this.removeSubscription(subscription);\n        };\n\n        return subscription;\n      }\n    }, {\n      key: \"removeAllListeners\",\n      value: function removeAllListeners() {\n        this._nativeEmitter.removeAllListeners(this._nativeEventName);\n      }\n    }, {\n      key: \"removeSubscription\",\n      value: function removeSubscription(subscription) {\n        this._nativeEmitter.removeSubscription(subscription);\n      }\n    }, {\n      key: \"setUpdateInterval\",\n      value: function setUpdateInterval(intervalMs) {\n        this._nativeModule.setUpdateInterval(intervalMs);\n      }\n    }]);\n\n    return DeviceSensor;\n  }();\n\n  exports.default = DeviceSensor;\n});","map":[[7,0,3,0],[15,6,17,21,"DeviceSensor"],[15,18],[16,0,22,2],[16,26,22,14,"nativeSensorModule"],[16,44,22,2],[16,46,22,54,"nativeEventName"],[16,61,22,2],[16,63,22,79],[17,0,22,79],[19,0,23,4],[19,11,23,9,"_nativeModule"],[19,24,23,4],[19,27,23,25,"nativeSensorModule"],[19,45,23,4],[20,0,24,4],[20,11,24,9,"_nativeEmitter"],[20,25,24,4],[20,28,24,26],[20,32,24,30,"EventEmitter"],[20,54,24,26],[20,55,24,43,"nativeSensorModule"],[20,73,24,26],[20,74,24,4],[21,0,25,4],[21,11,25,9,"_nativeEventName"],[21,27,25,4],[21,30,25,28,"nativeEventName"],[21,45,25,4],[22,0,26,3],[26,34,28,14,"listener"],[26,42],[26,44,28,51],[27,0,28,51],[29,0,29,4],[29,12,29,8,"subscription"],[29,24,29,20],[29,27,29,23],[29,32,29,28,"_nativeEmitter"],[29,46,29,23],[29,47,29,43,"addListener"],[29,58,29,23],[29,59,29,55],[29,64,29,60,"_nativeEventName"],[29,80,29,23],[29,82,29,78,"listener"],[29,90,29,23],[29,91,29,4],[31,0,30,4,"subscription"],[31,8,30,4,"subscription"],[31,20,30,16],[31,21,30,17,"remove"],[31,27,30,4],[31,30,30,26],[32,0,30,26],[32,17,30,32],[32,22,30,36],[32,23,30,37,"removeSubscription"],[32,41,30,32],[32,42,30,56,"subscription"],[32,54,30,32],[32,55,30,26],[33,0,30,26],[33,9,30,4],[35,0,31,4],[35,15,31,11,"subscription"],[35,27,31,4],[36,0,32,3],[39,43,34,29],[40,0,35,4],[40,13,35,9,"_nativeEmitter"],[40,27,35,4],[40,28,35,24,"removeAllListeners"],[40,46,35,4],[40,47,35,43],[40,52,35,48,"_nativeEventName"],[40,68,35,4],[41,0,36,3],[44,41,38,21,"subscription"],[44,53],[44,55,38,55],[45,0,39,4],[45,13,39,9,"_nativeEmitter"],[45,27,39,4],[45,28,39,24,"removeSubscription"],[45,46,39,4],[45,47,39,43,"subscription"],[45,59,39,4],[46,0,40,3],[49,40,42,20,"intervalMs"],[49,50],[49,52,42,46],[50,0,43,4],[50,13,43,9,"_nativeModule"],[50,26,43,4],[50,27,43,23,"setUpdateInterval"],[50,44,43,4],[50,45,43,41,"intervalMs"],[50,55,43,4],[51,0,44,3]]},"type":"js/module"}]}