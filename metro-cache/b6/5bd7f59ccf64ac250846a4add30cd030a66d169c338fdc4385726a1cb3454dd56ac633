{"dependencies":[{"name":"react","data":{"isAsync":false}},{"name":"./../../../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"prop-types","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"./decorateMapComponent","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../../../react-transform-hmr/lib/index.js\"));\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"prop-types\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[3], \"react-native\");\n\n  var _decorateMapComponent = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"./decorateMapComponent\"));\n\n  var _jsxFileName = \"/home/alex/Documentos/CursoReactNative/node_modules/react-native-maps/lib/components/MapPolygon.js\";\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  var _components = {\n    MapPolygon: {\n      displayName: \"MapPolygon\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/alex/Documentos/CursoReactNative/node_modules/react-native-maps/lib/components/MapPolygon.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var viewPropTypes = _reactNative.ViewPropTypes || _reactNative.View.propTypes;\n\n  var propTypes = _objectSpread({}, viewPropTypes, {\n    coordinates: _propTypes.default.arrayOf(_propTypes.default.shape({\n      latitude: _propTypes.default.number.isRequired,\n      longitude: _propTypes.default.number.isRequired\n    })),\n    holes: _propTypes.default.arrayOf(_propTypes.default.arrayOf(_propTypes.default.shape({\n      latitude: _propTypes.default.number.isRequired,\n      longitude: _propTypes.default.number.isRequired\n    }))),\n    onPress: _propTypes.default.func,\n    tappable: _propTypes.default.bool,\n    strokeWidth: _propTypes.default.number,\n    strokeColor: _reactNative.ColorPropType,\n    fillColor: _reactNative.ColorPropType,\n    zIndex: _propTypes.default.number,\n    lineCap: _propTypes.default.oneOf(['butt', 'round', 'square']),\n    lineJoin: _propTypes.default.oneOf(['miter', 'round', 'bevel']),\n    miterLimit: _propTypes.default.number,\n    geodesic: _propTypes.default.bool,\n    lineDashPhase: _propTypes.default.number,\n    lineDashPattern: _propTypes.default.arrayOf(_propTypes.default.number)\n  });\n\n  var defaultProps = {\n    strokeColor: '#000',\n    strokeWidth: 1\n  };\n\n  var MapPolygon = function (_React$Component) {\n    _inherits(MapPolygon, _React$Component);\n\n    function MapPolygon() {\n      _classCallCheck(this, MapPolygon);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(MapPolygon).apply(this, arguments));\n    }\n\n    _createClass(MapPolygon, [{\n      key: \"setNativeProps\",\n      value: function setNativeProps(props) {\n        this.polygon.setNativeProps(props);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this = this;\n\n        var AIRMapPolygon = this.getAirComponent();\n        return _react.default.createElement(AIRMapPolygon, _extends({}, this.props, {\n          ref: function ref(_ref) {\n            _this.polygon = _ref;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          }\n        }));\n      }\n    }]);\n\n    return MapPolygon;\n  }(_react.default.Component);\n\n  MapPolygon = _wrapComponent(\"MapPolygon\")(MapPolygon);\n  MapPolygon.propTypes = propTypes;\n  MapPolygon.defaultProps = defaultProps;\n\n  var _default2 = (0, _decorateMapComponent.default)(MapPolygon, {\n    componentType: 'Polygon',\n    providers: {\n      google: {\n        ios: _decorateMapComponent.SUPPORTED,\n        android: _decorateMapComponent.USES_DEFAULT_IMPLEMENTATION\n      }\n    }\n  });\n\n  exports.default = _default2;\n});","map":[[7,0,2,0],[11,0,1,0],[13,0,3,0],[15,0,8,0],[64,0,14,0],[64,6,14,6,"viewPropTypes"],[64,19,14,19],[64,22,14,22,"ViewPropTypes"],[64,52,14,39,"View"],[64,70,14,44,"propTypes"],[64,79,14,0],[66,0,16,0],[66,6,16,6,"propTypes"],[66,15,16,15],[66,36,17,5,"viewPropTypes"],[66,49,16,15],[67,0,22,2,"coordinates"],[67,4,22,2,"coordinates"],[67,15,22,13],[67,17,22,15,"PropTypes"],[67,36,22,25,"arrayOf"],[67,43,22,15],[67,44,22,33,"PropTypes"],[67,63,22,43,"shape"],[67,68,22,33],[67,69,22,49],[68,0,26,4,"latitude"],[68,6,26,4,"latitude"],[68,14,26,12],[68,16,26,14,"PropTypes"],[68,35,26,24,"number"],[68,41,26,14],[68,42,26,31,"isRequired"],[68,52,22,49],[69,0,27,4,"longitude"],[69,6,27,4,"longitude"],[69,15,27,13],[69,17,27,15,"PropTypes"],[69,36,27,25,"number"],[69,42,27,15],[69,43,27,32,"isRequired"],[70,0,22,49],[70,5,22,33],[70,6,22,15],[70,7,16,15],[71,0,33,2,"holes"],[71,4,33,2,"holes"],[71,9,33,7],[71,11,33,9,"PropTypes"],[71,30,33,19,"arrayOf"],[71,37,33,9],[71,38,33,27,"PropTypes"],[71,57,33,37,"arrayOf"],[71,64,33,27],[71,65,33,45,"PropTypes"],[71,84,33,55,"shape"],[71,89,33,45],[71,90,33,61],[72,0,37,4,"latitude"],[72,6,37,4,"latitude"],[72,14,37,12],[72,16,37,14,"PropTypes"],[72,35,37,24,"number"],[72,41,37,14],[72,42,37,31,"isRequired"],[72,52,33,61],[73,0,38,4,"longitude"],[73,6,38,4,"longitude"],[73,15,38,13],[73,17,38,15,"PropTypes"],[73,36,38,25,"number"],[73,42,38,15],[73,43,38,32,"isRequired"],[74,0,33,61],[74,5,33,45],[74,6,33,27],[74,7,33,9],[74,8,16,15],[75,0,44,2,"onPress"],[75,4,44,2,"onPress"],[75,11,44,9],[75,13,44,11,"PropTypes"],[75,32,44,21,"func"],[75,36,16,15],[76,0,50,2,"tappable"],[76,4,50,2,"tappable"],[76,12,50,10],[76,14,50,12,"PropTypes"],[76,33,50,22,"bool"],[76,37,16,15],[77,0,55,2,"strokeWidth"],[77,4,55,2,"strokeWidth"],[77,15,55,13],[77,17,55,15,"PropTypes"],[77,36,55,25,"number"],[77,42,16,15],[78,0,60,2,"strokeColor"],[78,4,60,2,"strokeColor"],[78,15,60,13],[78,17,60,15,"ColorPropType"],[78,43,16,15],[79,0,65,2,"fillColor"],[79,4,65,2,"fillColor"],[79,13,65,11],[79,15,65,13,"ColorPropType"],[79,41,16,15],[80,0,74,2,"zIndex"],[80,4,74,2,"zIndex"],[80,10,74,8],[80,12,74,10,"PropTypes"],[80,31,74,20,"number"],[80,37,16,15],[81,0,82,2,"lineCap"],[81,4,82,2,"lineCap"],[81,11,82,9],[81,13,82,11,"PropTypes"],[81,32,82,21,"oneOf"],[81,37,82,11],[81,38,82,27],[81,39,83,4],[81,45,82,27],[81,47,84,4],[81,54,82,27],[81,56,85,4],[81,64,82,27],[81,65,82,11],[81,66,16,15],[82,0,94,2,"lineJoin"],[82,4,94,2,"lineJoin"],[82,12,94,10],[82,14,94,12,"PropTypes"],[82,33,94,22,"oneOf"],[82,38,94,12],[82,39,94,28],[82,40,95,4],[82,47,94,28],[82,49,96,4],[82,56,94,28],[82,58,97,4],[82,65,94,28],[82,66,94,12],[82,67,16,15],[83,0,110,2,"miterLimit"],[83,4,110,2,"miterLimit"],[83,14,110,12],[83,16,110,14,"PropTypes"],[83,35,110,24,"number"],[83,41,16,15],[84,0,119,2,"geodesic"],[84,4,119,2,"geodesic"],[84,12,119,10],[84,14,119,12,"PropTypes"],[84,33,119,22,"bool"],[84,37,16,15],[85,0,132,2,"lineDashPhase"],[85,4,132,2,"lineDashPhase"],[85,17,132,15],[85,19,132,17,"PropTypes"],[85,38,132,27,"number"],[85,44,16,15],[86,0,146,2,"lineDashPattern"],[86,4,146,2,"lineDashPattern"],[86,19,146,17],[86,21,146,19,"PropTypes"],[86,40,146,29,"arrayOf"],[86,47,146,19],[86,48,146,37,"PropTypes"],[86,67,146,47,"number"],[86,73,146,19],[87,0,16,15],[87,4,16,0],[89,0,149,0],[89,6,149,6,"defaultProps"],[89,18,149,18],[89,21,149,21],[90,0,150,2,"strokeColor"],[90,4,150,2,"strokeColor"],[90,15,150,13],[90,17,150,15],[90,23,149,21],[91,0,151,2,"strokeWidth"],[91,4,151,2,"strokeWidth"],[91,15,151,13],[91,17,151,15],[92,0,149,21],[92,3,149,0],[94,6,154,6,"MapPolygon"],[94,16],[105,37,155,17,"props"],[105,42],[105,44,155,24],[106,0,156,4],[106,13,156,9,"polygon"],[106,20,156,4],[106,21,156,17,"setNativeProps"],[106,35,156,4],[106,36,156,32,"props"],[106,41,156,4],[107,0,157,3],[110,31,159,11],[111,0,159,11],[113,0,160,4],[113,12,160,10,"AIRMapPolygon"],[113,25,160,23],[113,28,160,26],[113,33,160,31,"getAirComponent"],[113,48,160,26],[113,50,160,4],[114,0,161,4],[114,15,162,6],[114,44,162,7],[114,57,162,6],[114,72,162,25],[114,77,162,30,"props"],[114,82,162,6],[115,0,162,37],[115,10,162,37],[115,13,162,40],[115,15,162,42],[115,28,162,42,"ref"],[115,32,162,45],[115,34,162,49],[116,0,162,51],[116,12,162,51],[116,17,162,55],[116,18,162,56,"polygon"],[116,25,162,51],[116,28,162,66,"ref"],[116,32,162,51],[117,0,162,72],[117,11,162,6],[118,0,162,6],[119,0,162,6],[120,0,162,6],[121,0,162,6],[122,0,162,6],[122,11,161,4],[123,0,164,3],[127,4,154,25,"React"],[127,19,154,31,"Component"],[127,28],[130,0,167,0,"MapPolygon"],[130,2,167,0,"MapPolygon"],[130,12,167,10],[130,13,167,11,"propTypes"],[130,22,167,0],[130,25,167,23,"propTypes"],[130,34,167,0],[131,0,168,0,"MapPolygon"],[131,2,168,0,"MapPolygon"],[131,12,168,10],[131,13,168,11,"defaultProps"],[131,25,168,0],[131,28,168,26,"defaultProps"],[131,40,168,0],[133,18,170,15],[133,53,170,36,"MapPolygon"],[133,63,170,15],[133,65,170,48],[134,0,171,2,"componentType"],[134,4,171,2,"componentType"],[134,17,171,15],[134,19,171,17],[134,28,170,48],[135,0,172,2,"providers"],[135,4,172,2,"providers"],[135,13,172,11],[135,15,172,13],[136,0,173,4,"google"],[136,6,173,4,"google"],[136,12,173,10],[136,14,173,12],[137,0,174,6,"ios"],[137,8,174,6,"ios"],[137,11,174,9],[137,13,174,11,"SUPPORTED"],[137,44,173,12],[138,0,175,6,"android"],[138,8,175,6,"android"],[138,15,175,13],[138,17,175,15,"USES_DEFAULT_IMPLEMENTATION"],[139,0,173,12],[140,0,172,13],[141,0,170,48],[141,3,170,15],[141,4]]},"type":"js/module"}]}