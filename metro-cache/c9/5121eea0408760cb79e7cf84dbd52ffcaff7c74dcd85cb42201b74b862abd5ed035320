{"dependencies":[{"name":"react-native","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getCalendarsAsync = getCalendarsAsync;\n  exports.createCalendarAsync = createCalendarAsync;\n  exports.updateCalendarAsync = updateCalendarAsync;\n  exports.deleteCalendarAsync = deleteCalendarAsync;\n  exports.getEventsAsync = getEventsAsync;\n  exports.getEventAsync = getEventAsync;\n  exports.createEventAsync = createEventAsync;\n  exports.updateEventAsync = updateEventAsync;\n  exports.deleteEventAsync = deleteEventAsync;\n  exports.getAttendeesForEventAsync = getAttendeesForEventAsync;\n  exports.createAttendeeAsync = createAttendeeAsync;\n  exports.updateAttendeeAsync = updateAttendeeAsync;\n  exports.deleteAttendeeAsync = deleteAttendeeAsync;\n  exports.getRemindersAsync = getRemindersAsync;\n  exports.getReminderAsync = getReminderAsync;\n  exports.createReminderAsync = createReminderAsync;\n  exports.updateReminderAsync = updateReminderAsync;\n  exports.deleteReminderAsync = deleteReminderAsync;\n  exports.getSourcesAsync = getSourcesAsync;\n  exports.getSourceAsync = getSourceAsync;\n  exports.openEventInCalendar = openEventInCalendar;\n  exports.DEFAULT = exports.ReminderStatus = exports.CalendarAccessLevel = exports.EventAccessLevel = exports.AlarmMethod = exports.AttendeeType = exports.AttendeeStatus = exports.AttendeeRole = exports.SourceType = exports.EventStatus = exports.CalendarType = exports.Availability = exports.Frequency = exports.EntityTypes = void 0;\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[0], \"react-native\");\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  function getCalendarsAsync(entityType) {\n    return regeneratorRuntime.async(function getCalendarsAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (entityType) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.getCalendarsAsync(null));\n\n          case 2:\n            return _context.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.getCalendarsAsync(entityType));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function createCalendarAsync() {\n    var details,\n        color,\n        newDetails,\n        _args2 = arguments;\n    return regeneratorRuntime.async(function createCalendarAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            details = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};\n            color = details.color ? (0, _reactNative.processColor)(details.color) : undefined;\n            newDetails = _objectSpread({}, details, {\n              id: undefined,\n              color: color\n            });\n            return _context2.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.saveCalendarAsync(newDetails));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function updateCalendarAsync(id) {\n    var details,\n        color,\n        newDetails,\n        _args3 = arguments;\n    return regeneratorRuntime.async(function updateCalendarAsync$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            details = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {};\n\n            if (id) {\n              _context3.next = 3;\n              break;\n            }\n\n            throw new Error('updateCalendarAsync must be called with an id (string) of the target calendar');\n\n          case 3:\n            color = details.color ? (0, _reactNative.processColor)(details.color) : undefined;\n\n            if (_reactNative.Platform.OS === 'android') {\n              if (details.hasOwnProperty('source') || details.hasOwnProperty('color') || details.hasOwnProperty('allowsModifications') || details.hasOwnProperty('allowedAvailabilities') || details.hasOwnProperty('isPrimary') || details.hasOwnProperty('ownerAccount') || details.hasOwnProperty('timeZone') || details.hasOwnProperty('allowedReminders') || details.hasOwnProperty('allowedAttendeeTypes') || details.hasOwnProperty('accessLevel')) {\n                console.warn('updateCalendarAsync was called with one or more read-only properties, which will not be updated');\n              }\n            } else {\n              if (details.hasOwnProperty('source') || details.hasOwnProperty('type') || details.hasOwnProperty('entityType') || details.hasOwnProperty('allowsModifications') || details.hasOwnProperty('allowedAvailabilities')) {\n                console.warn('updateCalendarAsync was called with one or more read-only properties, which will not be updated');\n              }\n            }\n\n            newDetails = _objectSpread({}, details, {\n              id: id,\n              color: color\n            });\n            return _context3.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.saveCalendarAsync(newDetails));\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function deleteCalendarAsync(id) {\n    return regeneratorRuntime.async(function deleteCalendarAsync$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (id) {\n              _context4.next = 2;\n              break;\n            }\n\n            throw new Error('deleteCalendarAsync must be called with an id (string) of the target calendar');\n\n          case 2:\n            return _context4.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.deleteCalendarAsync(id));\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function getEventsAsync(calendarIds, startDate, endDate) {\n    return regeneratorRuntime.async(function getEventsAsync$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (startDate) {\n              _context5.next = 2;\n              break;\n            }\n\n            throw new Error('getEventsAsync must be called with a startDate (date) to search for events');\n\n          case 2:\n            if (endDate) {\n              _context5.next = 4;\n              break;\n            }\n\n            throw new Error('getEventsAsync must be called with an endDate (date) to search for events');\n\n          case 4:\n            if (!(!calendarIds || !calendarIds.length)) {\n              _context5.next = 6;\n              break;\n            }\n\n            throw new Error('getEventsAsync must be called with a non-empty array of calendarIds to search');\n\n          case 6:\n            return _context5.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.getEventsAsync(startDate, endDate, calendarIds));\n\n          case 7:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function getEventAsync(id) {\n    var _ref,\n        _ref$futureEvents,\n        futureEvents,\n        instanceStartDate,\n        _args6 = arguments;\n\n    return regeneratorRuntime.async(function getEventAsync$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _ref = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : {}, _ref$futureEvents = _ref.futureEvents, futureEvents = _ref$futureEvents === void 0 ? false : _ref$futureEvents, instanceStartDate = _ref.instanceStartDate;\n\n            if (id) {\n              _context6.next = 3;\n              break;\n            }\n\n            throw new Error('getEventAsync must be called with an id (string) of the target event');\n\n          case 3:\n            if (!(_reactNative.Platform.OS === 'ios')) {\n              _context6.next = 7;\n              break;\n            }\n\n            return _context6.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.getEventByIdAsync(id, instanceStartDate));\n\n          case 7:\n            return _context6.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.getEventByIdAsync(id));\n\n          case 8:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function createEventAsync(calendarId) {\n    var details,\n        newDetails,\n        _args7 = arguments;\n    return regeneratorRuntime.async(function createEventAsync$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            details = _args7.length > 1 && _args7[1] !== undefined ? _args7[1] : {};\n\n            if (calendarId) {\n              _context7.next = 3;\n              break;\n            }\n\n            throw new Error('createEventAsync must be called with an id (string) of the target calendar');\n\n          case 3:\n            if (!(_reactNative.Platform.OS === 'android')) {\n              _context7.next = 10;\n              break;\n            }\n\n            if (details.startDate) {\n              _context7.next = 6;\n              break;\n            }\n\n            throw new Error('createEventAsync requires a startDate (Date)');\n\n          case 6:\n            if (details.endDate) {\n              _context7.next = 8;\n              break;\n            }\n\n            throw new Error('createEventAsync requires an endDate (Date)');\n\n          case 8:\n            if (details.timeZone) {\n              _context7.next = 10;\n              break;\n            }\n\n            throw new Error('createEventAsync requires a timeZone (string)');\n\n          case 10:\n            newDetails = _objectSpread({}, details, {\n              id: undefined,\n              calendarId: calendarId === DEFAULT ? undefined : calendarId\n            });\n            return _context7.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.saveEventAsync(newDetails, {}));\n\n          case 12:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function updateEventAsync(id) {\n    var details,\n        _ref2,\n        _ref2$futureEvents,\n        futureEvents,\n        instanceStartDate,\n        newDetails,\n        _args8 = arguments;\n\n    return regeneratorRuntime.async(function updateEventAsync$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            details = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : {};\n            _ref2 = _args8.length > 2 && _args8[2] !== undefined ? _args8[2] : {}, _ref2$futureEvents = _ref2.futureEvents, futureEvents = _ref2$futureEvents === void 0 ? false : _ref2$futureEvents, instanceStartDate = _ref2.instanceStartDate;\n\n            if (id) {\n              _context8.next = 4;\n              break;\n            }\n\n            throw new Error('updateEventAsync must be called with an id (string) of the target event');\n\n          case 4:\n            if (_reactNative.Platform.OS === 'ios') {\n              if (details.hasOwnProperty('creationDate') || details.hasOwnProperty('lastModifiedDate') || details.hasOwnProperty('originalStartDate') || details.hasOwnProperty('isDetached') || details.hasOwnProperty('status') || details.hasOwnProperty('organizer')) {\n                console.warn('updateEventAsync was called with one or more read-only properties, which will not be updated');\n              }\n            }\n\n            newDetails = _objectSpread({}, details, {\n              id: id,\n              instanceStartDate: instanceStartDate\n            });\n            return _context8.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.saveEventAsync(newDetails, {\n              futureEvents: futureEvents\n            }));\n\n          case 7:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function deleteEventAsync(id) {\n    var _ref3,\n        _ref3$futureEvents,\n        futureEvents,\n        instanceStartDate,\n        _args9 = arguments;\n\n    return regeneratorRuntime.async(function deleteEventAsync$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _ref3 = _args9.length > 1 && _args9[1] !== undefined ? _args9[1] : {}, _ref3$futureEvents = _ref3.futureEvents, futureEvents = _ref3$futureEvents === void 0 ? false : _ref3$futureEvents, instanceStartDate = _ref3.instanceStartDate;\n\n            if (id) {\n              _context9.next = 3;\n              break;\n            }\n\n            throw new Error('deleteEventAsync must be called with an id (string) of the target event');\n\n          case 3:\n            return _context9.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.deleteEventAsync({\n              id: id,\n              instanceStartDate: instanceStartDate\n            }, {\n              futureEvents: futureEvents\n            }));\n\n          case 4:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function getAttendeesForEventAsync(id) {\n    var _ref4,\n        _ref4$futureEvents,\n        futureEvents,\n        instanceStartDate,\n        params,\n        _args10 = arguments;\n\n    return regeneratorRuntime.async(function getAttendeesForEventAsync$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _ref4 = _args10.length > 1 && _args10[1] !== undefined ? _args10[1] : {}, _ref4$futureEvents = _ref4.futureEvents, futureEvents = _ref4$futureEvents === void 0 ? false : _ref4$futureEvents, instanceStartDate = _ref4.instanceStartDate;\n\n            if (id) {\n              _context10.next = 3;\n              break;\n            }\n\n            throw new Error('getAttendeesForEventAsync must be called with an id (string) of the target event');\n\n          case 3:\n            params = _reactNative.Platform.OS === 'ios' ? {\n              id: id,\n              instanceStartDate: instanceStartDate\n            } : id;\n            return _context10.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.getAttendeesForEventAsync(params));\n\n          case 5:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function createAttendeeAsync(eventId) {\n    var details,\n        newDetails,\n        _args11 = arguments;\n    return regeneratorRuntime.async(function createAttendeeAsync$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            details = _args11.length > 1 && _args11[1] !== undefined ? _args11[1] : {};\n\n            if (!(_reactNative.Platform.OS === 'ios')) {\n              _context11.next = 3;\n              break;\n            }\n\n            throw new Error('createAttendeeAsync is not available on iOS');\n\n          case 3:\n            if (eventId) {\n              _context11.next = 5;\n              break;\n            }\n\n            throw new Error('createAttendeeAsync must be called with an id (string) of the target event');\n\n          case 5:\n            if (details.email) {\n              _context11.next = 7;\n              break;\n            }\n\n            throw new Error('createAttendeeAsync requires an email (string)');\n\n          case 7:\n            if (details.role) {\n              _context11.next = 9;\n              break;\n            }\n\n            throw new Error('createAttendeeAsync requires a role (string)');\n\n          case 9:\n            if (details.type) {\n              _context11.next = 11;\n              break;\n            }\n\n            throw new Error('createAttendeeAsync requires a type (string)');\n\n          case 11:\n            if (details.status) {\n              _context11.next = 13;\n              break;\n            }\n\n            throw new Error('createAttendeeAsync requires a status (string)');\n\n          case 13:\n            newDetails = _objectSpread({}, details, {\n              id: undefined\n            });\n            return _context11.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.saveAttendeeForEventAsync(newDetails, eventId));\n\n          case 15:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function updateAttendeeAsync(id) {\n    var details,\n        newDetails,\n        _args12 = arguments;\n    return regeneratorRuntime.async(function updateAttendeeAsync$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            details = _args12.length > 1 && _args12[1] !== undefined ? _args12[1] : {};\n\n            if (!(_reactNative.Platform.OS === 'ios')) {\n              _context12.next = 3;\n              break;\n            }\n\n            throw new Error('updateAttendeeAsync is not available on iOS');\n\n          case 3:\n            if (id) {\n              _context12.next = 5;\n              break;\n            }\n\n            throw new Error('updateAttendeeAsync must be called with an id (string) of the target event');\n\n          case 5:\n            newDetails = _objectSpread({}, details, {\n              id: id\n            });\n            return _context12.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.saveAttendeeForEventAsync(newDetails, null));\n\n          case 7:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function deleteAttendeeAsync(id) {\n    return regeneratorRuntime.async(function deleteAttendeeAsync$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            if (!(_reactNative.Platform.OS === 'ios')) {\n              _context13.next = 2;\n              break;\n            }\n\n            throw new Error('deleteAttendeeAsync is not available on iOS');\n\n          case 2:\n            if (id) {\n              _context13.next = 4;\n              break;\n            }\n\n            throw new Error('deleteAttendeeAsync must be called with an id (string) of the target event');\n\n          case 4:\n            return _context13.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.deleteAttendeeAsync(id));\n\n          case 5:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function getRemindersAsync(calendarIds, status, startDate, endDate) {\n    return regeneratorRuntime.async(function getRemindersAsync$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            if (!(_reactNative.Platform.OS === 'android')) {\n              _context14.next = 2;\n              break;\n            }\n\n            throw new Error('getRemindersAsync is not available on Android');\n\n          case 2:\n            if (!(status && !startDate)) {\n              _context14.next = 4;\n              break;\n            }\n\n            throw new Error('getRemindersAsync must be called with a startDate (date) to search for reminders');\n\n          case 4:\n            if (!(status && !endDate)) {\n              _context14.next = 6;\n              break;\n            }\n\n            throw new Error('getRemindersAsync must be called with an endDate (date) to search for reminders');\n\n          case 6:\n            if (!(!calendarIds || !calendarIds.length)) {\n              _context14.next = 8;\n              break;\n            }\n\n            throw new Error('getRemindersAsync must be called with a non-empty array of calendarIds to search');\n\n          case 8:\n            return _context14.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.getRemindersAsync(startDate || null, endDate || null, calendarIds, status || null));\n\n          case 9:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function getReminderAsync(id) {\n    return regeneratorRuntime.async(function getReminderAsync$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            if (!(_reactNative.Platform.OS === 'android')) {\n              _context15.next = 2;\n              break;\n            }\n\n            throw new Error('getReminderAsync is not available on Android');\n\n          case 2:\n            if (id) {\n              _context15.next = 4;\n              break;\n            }\n\n            throw new Error('getReminderAsync must be called with an id (string) of the target reminder');\n\n          case 4:\n            return _context15.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.getReminderByIdAsync(id));\n\n          case 5:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function createReminderAsync(calendarId) {\n    var details,\n        newDetails,\n        _args16 = arguments;\n    return regeneratorRuntime.async(function createReminderAsync$(_context16) {\n      while (1) {\n        switch (_context16.prev = _context16.next) {\n          case 0:\n            details = _args16.length > 1 && _args16[1] !== undefined ? _args16[1] : {};\n\n            if (!(_reactNative.Platform.OS === 'android')) {\n              _context16.next = 3;\n              break;\n            }\n\n            throw new Error('createReminderAsync is not available on Android');\n\n          case 3:\n            if (calendarId) {\n              _context16.next = 5;\n              break;\n            }\n\n            throw new Error('createReminderAsync must be called with an id (string) of the target calendar');\n\n          case 5:\n            newDetails = _objectSpread({}, details, {\n              id: undefined,\n              calendarId: calendarId === DEFAULT ? undefined : calendarId\n            });\n            return _context16.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.saveReminderAsync(newDetails));\n\n          case 7:\n          case \"end\":\n            return _context16.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function updateReminderAsync(id) {\n    var details,\n        newDetails,\n        _args17 = arguments;\n    return regeneratorRuntime.async(function updateReminderAsync$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            details = _args17.length > 1 && _args17[1] !== undefined ? _args17[1] : {};\n\n            if (!(_reactNative.Platform.OS === 'android')) {\n              _context17.next = 3;\n              break;\n            }\n\n            throw new Error('updateReminderAsync is not available on Android');\n\n          case 3:\n            if (id) {\n              _context17.next = 5;\n              break;\n            }\n\n            throw new Error('updateReminderAsync must be called with an id (string) of the target reminder');\n\n          case 5:\n            if (details.hasOwnProperty('creationDate') || details.hasOwnProperty('lastModifiedDate')) {\n              console.warn('updateReminderAsync was called with one or more read-only properties, which will not be updated');\n            }\n\n            newDetails = _objectSpread({}, details, {\n              id: id\n            });\n            return _context17.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.saveReminderAsync(newDetails));\n\n          case 8:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function deleteReminderAsync(id) {\n    return regeneratorRuntime.async(function deleteReminderAsync$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            if (!(_reactNative.Platform.OS === 'android')) {\n              _context18.next = 2;\n              break;\n            }\n\n            throw new Error('deleteReminderAsync is not available on Android');\n\n          case 2:\n            if (id) {\n              _context18.next = 4;\n              break;\n            }\n\n            throw new Error('deleteReminderAsync must be called with an id (string) of the target reminder');\n\n          case 4:\n            return _context18.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.deleteReminderAsync(id));\n\n          case 5:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function getSourcesAsync() {\n    return regeneratorRuntime.async(function getSourcesAsync$(_context19) {\n      while (1) {\n        switch (_context19.prev = _context19.next) {\n          case 0:\n            if (!(_reactNative.Platform.OS === 'android')) {\n              _context19.next = 2;\n              break;\n            }\n\n            throw new Error('getSourcesAsync is not available on Android');\n\n          case 2:\n            return _context19.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.getSourcesAsync());\n\n          case 3:\n          case \"end\":\n            return _context19.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function getSourceAsync(id) {\n    return regeneratorRuntime.async(function getSourceAsync$(_context20) {\n      while (1) {\n        switch (_context20.prev = _context20.next) {\n          case 0:\n            if (!(_reactNative.Platform.OS === 'android')) {\n              _context20.next = 2;\n              break;\n            }\n\n            throw new Error('getSourceAsync is not available on Android');\n\n          case 2:\n            if (id) {\n              _context20.next = 4;\n              break;\n            }\n\n            throw new Error('getSourceAsync must be called with an id (string) of the target source');\n\n          case 4:\n            return _context20.abrupt(\"return\", _reactNative.NativeModules.ExponentCalendar.getSourceByIdAsync(id));\n\n          case 5:\n          case \"end\":\n            return _context20.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function openEventInCalendar(id) {\n    if (_reactNative.Platform.OS === 'ios') {\n      console.warn('openEventInCalendar is not available on iOS');\n      return;\n    }\n\n    if (!id) {\n      throw new Error('openEventInCalendar must be called with an id (string) of the target event');\n    }\n\n    return _reactNative.NativeModules.ExponentCalendar.openEventInCalendar(parseInt(id, 10));\n  }\n\n  var EntityTypes = {\n    EVENT: 'event',\n    REMINDER: 'reminder'\n  };\n  exports.EntityTypes = EntityTypes;\n  var Frequency = {\n    DAILY: 'daily',\n    WEEKLY: 'weekly',\n    MONTHLY: 'monthly',\n    YEARLY: 'yearly'\n  };\n  exports.Frequency = Frequency;\n  var Availability = {\n    NOT_SUPPORTED: 'notSupported',\n    BUSY: 'busy',\n    FREE: 'free',\n    TENTATIVE: 'tentative',\n    UNAVAILABLE: 'unavailable'\n  };\n  exports.Availability = Availability;\n  var CalendarType = {\n    LOCAL: 'local',\n    CALDAV: 'caldav',\n    EXCHANGE: 'exchange',\n    SUBSCRIBED: 'subscribed',\n    BIRTHDAYS: 'birthdays'\n  };\n  exports.CalendarType = CalendarType;\n  var EventStatus = {\n    NONE: 'none',\n    CONFIRMED: 'confirmed',\n    TENTATIVE: 'tentative',\n    CANCELED: 'canceled'\n  };\n  exports.EventStatus = EventStatus;\n  var SourceType = {\n    LOCAL: 'local',\n    EXCHANGE: 'exchange',\n    CALDAV: 'caldav',\n    MOBILEME: 'mobileme',\n    SUBSCRIBED: 'subscribed',\n    BIRTHDAYS: 'birthdays'\n  };\n  exports.SourceType = SourceType;\n  var AttendeeRole = {\n    UNKNOWN: 'unknown',\n    REQUIRED: 'required',\n    OPTIONAL: 'optional',\n    CHAIR: 'chair',\n    NON_PARTICIPANT: 'nonParticipant',\n    ATTENDEE: 'attendee',\n    ORGANIZER: 'organizer',\n    PERFORMER: 'performer',\n    SPEAKER: 'speaker',\n    NONE: 'none'\n  };\n  exports.AttendeeRole = AttendeeRole;\n  var AttendeeStatus = {\n    UNKNOWN: 'unknown',\n    PENDING: 'pending',\n    ACCEPTED: 'accepted',\n    DECLINED: 'declined',\n    TENTATIVE: 'tentative',\n    DELEGATED: 'delegated',\n    COMPLETED: 'completed',\n    IN_PROCESS: 'inProcess',\n    INVITED: 'invited',\n    NONE: 'none'\n  };\n  exports.AttendeeStatus = AttendeeStatus;\n  var AttendeeType = {\n    UNKNOWN: 'unknown',\n    PERSON: 'person',\n    ROOM: 'room',\n    GROUP: 'group',\n    RESOURCE: 'resource',\n    OPTIONAL: 'optional',\n    REQUIRED: 'required',\n    NONE: 'none'\n  };\n  exports.AttendeeType = AttendeeType;\n  var AlarmMethod = {\n    ALARM: 'alarm',\n    ALERT: 'alert',\n    EMAIL: 'email',\n    SMS: 'sms',\n    DEFAULT: 'default'\n  };\n  exports.AlarmMethod = AlarmMethod;\n  var EventAccessLevel = {\n    CONFIDENTIAL: 'confidential',\n    PRIVATE: 'private',\n    PUBLIC: 'public',\n    DEFAULT: 'default'\n  };\n  exports.EventAccessLevel = EventAccessLevel;\n  var CalendarAccessLevel = {\n    CONTRIBUTOR: 'contributor',\n    EDITOR: 'editor',\n    FREEBUSY: 'freebusy',\n    OVERRIDE: 'override',\n    OWNER: 'owner',\n    READ: 'read',\n    RESPOND: 'respond',\n    ROOT: 'root',\n    NONE: 'none'\n  };\n  exports.CalendarAccessLevel = CalendarAccessLevel;\n  var ReminderStatus = {\n    COMPLETED: 'completed',\n    INCOMPLETE: 'incomplete'\n  };\n  exports.ReminderStatus = ReminderStatus;\n  var DEFAULT = 'default';\n  exports.DEFAULT = DEFAULT;\n});","map":[[28,0,1,0],[34,0,2,7],[34,11,2,22,"getCalendarsAsync"],[34,28,2,7],[34,29,2,40,"entityType"],[34,39,2,7],[35,0,2,7],[36,0,2,7],[37,0,2,7],[38,0,2,7],[39,0,2,7],[39,16,3,9,"entityType"],[39,26,2,7],[40,0,2,7],[41,0,2,7],[42,0,2,7],[44,0,2,7],[44,45,4,15,"NativeModules"],[44,72,4,29,"ExponentCalendar"],[44,88,4,15],[44,89,4,46,"getCalendarsAsync"],[44,106,4,15],[44,107,4,64],[44,111,4,15],[44,112,2,7],[46,0,2,7],[47,0,2,7],[47,45,6,11,"NativeModules"],[47,72,6,25,"ExponentCalendar"],[47,88,6,11],[47,89,6,42,"getCalendarsAsync"],[47,106,6,11],[47,107,6,60,"entityType"],[47,117,6,11],[47,118,2,7],[49,0,2,7],[50,0,2,7],[51,0,2,7],[52,0,2,7],[53,0,2,7],[54,0,2,7],[55,0,2,7],[57,0,8,7],[57,11,8,22,"createCalendarAsync"],[57,30,8,7],[58,0,8,7],[59,0,8,7],[60,0,8,7],[61,0,8,7],[62,0,8,7],[63,0,8,7],[64,0,8,7],[65,0,8,7],[66,0,8,42,"details"],[66,12,8,42,"details"],[66,19,8,7],[66,81,8,52],[66,83,8,7],[67,0,9,8,"color"],[67,12,9,8,"color"],[67,17,8,7],[67,20,9,16,"details"],[67,27,9,23],[67,28,9,24,"color"],[67,33,9,16],[67,36,9,32],[67,67,9,45,"details"],[67,74,9,52],[67,75,9,53,"color"],[67,80,9,32],[67,81,9,16],[67,84,9,62,"undefined"],[67,93,8,7],[68,0,10,10,"newDetails"],[68,12,10,10,"newDetails"],[68,22,8,7],[68,43,10,28,"details"],[68,50,8,7],[69,0,10,37,"id"],[69,14,10,37,"id"],[69,16,10,39],[69,18,10,41,"undefined"],[69,27,8,7],[70,0,10,52,"color"],[70,14,10,52,"color"],[70,19,10,57],[70,21,10,52,"color"],[71,0,8,7],[72,0,8,7],[72,46,11,11,"NativeModules"],[72,73,11,25,"ExponentCalendar"],[72,89,11,11],[72,90,11,42,"saveCalendarAsync"],[72,107,11,11],[72,108,11,60,"newDetails"],[72,118,11,11],[72,119,8,7],[74,0,8,7],[75,0,8,7],[76,0,8,7],[77,0,8,7],[78,0,8,7],[79,0,8,7],[80,0,8,7],[82,0,13,7],[82,11,13,22,"updateCalendarAsync"],[82,30,13,7],[82,31,13,42,"id"],[82,33,13,7],[83,0,13,7],[84,0,13,7],[85,0,13,7],[86,0,13,7],[87,0,13,7],[88,0,13,7],[89,0,13,7],[90,0,13,7],[91,0,13,46,"details"],[91,12,13,46,"details"],[91,19,13,7],[91,81,13,56],[91,83,13,7],[93,0,13,7],[93,16,14,9,"id"],[93,18,13,7],[94,0,13,7],[95,0,13,7],[96,0,13,7],[98,0,13,7],[98,18,15,14],[98,22,15,18,"Error"],[98,27,15,14],[98,28,15,24],[98,107,15,14],[98,108,13,7],[100,0,13,7],[101,0,17,8,"color"],[101,12,17,8,"color"],[101,17,13,7],[101,20,17,16,"details"],[101,27,17,23],[101,28,17,24,"color"],[101,33,17,16],[101,36,17,32],[101,67,17,45,"details"],[101,74,17,52],[101,75,17,53,"color"],[101,80,17,32],[101,81,17,16],[101,84,17,62,"undefined"],[101,93,13,7],[103,0,18,4],[103,16,18,8,"Platform"],[103,38,18,17,"OS"],[103,40,18,8],[103,45,18,24],[103,54,18,4],[103,56,18,35],[104,0,19,8],[104,18,19,12,"details"],[104,25,19,19],[104,26,19,20,"hasOwnProperty"],[104,40,19,12],[104,41,19,35],[104,49,19,12],[104,54,20,12,"details"],[104,61,20,19],[104,62,20,20,"hasOwnProperty"],[104,76,20,12],[104,77,20,35],[104,84,20,12],[104,85,19,12],[104,89,21,12,"details"],[104,96,21,19],[104,97,21,20,"hasOwnProperty"],[104,111,21,12],[104,112,21,35],[104,133,21,12],[104,134,19,12],[104,138,22,12,"details"],[104,145,22,19],[104,146,22,20,"hasOwnProperty"],[104,160,22,12],[104,161,22,35],[104,184,22,12],[104,185,19,12],[104,189,23,12,"details"],[104,196,23,19],[104,197,23,20,"hasOwnProperty"],[104,211,23,12],[104,212,23,35],[104,223,23,12],[104,224,19,12],[104,228,24,12,"details"],[104,235,24,19],[104,236,24,20,"hasOwnProperty"],[104,250,24,12],[104,251,24,35],[104,265,24,12],[104,266,19,12],[104,270,25,12,"details"],[104,277,25,19],[104,278,25,20,"hasOwnProperty"],[104,292,25,12],[104,293,25,35],[104,303,25,12],[104,304,19,12],[104,308,26,12,"details"],[104,315,26,19],[104,316,26,20,"hasOwnProperty"],[104,330,26,12],[104,331,26,35],[104,349,26,12],[104,350,19,12],[104,354,27,12,"details"],[104,361,27,19],[104,362,27,20,"hasOwnProperty"],[104,376,27,12],[104,377,27,35],[104,399,27,12],[104,400,19,12],[104,404,28,12,"details"],[104,411,28,19],[104,412,28,20,"hasOwnProperty"],[104,426,28,12],[104,427,28,35],[104,440,28,12],[104,441,19,8],[104,443,28,51],[105,0,29,12,"console"],[105,16,29,12,"console"],[105,23,29,19],[105,24,29,20,"warn"],[105,28,29,12],[105,29,29,25],[105,126,29,12],[106,0,30,9],[107,0,31,5],[107,13,18,4],[107,19,32,9],[108,0,33,8],[108,18,33,12,"details"],[108,25,33,19],[108,26,33,20,"hasOwnProperty"],[108,40,33,12],[108,41,33,35],[108,49,33,12],[108,54,34,12,"details"],[108,61,34,19],[108,62,34,20,"hasOwnProperty"],[108,76,34,12],[108,77,34,35],[108,83,34,12],[108,84,33,12],[108,88,35,12,"details"],[108,95,35,19],[108,96,35,20,"hasOwnProperty"],[108,110,35,12],[108,111,35,35],[108,123,35,12],[108,124,33,12],[108,128,36,12,"details"],[108,135,36,19],[108,136,36,20,"hasOwnProperty"],[108,150,36,12],[108,151,36,35],[108,172,36,12],[108,173,33,12],[108,177,37,12,"details"],[108,184,37,19],[108,185,37,20,"hasOwnProperty"],[108,199,37,12],[108,200,37,35],[108,223,37,12],[108,224,33,8],[108,226,37,61],[109,0,38,12,"console"],[109,16,38,12,"console"],[109,23,38,19],[109,24,38,20,"warn"],[109,28,38,12],[109,29,38,25],[109,126,38,12],[110,0,39,9],[111,0,40,5],[113,0,41,10,"newDetails"],[113,12,41,10,"newDetails"],[113,22,13,7],[113,43,41,28,"details"],[113,50,13,7],[114,0,41,37,"id"],[114,14,41,37,"id"],[114,16,41,39],[114,18,41,37,"id"],[114,20,13,7],[115,0,41,41,"color"],[115,14,41,41,"color"],[115,19,41,46],[115,21,41,41,"color"],[116,0,13,7],[117,0,13,7],[117,46,42,11,"NativeModules"],[117,73,42,25,"ExponentCalendar"],[117,89,42,11],[117,90,42,42,"saveCalendarAsync"],[117,107,42,11],[117,108,42,60,"newDetails"],[117,118,42,11],[117,119,13,7],[119,0,13,7],[120,0,13,7],[121,0,13,7],[122,0,13,7],[123,0,13,7],[124,0,13,7],[125,0,13,7],[127,0,44,7],[127,11,44,22,"deleteCalendarAsync"],[127,30,44,7],[127,31,44,42,"id"],[127,33,44,7],[128,0,44,7],[129,0,44,7],[130,0,44,7],[131,0,44,7],[132,0,44,7],[132,16,45,9,"id"],[132,18,44,7],[133,0,44,7],[134,0,44,7],[135,0,44,7],[137,0,44,7],[137,18,46,14],[137,22,46,18,"Error"],[137,27,46,14],[137,28,46,24],[137,107,46,14],[137,108,44,7],[139,0,44,7],[140,0,44,7],[140,46,48,11,"NativeModules"],[140,73,48,25,"ExponentCalendar"],[140,89,48,11],[140,90,48,42,"deleteCalendarAsync"],[140,109,48,11],[140,110,48,62,"id"],[140,112,48,11],[140,113,44,7],[142,0,44,7],[143,0,44,7],[144,0,44,7],[145,0,44,7],[146,0,44,7],[147,0,44,7],[148,0,44,7],[150,0,50,7],[150,11,50,22,"getEventsAsync"],[150,25,50,7],[150,26,50,37,"calendarIds"],[150,37,50,7],[150,39,50,50,"startDate"],[150,48,50,7],[150,50,50,61,"endDate"],[150,57,50,7],[151,0,50,7],[152,0,50,7],[153,0,50,7],[154,0,50,7],[155,0,50,7],[155,16,51,9,"startDate"],[155,25,50,7],[156,0,50,7],[157,0,50,7],[158,0,50,7],[160,0,50,7],[160,18,52,14],[160,22,52,18,"Error"],[160,27,52,14],[160,28,52,24],[160,104,52,14],[160,105,50,7],[162,0,50,7],[163,0,50,7],[163,16,54,9,"endDate"],[163,23,50,7],[164,0,50,7],[165,0,50,7],[166,0,50,7],[168,0,50,7],[168,18,55,14],[168,22,55,18,"Error"],[168,27,55,14],[168,28,55,24],[168,103,55,14],[168,104,50,7],[170,0,50,7],[171,0,50,7],[171,18,57,8],[171,19,57,9,"calendarIds"],[171,30,57,8],[171,34,57,24],[171,35,57,25,"calendarIds"],[171,46,57,36],[171,47,57,37,"length"],[171,53,50,7],[172,0,50,7],[173,0,50,7],[174,0,50,7],[176,0,50,7],[176,18,58,14],[176,22,58,18,"Error"],[176,27,58,14],[176,28,58,24],[176,107,58,14],[176,108,50,7],[178,0,50,7],[179,0,50,7],[179,46,60,11,"NativeModules"],[179,73,60,25,"ExponentCalendar"],[179,89,60,11],[179,90,60,42,"getEventsAsync"],[179,104,60,11],[179,105,60,57,"startDate"],[179,114,60,11],[179,116,60,68,"endDate"],[179,123,60,11],[179,125,60,77,"calendarIds"],[179,136,60,11],[179,137,50,7],[181,0,50,7],[182,0,50,7],[183,0,50,7],[184,0,50,7],[185,0,50,7],[186,0,50,7],[187,0,50,7],[189,0,62,7],[189,11,62,22,"getEventAsync"],[189,24,62,7],[189,25,62,36,"id"],[189,27,62,7],[190,0,62,7],[191,0,62,7],[192,0,62,7],[193,0,62,7],[194,0,62,7],[196,0,62,7],[197,0,62,7],[198,0,62,7],[199,0,62,7],[200,0,62,7],[200,78,62,86],[200,80,62,7],[200,107,62,42,"futureEvents"],[200,119,62,7],[200,121,62,42,"futureEvents"],[200,133,62,7],[200,167,62,57],[200,172,62,7],[200,194,62,64,"instanceStartDate"],[200,211,62,7],[200,219,62,64,"instanceStartDate"],[200,236,62,7],[202,0,62,7],[202,16,63,9,"id"],[202,18,62,7],[203,0,62,7],[204,0,62,7],[205,0,62,7],[207,0,62,7],[207,18,64,14],[207,22,64,18,"Error"],[207,27,64,14],[207,28,64,24],[207,98,64,14],[207,99,62,7],[209,0,62,7],[210,0,62,7],[210,18,66,8,"Platform"],[210,40,66,17,"OS"],[210,42,66,8],[210,47,66,24],[210,52,62,7],[211,0,62,7],[212,0,62,7],[213,0,62,7],[215,0,62,7],[215,46,67,15,"NativeModules"],[215,73,67,29,"ExponentCalendar"],[215,89,67,15],[215,90,67,46,"getEventByIdAsync"],[215,107,67,15],[215,108,67,64,"id"],[215,110,67,15],[215,112,67,68,"instanceStartDate"],[215,129,67,15],[215,130,62,7],[217,0,62,7],[218,0,62,7],[218,46,70,15,"NativeModules"],[218,73,70,29,"ExponentCalendar"],[218,89,70,15],[218,90,70,46,"getEventByIdAsync"],[218,107,70,15],[218,108,70,64,"id"],[218,110,70,15],[218,111,62,7],[220,0,62,7],[221,0,62,7],[222,0,62,7],[223,0,62,7],[224,0,62,7],[225,0,62,7],[226,0,62,7],[228,0,73,7],[228,11,73,22,"createEventAsync"],[228,27,73,7],[228,28,73,39,"calendarId"],[228,38,73,7],[229,0,73,7],[230,0,73,7],[231,0,73,7],[232,0,73,7],[233,0,73,7],[234,0,73,7],[235,0,73,7],[236,0,73,51,"details"],[236,12,73,51,"details"],[236,19,73,7],[236,81,73,61],[236,83,73,7],[238,0,73,7],[238,16,74,9,"calendarId"],[238,26,73,7],[239,0,73,7],[240,0,73,7],[241,0,73,7],[243,0,73,7],[243,18,75,14],[243,22,75,18,"Error"],[243,27,75,14],[243,28,75,24],[243,104,75,14],[243,105,73,7],[245,0,73,7],[246,0,73,7],[246,18,77,8,"Platform"],[246,40,77,17,"OS"],[246,42,77,8],[246,47,77,24],[246,56,73,7],[247,0,73,7],[248,0,73,7],[249,0,73,7],[251,0,73,7],[251,16,78,13,"details"],[251,23,78,20],[251,24,78,21,"startDate"],[251,33,73,7],[252,0,73,7],[253,0,73,7],[254,0,73,7],[256,0,73,7],[256,18,79,18],[256,22,79,22,"Error"],[256,27,79,18],[256,28,79,28],[256,74,79,18],[256,75,73,7],[258,0,73,7],[259,0,73,7],[259,16,81,13,"details"],[259,23,81,20],[259,24,81,21,"endDate"],[259,31,73,7],[260,0,73,7],[261,0,73,7],[262,0,73,7],[264,0,73,7],[264,18,82,18],[264,22,82,22,"Error"],[264,27,82,18],[264,28,82,28],[264,73,82,18],[264,74,73,7],[266,0,73,7],[267,0,73,7],[267,16,84,13,"details"],[267,23,84,20],[267,24,84,21,"timeZone"],[267,32,73,7],[268,0,73,7],[269,0,73,7],[270,0,73,7],[272,0,73,7],[272,18,85,18],[272,22,85,22,"Error"],[272,27,85,18],[272,28,85,28],[272,75,85,18],[272,76,73,7],[274,0,73,7],[275,0,88,10,"newDetails"],[275,12,88,10,"newDetails"],[275,22,73,7],[275,43,89,11,"details"],[275,50,73,7],[276,0,90,8,"id"],[276,14,90,8,"id"],[276,16,90,10],[276,18,90,12,"undefined"],[276,27,73,7],[277,0,91,8,"calendarId"],[277,14,91,8,"calendarId"],[277,24,91,18],[277,26,91,20,"calendarId"],[277,36,91,30],[277,41,91,35,"DEFAULT"],[277,48,91,20],[277,51,91,45,"undefined"],[277,60,91,20],[277,63,91,57,"calendarId"],[278,0,73,7],[279,0,73,7],[279,46,93,11,"NativeModules"],[279,73,93,25,"ExponentCalendar"],[279,89,93,11],[279,90,93,42,"saveEventAsync"],[279,104,93,11],[279,105,93,57,"newDetails"],[279,115,93,11],[279,117,93,69],[279,119,93,11],[279,120,73,7],[281,0,73,7],[282,0,73,7],[283,0,73,7],[284,0,73,7],[285,0,73,7],[286,0,73,7],[287,0,73,7],[289,0,95,7],[289,11,95,22,"updateEventAsync"],[289,27,95,7],[289,28,95,39,"id"],[289,30,95,7],[290,0,95,7],[291,0,95,7],[292,0,95,7],[293,0,95,7],[294,0,95,7],[295,0,95,7],[296,0,95,7],[298,0,95,7],[299,0,95,7],[300,0,95,7],[301,0,95,7],[302,0,95,43,"details"],[302,12,95,43,"details"],[302,19,95,7],[302,81,95,53],[302,83,95,7],[303,0,95,7],[303,79,95,103],[303,81,95,7],[303,110,95,59,"futureEvents"],[303,122,95,7],[303,124,95,59,"futureEvents"],[303,136,95,7],[303,171,95,74],[303,176,95,7],[303,199,95,81,"instanceStartDate"],[303,216,95,7],[303,225,95,81,"instanceStartDate"],[303,242,95,7],[305,0,95,7],[305,16,96,9,"id"],[305,18,95,7],[306,0,95,7],[307,0,95,7],[308,0,95,7],[310,0,95,7],[310,18,97,14],[310,22,97,18,"Error"],[310,27,97,14],[310,28,97,24],[310,101,97,14],[310,102,95,7],[312,0,95,7],[313,0,99,4],[313,16,99,8,"Platform"],[313,38,99,17,"OS"],[313,40,99,8],[313,45,99,24],[313,50,99,4],[313,52,99,31],[314,0,100,8],[314,18,100,12,"details"],[314,25,100,19],[314,26,100,20,"hasOwnProperty"],[314,40,100,12],[314,41,100,35],[314,55,100,12],[314,60,101,12,"details"],[314,67,101,19],[314,68,101,20,"hasOwnProperty"],[314,82,101,12],[314,83,101,35],[314,101,101,12],[314,102,100,12],[314,106,102,12,"details"],[314,113,102,19],[314,114,102,20,"hasOwnProperty"],[314,128,102,12],[314,129,102,35],[314,148,102,12],[314,149,100,12],[314,153,103,12,"details"],[314,160,103,19],[314,161,103,20,"hasOwnProperty"],[314,175,103,12],[314,176,103,35],[314,188,103,12],[314,189,100,12],[314,193,104,12,"details"],[314,200,104,19],[314,201,104,20,"hasOwnProperty"],[314,215,104,12],[314,216,104,35],[314,224,104,12],[314,225,100,12],[314,229,105,12,"details"],[314,236,105,19],[314,237,105,20,"hasOwnProperty"],[314,251,105,12],[314,252,105,35],[314,263,105,12],[314,264,100,8],[314,266,105,49],[315,0,106,12,"console"],[315,16,106,12,"console"],[315,23,106,19],[315,24,106,20,"warn"],[315,28,106,12],[315,29,106,25],[315,123,106,12],[316,0,107,9],[317,0,108,5],[319,0,109,10,"newDetails"],[319,12,109,10,"newDetails"],[319,22,95,7],[319,43,109,28,"details"],[319,50,95,7],[320,0,109,37,"id"],[320,14,109,37,"id"],[320,16,109,39],[320,18,109,37,"id"],[320,20,95,7],[321,0,109,41,"instanceStartDate"],[321,14,109,41,"instanceStartDate"],[321,31,109,58],[321,33,109,41,"instanceStartDate"],[322,0,95,7],[323,0,95,7],[323,46,110,11,"NativeModules"],[323,73,110,25,"ExponentCalendar"],[323,89,110,11],[323,90,110,42,"saveEventAsync"],[323,104,110,11],[323,105,110,57,"newDetails"],[323,115,110,11],[323,117,110,69],[324,0,110,71,"futureEvents"],[324,14,110,71,"futureEvents"],[324,26,110,83],[324,28,110,71,"futureEvents"],[325,0,110,69],[325,13,110,11],[325,14,95,7],[327,0,95,7],[328,0,95,7],[329,0,95,7],[330,0,95,7],[331,0,95,7],[332,0,95,7],[333,0,95,7],[335,0,112,7],[335,11,112,22,"deleteEventAsync"],[335,27,112,7],[335,28,112,39,"id"],[335,30,112,7],[336,0,112,7],[337,0,112,7],[338,0,112,7],[339,0,112,7],[340,0,112,7],[342,0,112,7],[343,0,112,7],[344,0,112,7],[345,0,112,7],[346,0,112,7],[346,79,112,89],[346,81,112,7],[346,110,112,45,"futureEvents"],[346,122,112,7],[346,124,112,45,"futureEvents"],[346,136,112,7],[346,171,112,60],[346,176,112,7],[346,199,112,67,"instanceStartDate"],[346,216,112,7],[346,225,112,67,"instanceStartDate"],[346,242,112,7],[348,0,112,7],[348,16,113,9,"id"],[348,18,112,7],[349,0,112,7],[350,0,112,7],[351,0,112,7],[353,0,112,7],[353,18,114,14],[353,22,114,18,"Error"],[353,27,114,14],[353,28,114,24],[353,101,114,14],[353,102,112,7],[355,0,112,7],[356,0,112,7],[356,46,116,11,"NativeModules"],[356,73,116,25,"ExponentCalendar"],[356,89,116,11],[356,90,116,42,"deleteEventAsync"],[356,106,116,11],[356,107,116,59],[357,0,116,61,"id"],[357,14,116,61,"id"],[357,16,116,63],[357,18,116,61,"id"],[357,20,116,59],[358,0,116,65,"instanceStartDate"],[358,14,116,65,"instanceStartDate"],[358,31,116,82],[358,33,116,65,"instanceStartDate"],[359,0,116,59],[359,13,116,11],[359,15,116,86],[360,0,116,88,"futureEvents"],[360,14,116,88,"futureEvents"],[360,26,116,100],[360,28,116,88,"futureEvents"],[361,0,116,86],[361,13,116,11],[361,14,112,7],[363,0,112,7],[364,0,112,7],[365,0,112,7],[366,0,112,7],[367,0,112,7],[368,0,112,7],[369,0,112,7],[371,0,118,7],[371,11,118,22,"getAttendeesForEventAsync"],[371,36,118,7],[371,37,118,48,"id"],[371,39,118,7],[372,0,118,7],[373,0,118,7],[374,0,118,7],[375,0,118,7],[376,0,118,7],[377,0,118,7],[379,0,118,7],[380,0,118,7],[381,0,118,7],[382,0,118,7],[383,0,118,7],[383,82,118,98],[383,84,118,7],[383,113,118,54,"futureEvents"],[383,125,118,7],[383,127,118,54,"futureEvents"],[383,139,118,7],[383,174,118,69],[383,179,118,7],[383,202,118,76,"instanceStartDate"],[383,219,118,7],[383,228,118,76,"instanceStartDate"],[383,245,118,7],[385,0,118,7],[385,16,119,9,"id"],[385,18,118,7],[386,0,118,7],[387,0,118,7],[388,0,118,7],[390,0,118,7],[390,18,120,14],[390,22,120,18,"Error"],[390,27,120,14],[390,28,120,24],[390,110,120,14],[390,111,118,7],[392,0,118,7],[393,0,123,10,"params"],[393,12,123,10,"params"],[393,18,118,7],[393,21,123,19,"Platform"],[393,43,123,28,"OS"],[393,45,123,19],[393,50,123,35],[393,55,123,19],[393,58,123,43],[394,0,123,45,"id"],[394,14,123,45,"id"],[394,16,123,47],[394,18,123,45,"id"],[394,20,123,43],[395,0,123,49,"instanceStartDate"],[395,14,123,49,"instanceStartDate"],[395,31,123,66],[395,33,123,49,"instanceStartDate"],[396,0,123,43],[396,13,123,19],[396,16,123,71,"id"],[396,18,118,7],[397,0,118,7],[397,47,124,11,"NativeModules"],[397,74,124,25,"ExponentCalendar"],[397,90,124,11],[397,91,124,42,"getAttendeesForEventAsync"],[397,116,124,11],[397,117,124,68,"params"],[397,123,124,11],[397,124,118,7],[399,0,118,7],[400,0,118,7],[401,0,118,7],[402,0,118,7],[403,0,118,7],[404,0,118,7],[405,0,118,7],[407,0,126,7],[407,11,126,22,"createAttendeeAsync"],[407,30,126,7],[407,31,126,42,"eventId"],[407,38,126,7],[408,0,126,7],[409,0,126,7],[410,0,126,7],[411,0,126,7],[412,0,126,7],[413,0,126,7],[414,0,126,7],[415,0,126,51,"details"],[415,12,126,51,"details"],[415,19,126,7],[415,84,126,61],[415,86,126,7],[417,0,126,7],[417,18,127,8,"Platform"],[417,40,127,17,"OS"],[417,42,127,8],[417,47,127,24],[417,52,126,7],[418,0,126,7],[419,0,126,7],[420,0,126,7],[422,0,126,7],[422,18,128,14],[422,22,128,18,"Error"],[422,27,128,14],[422,28,128,24],[422,73,128,14],[422,74,126,7],[424,0,126,7],[425,0,126,7],[425,16,130,9,"eventId"],[425,23,126,7],[426,0,126,7],[427,0,126,7],[428,0,126,7],[430,0,126,7],[430,18,131,14],[430,22,131,18,"Error"],[430,27,131,14],[430,28,131,24],[430,104,131,14],[430,105,126,7],[432,0,126,7],[433,0,126,7],[433,16,133,9,"details"],[433,23,133,16],[433,24,133,17,"email"],[433,29,126,7],[434,0,126,7],[435,0,126,7],[436,0,126,7],[438,0,126,7],[438,18,134,14],[438,22,134,18,"Error"],[438,27,134,14],[438,28,134,24],[438,76,134,14],[438,77,126,7],[440,0,126,7],[441,0,126,7],[441,16,136,9,"details"],[441,23,136,16],[441,24,136,17,"role"],[441,28,126,7],[442,0,126,7],[443,0,126,7],[444,0,126,7],[446,0,126,7],[446,18,137,14],[446,22,137,18,"Error"],[446,27,137,14],[446,28,137,24],[446,74,137,14],[446,75,126,7],[448,0,126,7],[449,0,126,7],[449,16,139,9,"details"],[449,23,139,16],[449,24,139,17,"type"],[449,28,126,7],[450,0,126,7],[451,0,126,7],[452,0,126,7],[454,0,126,7],[454,18,140,14],[454,22,140,18,"Error"],[454,27,140,14],[454,28,140,24],[454,74,140,14],[454,75,126,7],[456,0,126,7],[457,0,126,7],[457,16,142,9,"details"],[457,23,142,16],[457,24,142,17,"status"],[457,30,126,7],[458,0,126,7],[459,0,126,7],[460,0,126,7],[462,0,126,7],[462,18,143,14],[462,22,143,18,"Error"],[462,27,143,14],[462,28,143,24],[462,76,143,14],[462,77,126,7],[464,0,126,7],[465,0,145,10,"newDetails"],[465,12,145,10,"newDetails"],[465,22,126,7],[465,43,145,28,"details"],[465,50,126,7],[466,0,145,37,"id"],[466,14,145,37,"id"],[466,16,145,39],[466,18,145,41,"undefined"],[467,0,126,7],[468,0,126,7],[468,47,146,11,"NativeModules"],[468,74,146,25,"ExponentCalendar"],[468,90,146,11],[468,91,146,42,"saveAttendeeForEventAsync"],[468,116,146,11],[468,117,146,68,"newDetails"],[468,127,146,11],[468,129,146,80,"eventId"],[468,136,146,11],[468,137,126,7],[470,0,126,7],[471,0,126,7],[472,0,126,7],[473,0,126,7],[474,0,126,7],[475,0,126,7],[476,0,126,7],[478,0,148,7],[478,11,148,22,"updateAttendeeAsync"],[478,30,148,7],[478,31,148,42,"id"],[478,33,148,7],[479,0,148,7],[480,0,148,7],[481,0,148,7],[482,0,148,7],[483,0,148,7],[484,0,148,7],[485,0,148,7],[486,0,148,46,"details"],[486,12,148,46,"details"],[486,19,148,7],[486,84,148,56],[486,86,148,7],[488,0,148,7],[488,18,149,8,"Platform"],[488,40,149,17,"OS"],[488,42,149,8],[488,47,149,24],[488,52,148,7],[489,0,148,7],[490,0,148,7],[491,0,148,7],[493,0,148,7],[493,18,150,14],[493,22,150,18,"Error"],[493,27,150,14],[493,28,150,24],[493,73,150,14],[493,74,148,7],[495,0,148,7],[496,0,148,7],[496,16,152,9,"id"],[496,18,148,7],[497,0,148,7],[498,0,148,7],[499,0,148,7],[501,0,148,7],[501,18,153,14],[501,22,153,18,"Error"],[501,27,153,14],[501,28,153,24],[501,104,153,14],[501,105,148,7],[503,0,148,7],[504,0,155,10,"newDetails"],[504,12,155,10,"newDetails"],[504,22,148,7],[504,43,155,28,"details"],[504,50,148,7],[505,0,155,37,"id"],[505,14,155,37,"id"],[505,16,155,39],[505,18,155,37,"id"],[506,0,148,7],[507,0,148,7],[507,47,156,11,"NativeModules"],[507,74,156,25,"ExponentCalendar"],[507,90,156,11],[507,91,156,42,"saveAttendeeForEventAsync"],[507,116,156,11],[507,117,156,68,"newDetails"],[507,127,156,11],[507,129,156,80],[507,133,156,11],[507,134,148,7],[509,0,148,7],[510,0,148,7],[511,0,148,7],[512,0,148,7],[513,0,148,7],[514,0,148,7],[515,0,148,7],[517,0,158,7],[517,11,158,22,"deleteAttendeeAsync"],[517,30,158,7],[517,31,158,42,"id"],[517,33,158,7],[518,0,158,7],[519,0,158,7],[520,0,158,7],[521,0,158,7],[522,0,158,7],[522,18,159,8,"Platform"],[522,40,159,17,"OS"],[522,42,159,8],[522,47,159,24],[522,52,158,7],[523,0,158,7],[524,0,158,7],[525,0,158,7],[527,0,158,7],[527,18,160,14],[527,22,160,18,"Error"],[527,27,160,14],[527,28,160,24],[527,73,160,14],[527,74,158,7],[529,0,158,7],[530,0,158,7],[530,16,162,9,"id"],[530,18,158,7],[531,0,158,7],[532,0,158,7],[533,0,158,7],[535,0,158,7],[535,18,163,14],[535,22,163,18,"Error"],[535,27,163,14],[535,28,163,24],[535,104,163,14],[535,105,158,7],[537,0,158,7],[538,0,158,7],[538,47,165,11,"NativeModules"],[538,74,165,25,"ExponentCalendar"],[538,90,165,11],[538,91,165,42,"deleteAttendeeAsync"],[538,110,165,11],[538,111,165,62,"id"],[538,113,165,11],[538,114,158,7],[540,0,158,7],[541,0,158,7],[542,0,158,7],[543,0,158,7],[544,0,158,7],[545,0,158,7],[546,0,158,7],[548,0,167,7],[548,11,167,22,"getRemindersAsync"],[548,28,167,7],[548,29,167,40,"calendarIds"],[548,40,167,7],[548,42,167,53,"status"],[548,48,167,7],[548,50,167,61,"startDate"],[548,59,167,7],[548,61,167,72,"endDate"],[548,68,167,7],[549,0,167,7],[550,0,167,7],[551,0,167,7],[552,0,167,7],[553,0,167,7],[553,18,168,8,"Platform"],[553,40,168,17,"OS"],[553,42,168,8],[553,47,168,24],[553,56,167,7],[554,0,167,7],[555,0,167,7],[556,0,167,7],[558,0,167,7],[558,18,169,14],[558,22,169,18,"Error"],[558,27,169,14],[558,28,169,24],[558,75,169,14],[558,76,167,7],[560,0,167,7],[561,0,167,7],[561,18,171,8,"status"],[561,24,171,14],[561,28,171,18],[561,29,171,19,"startDate"],[561,38,167,7],[562,0,167,7],[563,0,167,7],[564,0,167,7],[566,0,167,7],[566,18,172,14],[566,22,172,18,"Error"],[566,27,172,14],[566,28,172,24],[566,110,172,14],[566,111,167,7],[568,0,167,7],[569,0,167,7],[569,18,174,8,"status"],[569,24,174,14],[569,28,174,18],[569,29,174,19,"endDate"],[569,36,167,7],[570,0,167,7],[571,0,167,7],[572,0,167,7],[574,0,167,7],[574,18,175,14],[574,22,175,18,"Error"],[574,27,175,14],[574,28,175,24],[574,109,175,14],[574,110,167,7],[576,0,167,7],[577,0,167,7],[577,18,177,8],[577,19,177,9,"calendarIds"],[577,30,177,8],[577,34,177,24],[577,35,177,25,"calendarIds"],[577,46,177,36],[577,47,177,37,"length"],[577,53,167,7],[578,0,167,7],[579,0,167,7],[580,0,167,7],[582,0,167,7],[582,18,178,14],[582,22,178,18,"Error"],[582,27,178,14],[582,28,178,24],[582,110,178,14],[582,111,167,7],[584,0,167,7],[585,0,167,7],[585,47,180,11,"NativeModules"],[585,74,180,25,"ExponentCalendar"],[585,90,180,11],[585,91,180,42,"getRemindersAsync"],[585,108,180,11],[585,109,180,60,"startDate"],[585,118,180,69],[585,122,180,73],[585,126,180,11],[585,128,180,79,"endDate"],[585,135,180,86],[585,139,180,90],[585,143,180,11],[585,145,180,96,"calendarIds"],[585,156,180,11],[585,158,180,109,"status"],[585,164,180,115],[585,168,180,119],[585,172,180,11],[585,173,167,7],[587,0,167,7],[588,0,167,7],[589,0,167,7],[590,0,167,7],[591,0,167,7],[592,0,167,7],[593,0,167,7],[595,0,182,7],[595,11,182,22,"getReminderAsync"],[595,27,182,7],[595,28,182,39,"id"],[595,30,182,7],[596,0,182,7],[597,0,182,7],[598,0,182,7],[599,0,182,7],[600,0,182,7],[600,18,183,8,"Platform"],[600,40,183,17,"OS"],[600,42,183,8],[600,47,183,24],[600,56,182,7],[601,0,182,7],[602,0,182,7],[603,0,182,7],[605,0,182,7],[605,18,184,14],[605,22,184,18,"Error"],[605,27,184,14],[605,28,184,24],[605,74,184,14],[605,75,182,7],[607,0,182,7],[608,0,182,7],[608,16,186,9,"id"],[608,18,182,7],[609,0,182,7],[610,0,182,7],[611,0,182,7],[613,0,182,7],[613,18,187,14],[613,22,187,18,"Error"],[613,27,187,14],[613,28,187,24],[613,104,187,14],[613,105,182,7],[615,0,182,7],[616,0,182,7],[616,47,189,11,"NativeModules"],[616,74,189,25,"ExponentCalendar"],[616,90,189,11],[616,91,189,42,"getReminderByIdAsync"],[616,111,189,11],[616,112,189,63,"id"],[616,114,189,11],[616,115,182,7],[618,0,182,7],[619,0,182,7],[620,0,182,7],[621,0,182,7],[622,0,182,7],[623,0,182,7],[624,0,182,7],[626,0,191,7],[626,11,191,22,"createReminderAsync"],[626,30,191,7],[626,31,191,42,"calendarId"],[626,41,191,7],[627,0,191,7],[628,0,191,7],[629,0,191,7],[630,0,191,7],[631,0,191,7],[632,0,191,7],[633,0,191,7],[634,0,191,54,"details"],[634,12,191,54,"details"],[634,19,191,7],[634,84,191,64],[634,86,191,7],[636,0,191,7],[636,18,192,8,"Platform"],[636,40,192,17,"OS"],[636,42,192,8],[636,47,192,24],[636,56,191,7],[637,0,191,7],[638,0,191,7],[639,0,191,7],[641,0,191,7],[641,18,193,14],[641,22,193,18,"Error"],[641,27,193,14],[641,28,193,24],[641,77,193,14],[641,78,191,7],[643,0,191,7],[644,0,191,7],[644,16,195,9,"calendarId"],[644,26,191,7],[645,0,191,7],[646,0,191,7],[647,0,191,7],[649,0,191,7],[649,18,196,14],[649,22,196,18,"Error"],[649,27,196,14],[649,28,196,24],[649,107,196,14],[649,108,191,7],[651,0,191,7],[652,0,198,10,"newDetails"],[652,12,198,10,"newDetails"],[652,22,191,7],[652,43,199,11,"details"],[652,50,191,7],[653,0,200,8,"id"],[653,14,200,8,"id"],[653,16,200,10],[653,18,200,12,"undefined"],[653,27,191,7],[654,0,201,8,"calendarId"],[654,14,201,8,"calendarId"],[654,24,201,18],[654,26,201,20,"calendarId"],[654,36,201,30],[654,41,201,35,"DEFAULT"],[654,48,201,20],[654,51,201,45,"undefined"],[654,60,201,20],[654,63,201,57,"calendarId"],[655,0,191,7],[656,0,191,7],[656,47,203,11,"NativeModules"],[656,74,203,25,"ExponentCalendar"],[656,90,203,11],[656,91,203,42,"saveReminderAsync"],[656,108,203,11],[656,109,203,60,"newDetails"],[656,119,203,11],[656,120,191,7],[658,0,191,7],[659,0,191,7],[660,0,191,7],[661,0,191,7],[662,0,191,7],[663,0,191,7],[664,0,191,7],[666,0,205,7],[666,11,205,22,"updateReminderAsync"],[666,30,205,7],[666,31,205,42,"id"],[666,33,205,7],[667,0,205,7],[668,0,205,7],[669,0,205,7],[670,0,205,7],[671,0,205,7],[672,0,205,7],[673,0,205,7],[674,0,205,46,"details"],[674,12,205,46,"details"],[674,19,205,7],[674,84,205,56],[674,86,205,7],[676,0,205,7],[676,18,206,8,"Platform"],[676,40,206,17,"OS"],[676,42,206,8],[676,47,206,24],[676,56,205,7],[677,0,205,7],[678,0,205,7],[679,0,205,7],[681,0,205,7],[681,18,207,14],[681,22,207,18,"Error"],[681,27,207,14],[681,28,207,24],[681,77,207,14],[681,78,205,7],[683,0,205,7],[684,0,205,7],[684,16,209,9,"id"],[684,18,205,7],[685,0,205,7],[686,0,205,7],[687,0,205,7],[689,0,205,7],[689,18,210,14],[689,22,210,18,"Error"],[689,27,210,14],[689,28,210,24],[689,107,210,14],[689,108,205,7],[691,0,205,7],[692,0,212,4],[692,16,212,8,"details"],[692,23,212,15],[692,24,212,16,"hasOwnProperty"],[692,38,212,8],[692,39,212,31],[692,53,212,8],[692,58,212,50,"details"],[692,65,212,57],[692,66,212,58,"hasOwnProperty"],[692,80,212,50],[692,81,212,73],[692,99,212,50],[692,100,212,4],[692,102,212,94],[693,0,213,8,"console"],[693,14,213,8,"console"],[693,21,213,15],[693,22,213,16,"warn"],[693,26,213,8],[693,27,213,21],[693,124,213,8],[694,0,214,5],[696,0,215,10,"newDetails"],[696,12,215,10,"newDetails"],[696,22,205,7],[696,43,215,28,"details"],[696,50,205,7],[697,0,215,37,"id"],[697,14,215,37,"id"],[697,16,215,39],[697,18,215,37,"id"],[698,0,205,7],[699,0,205,7],[699,47,216,11,"NativeModules"],[699,74,216,25,"ExponentCalendar"],[699,90,216,11],[699,91,216,42,"saveReminderAsync"],[699,108,216,11],[699,109,216,60,"newDetails"],[699,119,216,11],[699,120,205,7],[701,0,205,7],[702,0,205,7],[703,0,205,7],[704,0,205,7],[705,0,205,7],[706,0,205,7],[707,0,205,7],[709,0,218,7],[709,11,218,22,"deleteReminderAsync"],[709,30,218,7],[709,31,218,42,"id"],[709,33,218,7],[710,0,218,7],[711,0,218,7],[712,0,218,7],[713,0,218,7],[714,0,218,7],[714,18,219,8,"Platform"],[714,40,219,17,"OS"],[714,42,219,8],[714,47,219,24],[714,56,218,7],[715,0,218,7],[716,0,218,7],[717,0,218,7],[719,0,218,7],[719,18,220,14],[719,22,220,18,"Error"],[719,27,220,14],[719,28,220,24],[719,77,220,14],[719,78,218,7],[721,0,218,7],[722,0,218,7],[722,16,222,9,"id"],[722,18,218,7],[723,0,218,7],[724,0,218,7],[725,0,218,7],[727,0,218,7],[727,18,223,14],[727,22,223,18,"Error"],[727,27,223,14],[727,28,223,24],[727,107,223,14],[727,108,218,7],[729,0,218,7],[730,0,218,7],[730,47,225,11,"NativeModules"],[730,74,225,25,"ExponentCalendar"],[730,90,225,11],[730,91,225,42,"deleteReminderAsync"],[730,110,225,11],[730,111,225,62,"id"],[730,113,225,11],[730,114,218,7],[732,0,218,7],[733,0,218,7],[734,0,218,7],[735,0,218,7],[736,0,218,7],[737,0,218,7],[738,0,218,7],[740,0,227,7],[740,11,227,22,"getSourcesAsync"],[740,26,227,7],[741,0,227,7],[742,0,227,7],[743,0,227,7],[744,0,227,7],[745,0,227,7],[745,18,228,8,"Platform"],[745,40,228,17,"OS"],[745,42,228,8],[745,47,228,24],[745,56,227,7],[746,0,227,7],[747,0,227,7],[748,0,227,7],[750,0,227,7],[750,18,229,14],[750,22,229,18,"Error"],[750,27,229,14],[750,28,229,24],[750,73,229,14],[750,74,227,7],[752,0,227,7],[753,0,227,7],[753,47,231,11,"NativeModules"],[753,74,231,25,"ExponentCalendar"],[753,90,231,11],[753,91,231,42,"getSourcesAsync"],[753,106,231,11],[753,108,227,7],[755,0,227,7],[756,0,227,7],[757,0,227,7],[758,0,227,7],[759,0,227,7],[760,0,227,7],[761,0,227,7],[763,0,233,7],[763,11,233,22,"getSourceAsync"],[763,25,233,7],[763,26,233,37,"id"],[763,28,233,7],[764,0,233,7],[765,0,233,7],[766,0,233,7],[767,0,233,7],[768,0,233,7],[768,18,234,8,"Platform"],[768,40,234,17,"OS"],[768,42,234,8],[768,47,234,24],[768,56,233,7],[769,0,233,7],[770,0,233,7],[771,0,233,7],[773,0,233,7],[773,18,235,14],[773,22,235,18,"Error"],[773,27,235,14],[773,28,235,24],[773,72,235,14],[773,73,233,7],[775,0,233,7],[776,0,233,7],[776,16,237,9,"id"],[776,18,233,7],[777,0,233,7],[778,0,233,7],[779,0,233,7],[781,0,233,7],[781,18,238,14],[781,22,238,18,"Error"],[781,27,238,14],[781,28,238,24],[781,100,238,14],[781,101,233,7],[783,0,233,7],[784,0,233,7],[784,47,240,11,"NativeModules"],[784,74,240,25,"ExponentCalendar"],[784,90,240,11],[784,91,240,42,"getSourceByIdAsync"],[784,109,240,11],[784,110,240,61,"id"],[784,112,240,11],[784,113,233,7],[786,0,233,7],[787,0,233,7],[788,0,233,7],[789,0,233,7],[790,0,233,7],[791,0,233,7],[792,0,233,7],[794,0,242,7],[794,11,242,16,"openEventInCalendar"],[794,30,242,7],[794,31,242,36,"id"],[794,33,242,7],[794,35,242,40],[795,0,243,4],[795,8,243,8,"Platform"],[795,30,243,17,"OS"],[795,32,243,8],[795,37,243,24],[795,42,243,4],[795,44,243,31],[796,0,244,8,"console"],[796,6,244,8,"console"],[796,13,244,15],[796,14,244,16,"warn"],[796,18,244,8],[796,19,244,21],[796,64,244,8],[797,0,245,8],[798,0,246,5],[800,0,247,4],[800,8,247,8],[800,9,247,9,"id"],[800,11,247,4],[800,13,247,13],[801,0,248,8],[801,12,248,14],[801,16,248,18,"Error"],[801,21,248,14],[801,22,248,24],[801,98,248,14],[801,99,248,8],[802,0,249,5],[804,0,250,4],[804,11,250,11,"NativeModules"],[804,38,250,25,"ExponentCalendar"],[804,54,250,11],[804,55,250,42,"openEventInCalendar"],[804,74,250,11],[804,75,250,62,"parseInt"],[804,83,250,70],[804,84,250,71,"id"],[804,86,250,70],[804,88,250,75],[804,90,250,70],[804,91,250,11],[804,92,250,4],[805,0,251,1],[807,0,252,7],[807,6,252,13,"EntityTypes"],[807,17,252,24],[807,20,252,27],[808,0,253,4,"EVENT"],[808,4,253,4,"EVENT"],[808,9,253,9],[808,11,253,11],[808,18,252,27],[809,0,254,4,"REMINDER"],[809,4,254,4,"REMINDER"],[809,12,254,12],[809,14,254,14],[810,0,252,27],[810,3,252,7],[812,0,256,7],[812,6,256,13,"Frequency"],[812,15,256,22],[812,18,256,25],[813,0,257,4,"DAILY"],[813,4,257,4,"DAILY"],[813,9,257,9],[813,11,257,11],[813,18,256,25],[814,0,258,4,"WEEKLY"],[814,4,258,4,"WEEKLY"],[814,10,258,10],[814,12,258,12],[814,20,256,25],[815,0,259,4,"MONTHLY"],[815,4,259,4,"MONTHLY"],[815,11,259,11],[815,13,259,13],[815,22,256,25],[816,0,260,4,"YEARLY"],[816,4,260,4,"YEARLY"],[816,10,260,10],[816,12,260,12],[817,0,256,25],[817,3,256,7],[819,0,262,7],[819,6,262,13,"Availability"],[819,18,262,25],[819,21,262,28],[820,0,263,4,"NOT_SUPPORTED"],[820,4,263,4,"NOT_SUPPORTED"],[820,17,263,17],[820,19,263,19],[820,33,262,28],[821,0,264,4,"BUSY"],[821,4,264,4,"BUSY"],[821,8,264,8],[821,10,264,10],[821,16,262,28],[822,0,265,4,"FREE"],[822,4,265,4,"FREE"],[822,8,265,8],[822,10,265,10],[822,16,262,28],[823,0,266,4,"TENTATIVE"],[823,4,266,4,"TENTATIVE"],[823,13,266,13],[823,15,266,15],[823,26,262,28],[824,0,267,4,"UNAVAILABLE"],[824,4,267,4,"UNAVAILABLE"],[824,15,267,15],[824,17,267,17],[825,0,262,28],[825,3,262,7],[827,0,269,7],[827,6,269,13,"CalendarType"],[827,18,269,25],[827,21,269,28],[828,0,270,4,"LOCAL"],[828,4,270,4,"LOCAL"],[828,9,270,9],[828,11,270,11],[828,18,269,28],[829,0,271,4,"CALDAV"],[829,4,271,4,"CALDAV"],[829,10,271,10],[829,12,271,12],[829,20,269,28],[830,0,272,4,"EXCHANGE"],[830,4,272,4,"EXCHANGE"],[830,12,272,12],[830,14,272,14],[830,24,269,28],[831,0,273,4,"SUBSCRIBED"],[831,4,273,4,"SUBSCRIBED"],[831,14,273,14],[831,16,273,16],[831,28,269,28],[832,0,274,4,"BIRTHDAYS"],[832,4,274,4,"BIRTHDAYS"],[832,13,274,13],[832,15,274,15],[833,0,269,28],[833,3,269,7],[835,0,276,7],[835,6,276,13,"EventStatus"],[835,17,276,24],[835,20,276,27],[836,0,277,4,"NONE"],[836,4,277,4,"NONE"],[836,8,277,8],[836,10,277,10],[836,16,276,27],[837,0,278,4,"CONFIRMED"],[837,4,278,4,"CONFIRMED"],[837,13,278,13],[837,15,278,15],[837,26,276,27],[838,0,279,4,"TENTATIVE"],[838,4,279,4,"TENTATIVE"],[838,13,279,13],[838,15,279,15],[838,26,276,27],[839,0,280,4,"CANCELED"],[839,4,280,4,"CANCELED"],[839,12,280,12],[839,14,280,14],[840,0,276,27],[840,3,276,7],[842,0,282,7],[842,6,282,13,"SourceType"],[842,16,282,23],[842,19,282,26],[843,0,283,4,"LOCAL"],[843,4,283,4,"LOCAL"],[843,9,283,9],[843,11,283,11],[843,18,282,26],[844,0,284,4,"EXCHANGE"],[844,4,284,4,"EXCHANGE"],[844,12,284,12],[844,14,284,14],[844,24,282,26],[845,0,285,4,"CALDAV"],[845,4,285,4,"CALDAV"],[845,10,285,10],[845,12,285,12],[845,20,282,26],[846,0,286,4,"MOBILEME"],[846,4,286,4,"MOBILEME"],[846,12,286,12],[846,14,286,14],[846,24,282,26],[847,0,287,4,"SUBSCRIBED"],[847,4,287,4,"SUBSCRIBED"],[847,14,287,14],[847,16,287,16],[847,28,282,26],[848,0,288,4,"BIRTHDAYS"],[848,4,288,4,"BIRTHDAYS"],[848,13,288,13],[848,15,288,15],[849,0,282,26],[849,3,282,7],[851,0,290,7],[851,6,290,13,"AttendeeRole"],[851,18,290,25],[851,21,290,28],[852,0,291,4,"UNKNOWN"],[852,4,291,4,"UNKNOWN"],[852,11,291,11],[852,13,291,13],[852,22,290,28],[853,0,292,4,"REQUIRED"],[853,4,292,4,"REQUIRED"],[853,12,292,12],[853,14,292,14],[853,24,290,28],[854,0,293,4,"OPTIONAL"],[854,4,293,4,"OPTIONAL"],[854,12,293,12],[854,14,293,14],[854,24,290,28],[855,0,294,4,"CHAIR"],[855,4,294,4,"CHAIR"],[855,9,294,9],[855,11,294,11],[855,18,290,28],[856,0,295,4,"NON_PARTICIPANT"],[856,4,295,4,"NON_PARTICIPANT"],[856,19,295,19],[856,21,295,21],[856,37,290,28],[857,0,296,4,"ATTENDEE"],[857,4,296,4,"ATTENDEE"],[857,12,296,12],[857,14,296,14],[857,24,290,28],[858,0,297,4,"ORGANIZER"],[858,4,297,4,"ORGANIZER"],[858,13,297,13],[858,15,297,15],[858,26,290,28],[859,0,298,4,"PERFORMER"],[859,4,298,4,"PERFORMER"],[859,13,298,13],[859,15,298,15],[859,26,290,28],[860,0,299,4,"SPEAKER"],[860,4,299,4,"SPEAKER"],[860,11,299,11],[860,13,299,13],[860,22,290,28],[861,0,300,4,"NONE"],[861,4,300,4,"NONE"],[861,8,300,8],[861,10,300,10],[862,0,290,28],[862,3,290,7],[864,0,302,7],[864,6,302,13,"AttendeeStatus"],[864,20,302,27],[864,23,302,30],[865,0,303,4,"UNKNOWN"],[865,4,303,4,"UNKNOWN"],[865,11,303,11],[865,13,303,13],[865,22,302,30],[866,0,304,4,"PENDING"],[866,4,304,4,"PENDING"],[866,11,304,11],[866,13,304,13],[866,22,302,30],[867,0,305,4,"ACCEPTED"],[867,4,305,4,"ACCEPTED"],[867,12,305,12],[867,14,305,14],[867,24,302,30],[868,0,306,4,"DECLINED"],[868,4,306,4,"DECLINED"],[868,12,306,12],[868,14,306,14],[868,24,302,30],[869,0,307,4,"TENTATIVE"],[869,4,307,4,"TENTATIVE"],[869,13,307,13],[869,15,307,15],[869,26,302,30],[870,0,308,4,"DELEGATED"],[870,4,308,4,"DELEGATED"],[870,13,308,13],[870,15,308,15],[870,26,302,30],[871,0,309,4,"COMPLETED"],[871,4,309,4,"COMPLETED"],[871,13,309,13],[871,15,309,15],[871,26,302,30],[872,0,310,4,"IN_PROCESS"],[872,4,310,4,"IN_PROCESS"],[872,14,310,14],[872,16,310,16],[872,27,302,30],[873,0,311,4,"INVITED"],[873,4,311,4,"INVITED"],[873,11,311,11],[873,13,311,13],[873,22,302,30],[874,0,312,4,"NONE"],[874,4,312,4,"NONE"],[874,8,312,8],[874,10,312,10],[875,0,302,30],[875,3,302,7],[877,0,314,7],[877,6,314,13,"AttendeeType"],[877,18,314,25],[877,21,314,28],[878,0,315,4,"UNKNOWN"],[878,4,315,4,"UNKNOWN"],[878,11,315,11],[878,13,315,13],[878,22,314,28],[879,0,316,4,"PERSON"],[879,4,316,4,"PERSON"],[879,10,316,10],[879,12,316,12],[879,20,314,28],[880,0,317,4,"ROOM"],[880,4,317,4,"ROOM"],[880,8,317,8],[880,10,317,10],[880,16,314,28],[881,0,318,4,"GROUP"],[881,4,318,4,"GROUP"],[881,9,318,9],[881,11,318,11],[881,18,314,28],[882,0,319,4,"RESOURCE"],[882,4,319,4,"RESOURCE"],[882,12,319,12],[882,14,319,14],[882,24,314,28],[883,0,320,4,"OPTIONAL"],[883,4,320,4,"OPTIONAL"],[883,12,320,12],[883,14,320,14],[883,24,314,28],[884,0,321,4,"REQUIRED"],[884,4,321,4,"REQUIRED"],[884,12,321,12],[884,14,321,14],[884,24,314,28],[885,0,322,4,"NONE"],[885,4,322,4,"NONE"],[885,8,322,8],[885,10,322,10],[886,0,314,28],[886,3,314,7],[888,0,324,7],[888,6,324,13,"AlarmMethod"],[888,17,324,24],[888,20,324,27],[889,0,325,4,"ALARM"],[889,4,325,4,"ALARM"],[889,9,325,9],[889,11,325,11],[889,18,324,27],[890,0,326,4,"ALERT"],[890,4,326,4,"ALERT"],[890,9,326,9],[890,11,326,11],[890,18,324,27],[891,0,327,4,"EMAIL"],[891,4,327,4,"EMAIL"],[891,9,327,9],[891,11,327,11],[891,18,324,27],[892,0,328,4,"SMS"],[892,4,328,4,"SMS"],[892,7,328,7],[892,9,328,9],[892,14,324,27],[893,0,329,4,"DEFAULT"],[893,4,329,4,"DEFAULT"],[893,11,329,11],[893,13,329,13],[894,0,324,27],[894,3,324,7],[896,0,331,7],[896,6,331,13,"EventAccessLevel"],[896,22,331,29],[896,25,331,32],[897,0,332,4,"CONFIDENTIAL"],[897,4,332,4,"CONFIDENTIAL"],[897,16,332,16],[897,18,332,18],[897,32,331,32],[898,0,333,4,"PRIVATE"],[898,4,333,4,"PRIVATE"],[898,11,333,11],[898,13,333,13],[898,22,331,32],[899,0,334,4,"PUBLIC"],[899,4,334,4,"PUBLIC"],[899,10,334,10],[899,12,334,12],[899,20,331,32],[900,0,335,4,"DEFAULT"],[900,4,335,4,"DEFAULT"],[900,11,335,11],[900,13,335,13],[901,0,331,32],[901,3,331,7],[903,0,337,7],[903,6,337,13,"CalendarAccessLevel"],[903,25,337,32],[903,28,337,35],[904,0,338,4,"CONTRIBUTOR"],[904,4,338,4,"CONTRIBUTOR"],[904,15,338,15],[904,17,338,17],[904,30,337,35],[905,0,339,4,"EDITOR"],[905,4,339,4,"EDITOR"],[905,10,339,10],[905,12,339,12],[905,20,337,35],[906,0,340,4,"FREEBUSY"],[906,4,340,4,"FREEBUSY"],[906,12,340,12],[906,14,340,14],[906,24,337,35],[907,0,341,4,"OVERRIDE"],[907,4,341,4,"OVERRIDE"],[907,12,341,12],[907,14,341,14],[907,24,337,35],[908,0,342,4,"OWNER"],[908,4,342,4,"OWNER"],[908,9,342,9],[908,11,342,11],[908,18,337,35],[909,0,343,4,"READ"],[909,4,343,4,"READ"],[909,8,343,8],[909,10,343,10],[909,16,337,35],[910,0,344,4,"RESPOND"],[910,4,344,4,"RESPOND"],[910,11,344,11],[910,13,344,13],[910,22,337,35],[911,0,345,4,"ROOT"],[911,4,345,4,"ROOT"],[911,8,345,8],[911,10,345,10],[911,16,337,35],[912,0,346,4,"NONE"],[912,4,346,4,"NONE"],[912,8,346,8],[912,10,346,10],[913,0,337,35],[913,3,337,7],[915,0,348,7],[915,6,348,13,"ReminderStatus"],[915,20,348,27],[915,23,348,30],[916,0,349,4,"COMPLETED"],[916,4,349,4,"COMPLETED"],[916,13,349,13],[916,15,349,15],[916,26,348,30],[917,0,350,4,"INCOMPLETE"],[917,4,350,4,"INCOMPLETE"],[917,14,350,14],[917,16,350,16],[918,0,348,30],[918,3,348,7],[920,0,352,7],[920,6,352,13,"DEFAULT"],[920,13,352,20],[920,16,352,23],[920,25,352,7]]},"type":"js/module"}]}