{"dependencies":[{"name":"./AnimatedNode","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _AnimatedNode2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"./AnimatedNode\"));\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  var AnimatedConcat = function (_AnimatedNode) {\n    _inherits(AnimatedConcat, _AnimatedNode);\n\n    function AnimatedConcat(input) {\n      _classCallCheck(this, AnimatedConcat);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(AnimatedConcat).call(this, {\n        type: 'concat',\n        input: input.map(function (n) {\n          return n.__nodeID;\n        })\n      }, input));\n    }\n\n    return AnimatedConcat;\n  }(_AnimatedNode2.default);\n\n  exports.default = AnimatedConcat;\n});","map":[[7,0,1,0],[23,6,3,21,"AnimatedConcat"],[23,20],[26,0,4,2],[26,28,4,14,"input"],[26,33,4,2],[26,35,4,21],[27,0,4,21],[29,0,4,21],[29,89,5,10],[30,0,5,12,"type"],[30,8,5,12,"type"],[30,12,5,16],[30,14,5,18],[30,22,5,10],[31,0,5,28,"input"],[31,8,5,28,"input"],[31,13,5,33],[31,15,5,35,"input"],[31,20,5,40],[31,21,5,41,"map"],[31,24,5,35],[31,25,5,45],[31,35,5,45,"n"],[31,36,5,46],[32,0,5,46],[32,17,5,50,"n"],[32,18,5,51],[32,19,5,52,"__nodeID"],[32,27,5,46],[33,0,5,46],[33,9,5,35],[34,0,5,10],[34,7,4,21],[34,9,5,65,"input"],[34,14,4,21],[35,0,6,3],[38,4,3,44,"AnimatedNode"],[38,26]]},"type":"js/module"}]}