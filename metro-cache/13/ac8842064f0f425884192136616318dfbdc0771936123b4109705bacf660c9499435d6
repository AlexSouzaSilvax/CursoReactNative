{"dependencies":[{"name":"../core/AnimatedValue","data":{"isAsync":false}},{"name":"./Animation","data":{"isAsync":false}},{"name":"../SpringConfig","data":{"isAsync":false}},{"name":"./spring","data":{"isAsync":false}},{"name":"../base","data":{"isAsync":false}},{"name":"../core/AnimatedClock","data":{"isAsync":false}},{"name":"fbjs/lib/invariant","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _AnimatedValue = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"../core/AnimatedValue\"));\n\n  var _Animation2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./Animation\"));\n\n  var _SpringConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"../SpringConfig\"));\n\n  var _spring = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./spring\"));\n\n  var _base = _$$_REQUIRE(_dependencyMap[4], \"../base\");\n\n  var _AnimatedClock = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"../core/AnimatedClock\"));\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"fbjs/lib/invariant\"));\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function withDefault(value, defaultValue) {\n    if (value === undefined || value === null) {\n      return defaultValue;\n    }\n\n    return value;\n  }\n\n  var SpringAnimation = function (_Animation) {\n    _inherits(SpringAnimation, _Animation);\n\n    function SpringAnimation(config) {\n      var _this;\n\n      _classCallCheck(this, SpringAnimation);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(SpringAnimation).call(this));\n      _this._overshootClamping = withDefault(config.overshootClamping, false);\n      _this._restDisplacementThreshold = withDefault(config.restDisplacementThreshold, 0.001);\n      _this._restSpeedThreshold = withDefault(config.restSpeedThreshold, 0.001);\n      _this._initialVelocity = withDefault(config.velocity, 0);\n      _this._lastVelocity = withDefault(config.velocity, 0);\n      _this._toValue = config.toValue;\n      _this._delay = withDefault(config.delay, 0);\n\n      if (config.stiffness !== undefined || config.damping !== undefined || config.mass !== undefined) {\n        (0, _invariant.default)(config.bounciness === undefined && config.speed === undefined && config.tension === undefined && config.friction === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n        _this._stiffness = withDefault(config.stiffness, 100);\n        _this._damping = withDefault(config.damping, 10);\n        _this._mass = withDefault(config.mass, 1);\n      } else if (config.bounciness !== undefined || config.speed !== undefined) {\n        (0, _invariant.default)(config.tension === undefined && config.friction === undefined && config.stiffness === undefined && config.damping === undefined && config.mass === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n\n        var springConfig = _SpringConfig.default.fromBouncinessAndSpeed(withDefault(config.bounciness, 8), withDefault(config.speed, 12));\n\n        _this._stiffness = springConfig.stiffness;\n        _this._damping = springConfig.damping;\n        _this._mass = 1;\n      } else {\n        var _springConfig = _SpringConfig.default.fromOrigamiTensionAndFriction(withDefault(config.tension, 40), withDefault(config.friction, 7));\n\n        _this._stiffness = _springConfig.stiffness;\n        _this._damping = _springConfig.damping;\n        _this._mass = 1;\n      }\n\n      (0, _invariant.default)(_this._stiffness > 0, 'Stiffness value must be greater than 0');\n      (0, _invariant.default)(_this._damping > 0, 'Damping value must be greater than 0');\n      (0, _invariant.default)(_this._mass > 0, 'Mass value must be greater than 0');\n      return _this;\n    }\n\n    _createClass(SpringAnimation, [{\n      key: \"start\",\n      value: function start(value) {\n        this._clock = new _AnimatedClock.default();\n        var state = {\n          finished: new _AnimatedValue.default(0),\n          velocity: new _AnimatedValue.default(this._initialVelocity),\n          position: value,\n          time: new _AnimatedValue.default(0)\n        };\n        var config = {\n          damping: this._damping,\n          mass: this._mass,\n          stiffness: this._stiffness,\n          toValue: this._toValue,\n          overshootClamping: this._overshootClamping,\n          restSpeedThreshold: this._restSpeedThreshold,\n          restDisplacementThreshold: this._restDisplacementThreshold\n        };\n        return (0, _base.block)([(0, _base.cond)((0, _base.clockRunning)(this._clock), 0, [(0, _base.startClock)(this._clock)]), (0, _spring.default)(this._clock, state, config), (0, _base.cond)(state.finished, (0, _base.stopClock)(this._clock))]);\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {}\n    }], [{\n      key: \"getDefaultState\",\n      value: function getDefaultState() {\n        return {\n          position: new _AnimatedValue.default(0),\n          finished: new _AnimatedValue.default(0),\n          velocity: new _AnimatedValue.default(0),\n          time: new _AnimatedValue.default(0)\n        };\n      }\n    }]);\n\n    return SpringAnimation;\n  }(_Animation2.default);\n\n  exports.default = SpringAnimation;\n});","map":[[7,0,1,0],[9,0,2,0],[11,0,3,0],[13,0,4,0],[15,0,6,0],[17,0,7,0],[19,0,9,0],[39,0,11,0],[39,11,11,9,"withDefault"],[39,22,11,0],[39,23,11,21,"value"],[39,28,11,0],[39,30,11,28,"defaultValue"],[39,42,11,0],[39,44,11,42],[40,0,12,2],[40,8,12,6,"value"],[40,13,12,11],[40,18,12,16,"undefined"],[40,27,12,6],[40,31,12,29,"value"],[40,36,12,34],[40,41,12,39],[40,45,12,2],[40,47,12,45],[41,0,13,4],[41,13,13,11,"defaultValue"],[41,25,13,4],[42,0,14,3],[44,0,15,2],[44,11,15,9,"value"],[44,16,15,2],[45,0,16,1],[47,6,18,21,"SpringAnimation"],[47,21],[50,0,19,2],[50,29,19,14,"config"],[50,35,19,2],[50,37,19,22],[51,0,19,22],[53,0,19,22],[55,0,20,4],[56,0,22,4],[56,12,22,9,"_overshootClamping"],[56,30,22,4],[56,33,22,30,"withDefault"],[56,44,22,41],[56,45,22,42,"config"],[56,51,22,48],[56,52,22,49,"overshootClamping"],[56,69,22,41],[56,71,22,68],[56,76,22,41],[56,77,22,4],[57,0,23,4],[57,12,23,9,"_restDisplacementThreshold"],[57,38,23,4],[57,41,23,38,"withDefault"],[57,52,23,49],[57,53,24,6,"config"],[57,59,24,12],[57,60,24,13,"restDisplacementThreshold"],[57,85,23,49],[57,87,25,6],[57,92,23,49],[57,93,23,4],[58,0,27,4],[58,12,27,9,"_restSpeedThreshold"],[58,31,27,4],[58,34,27,31,"withDefault"],[58,45,27,42],[58,46,27,43,"config"],[58,52,27,49],[58,53,27,50,"restSpeedThreshold"],[58,71,27,42],[58,73,27,70],[58,78,27,42],[58,79,27,4],[59,0,28,4],[59,12,28,9,"_initialVelocity"],[59,28,28,4],[59,31,28,28,"withDefault"],[59,42,28,39],[59,43,28,40,"config"],[59,49,28,46],[59,50,28,47,"velocity"],[59,58,28,39],[59,60,28,57],[59,61,28,39],[59,62,28,4],[60,0,29,4],[60,12,29,9,"_lastVelocity"],[60,25,29,4],[60,28,29,25,"withDefault"],[60,39,29,36],[60,40,29,37,"config"],[60,46,29,43],[60,47,29,44,"velocity"],[60,55,29,36],[60,57,29,54],[60,58,29,36],[60,59,29,4],[61,0,30,4],[61,12,30,9,"_toValue"],[61,20,30,4],[61,23,30,20,"config"],[61,29,30,26],[61,30,30,27,"toValue"],[61,37,30,4],[62,0,31,4],[62,12,31,9,"_delay"],[62,18,31,4],[62,21,31,18,"withDefault"],[62,32,31,29],[62,33,31,30,"config"],[62,39,31,36],[62,40,31,37,"delay"],[62,45,31,29],[62,47,31,44],[62,48,31,29],[62,49,31,4],[64,0,33,4],[64,10,34,6,"config"],[64,16,34,12],[64,17,34,13,"stiffness"],[64,26,34,6],[64,31,34,27,"undefined"],[64,40,34,6],[64,44,35,6,"config"],[64,50,35,12],[64,51,35,13,"damping"],[64,58,35,6],[64,63,35,25,"undefined"],[64,72,34,6],[64,76,36,6,"config"],[64,82,36,12],[64,83,36,13,"mass"],[64,87,36,6],[64,92,36,22,"undefined"],[64,101,33,4],[64,103,37,6],[65,0,38,6],[65,32,39,8,"config"],[65,38,39,14],[65,39,39,15,"bounciness"],[65,49,39,8],[65,54,39,30,"undefined"],[65,63,39,8],[65,67,40,10,"config"],[65,73,40,16],[65,74,40,17,"speed"],[65,79,40,10],[65,84,40,27,"undefined"],[65,93,39,8],[65,97,41,10,"config"],[65,103,41,16],[65,104,41,17,"tension"],[65,111,41,10],[65,116,41,29,"undefined"],[65,125,39,8],[65,129,42,10,"config"],[65,135,42,16],[65,136,42,17,"friction"],[65,144,42,10],[65,149,42,30,"undefined"],[65,158,38,6],[65,160,43,8],[65,268,38,6],[66,0,45,6],[66,14,45,11,"_stiffness"],[66,24,45,6],[66,27,45,24,"withDefault"],[66,38,45,35],[66,39,45,36,"config"],[66,45,45,42],[66,46,45,43,"stiffness"],[66,55,45,35],[66,57,45,54],[66,60,45,35],[66,61,45,6],[67,0,46,6],[67,14,46,11,"_damping"],[67,22,46,6],[67,25,46,22,"withDefault"],[67,36,46,33],[67,37,46,34,"config"],[67,43,46,40],[67,44,46,41,"damping"],[67,51,46,33],[67,53,46,50],[67,55,46,33],[67,56,46,6],[68,0,47,6],[68,14,47,11,"_mass"],[68,19,47,6],[68,22,47,19,"withDefault"],[68,33,47,30],[68,34,47,31,"config"],[68,40,47,37],[68,41,47,38,"mass"],[68,45,47,30],[68,47,47,44],[68,48,47,30],[68,49,47,6],[69,0,48,5],[69,7,33,4],[69,13,48,11],[69,17,48,15,"config"],[69,23,48,21],[69,24,48,22,"bounciness"],[69,34,48,15],[69,39,48,37,"undefined"],[69,48,48,15],[69,52,48,50,"config"],[69,58,48,56],[69,59,48,57,"speed"],[69,64,48,50],[69,69,48,67,"undefined"],[69,78,48,11],[69,80,48,78],[70,0,51,6],[70,32,52,8,"config"],[70,38,52,14],[70,39,52,15,"tension"],[70,46,52,8],[70,51,52,27,"undefined"],[70,60,52,8],[70,64,53,10,"config"],[70,70,53,16],[70,71,53,17,"friction"],[70,79,53,10],[70,84,53,30,"undefined"],[70,93,52,8],[70,97,54,10,"config"],[70,103,54,16],[70,104,54,17,"stiffness"],[70,113,54,10],[70,118,54,31,"undefined"],[70,127,52,8],[70,131,55,10,"config"],[70,137,55,16],[70,138,55,17,"damping"],[70,145,55,10],[70,150,55,29,"undefined"],[70,159,52,8],[70,163,56,10,"config"],[70,169,56,16],[70,170,56,17,"mass"],[70,174,56,10],[70,179,56,26,"undefined"],[70,188,51,6],[70,190,57,8],[70,298,51,6],[72,0,59,6],[72,12,59,12,"springConfig"],[72,24,59,24],[72,27,59,27,"SpringConfig"],[72,49,59,40,"fromBouncinessAndSpeed"],[72,71,59,27],[72,72,60,8,"withDefault"],[72,83,60,19],[72,84,60,20,"config"],[72,90,60,26],[72,91,60,27,"bounciness"],[72,101,60,19],[72,103,60,39],[72,104,60,19],[72,105,59,27],[72,107,61,8,"withDefault"],[72,118,61,19],[72,119,61,20,"config"],[72,125,61,26],[72,126,61,27,"speed"],[72,131,61,19],[72,133,61,34],[72,135,61,19],[72,136,59,27],[72,137,59,6],[74,0,63,6],[74,14,63,11,"_stiffness"],[74,24,63,6],[74,27,63,24,"springConfig"],[74,39,63,36],[74,40,63,37,"stiffness"],[74,49,63,6],[75,0,64,6],[75,14,64,11,"_damping"],[75,22,64,6],[75,25,64,22,"springConfig"],[75,37,64,34],[75,38,64,35,"damping"],[75,45,64,6],[76,0,65,6],[76,14,65,11,"_mass"],[76,19,65,6],[76,22,65,19],[76,23,65,6],[77,0,66,5],[77,7,48,11],[77,13,66,11],[78,0,69,6],[78,12,69,12,"springConfig"],[78,25,69,24],[78,28,69,27,"SpringConfig"],[78,50,69,40,"fromOrigamiTensionAndFriction"],[78,79,69,27],[78,80,70,8,"withDefault"],[78,91,70,19],[78,92,70,20,"config"],[78,98,70,26],[78,99,70,27,"tension"],[78,106,70,19],[78,108,70,36],[78,110,70,19],[78,111,69,27],[78,113,71,8,"withDefault"],[78,124,71,19],[78,125,71,20,"config"],[78,131,71,26],[78,132,71,27,"friction"],[78,140,71,19],[78,142,71,37],[78,143,71,19],[78,144,69,27],[78,145,69,6],[80,0,73,6],[80,14,73,11,"_stiffness"],[80,24,73,6],[80,27,73,24,"springConfig"],[80,40,73,36],[80,41,73,37,"stiffness"],[80,50,73,6],[81,0,74,6],[81,14,74,11,"_damping"],[81,22,74,6],[81,25,74,22,"springConfig"],[81,38,74,34],[81,39,74,35,"damping"],[81,46,74,6],[82,0,75,6],[82,14,75,11,"_mass"],[82,19,75,6],[82,22,75,19],[82,23,75,6],[83,0,76,5],[85,0,78,4],[85,30,78,14],[85,36,78,19,"_stiffness"],[85,46,78,14],[85,49,78,32],[85,50,78,4],[85,52,78,35],[85,92,78,4],[86,0,79,4],[86,30,79,14],[86,36,79,19,"_damping"],[86,44,79,14],[86,47,79,30],[86,48,79,4],[86,50,79,33],[86,88,79,4],[87,0,80,4],[87,30,80,14],[87,36,80,19,"_mass"],[87,41,80,14],[87,44,80,27],[87,45,80,4],[87,47,80,30],[87,82,80,4],[88,0,19,22],[89,0,81,3],[93,28,83,8,"value"],[93,33],[93,35,83,15],[94,0,84,4],[94,13,84,9,"_clock"],[94,19,84,4],[94,22,84,18],[94,26,84,22,"Clock"],[94,48,84,18],[94,50,84,4],[95,0,85,4],[95,12,85,10,"state"],[95,17,85,15],[95,20,85,18],[96,0,86,6,"finished"],[96,10,86,6,"finished"],[96,18,86,14],[96,20,86,16],[96,24,86,20,"AnimatedValue"],[96,46,86,16],[96,47,86,34],[96,48,86,16],[96,49,85,18],[97,0,87,6,"velocity"],[97,10,87,6,"velocity"],[97,18,87,14],[97,20,87,16],[97,24,87,20,"AnimatedValue"],[97,46,87,16],[97,47,87,34],[97,52,87,39,"_initialVelocity"],[97,68,87,16],[97,69,85,18],[98,0,88,6,"position"],[98,10,88,6,"position"],[98,18,88,14],[98,20,88,16,"value"],[98,25,85,18],[99,0,89,6,"time"],[99,10,89,6,"time"],[99,14,89,10],[99,16,89,12],[99,20,89,16,"AnimatedValue"],[99,42,89,12],[99,43,89,30],[99,44,89,12],[100,0,85,18],[100,9,85,4],[101,0,92,4],[101,12,92,10,"config"],[101,18,92,16],[101,21,92,19],[102,0,93,6,"damping"],[102,10,93,6,"damping"],[102,17,93,13],[102,19,93,15],[102,24,93,20,"_damping"],[102,32,92,19],[103,0,94,6,"mass"],[103,10,94,6,"mass"],[103,14,94,10],[103,16,94,12],[103,21,94,17,"_mass"],[103,26,92,19],[104,0,95,6,"stiffness"],[104,10,95,6,"stiffness"],[104,19,95,15],[104,21,95,17],[104,26,95,22,"_stiffness"],[104,36,92,19],[105,0,96,6,"toValue"],[105,10,96,6,"toValue"],[105,17,96,13],[105,19,96,15],[105,24,96,20,"_toValue"],[105,32,92,19],[106,0,97,6,"overshootClamping"],[106,10,97,6,"overshootClamping"],[106,27,97,23],[106,29,97,25],[106,34,97,30,"_overshootClamping"],[106,52,92,19],[107,0,98,6,"restSpeedThreshold"],[107,10,98,6,"restSpeedThreshold"],[107,28,98,24],[107,30,98,26],[107,35,98,31,"_restSpeedThreshold"],[107,54,92,19],[108,0,99,6,"restDisplacementThreshold"],[108,10,99,6,"restDisplacementThreshold"],[108,35,99,31],[108,37,99,33],[108,42,99,38,"_restDisplacementThreshold"],[109,0,92,19],[109,9,92,4],[110,0,102,4],[110,15,102,11],[110,32,102,17],[110,33,103,6],[110,49,103,11],[110,73,103,24],[110,78,103,29,"_clock"],[110,84,103,11],[110,85,103,6],[110,87,103,38],[110,88,103,6],[110,90,103,41],[110,91,103,42],[110,113,103,53],[110,118,103,58,"_clock"],[110,124,103,42],[110,125,103,41],[110,126,103,6],[110,127,102,17],[110,129,104,6],[110,150,104,13],[110,155,104,18,"_clock"],[110,161,104,6],[110,163,104,26,"state"],[110,168,104,6],[110,170,104,33,"config"],[110,176,104,6],[110,177,102,17],[110,179,105,6],[110,195,105,11,"state"],[110,200,105,16],[110,201,105,17,"finished"],[110,209,105,6],[110,211,105,27],[110,232,105,37],[110,237,105,42,"_clock"],[110,243,105,27],[110,244,105,6],[110,245,102,17],[110,246,102,11],[110,247,102,4],[111,0,107,3],[114,29,109,9],[114,30,111,3],[117,40,112,27],[118,0,113,4],[118,15,113,11],[119,0,114,6,"position"],[119,10,114,6,"position"],[119,18,114,14],[119,20,114,16],[119,24,114,20,"AnimatedValue"],[119,46,114,16],[119,47,114,34],[119,48,114,16],[119,49,113,11],[120,0,115,6,"finished"],[120,10,115,6,"finished"],[120,18,115,14],[120,20,115,16],[120,24,115,20,"AnimatedValue"],[120,46,115,16],[120,47,115,34],[120,48,115,16],[120,49,113,11],[121,0,116,6,"velocity"],[121,10,116,6,"velocity"],[121,18,116,14],[121,20,116,16],[121,24,116,20,"AnimatedValue"],[121,46,116,16],[121,47,116,34],[121,48,116,16],[121,49,113,11],[122,0,117,6,"time"],[122,10,117,6,"time"],[122,14,117,10],[122,16,117,12],[122,20,117,16,"AnimatedValue"],[122,42,117,12],[122,43,117,30],[122,44,117,12],[123,0,113,11],[123,9,113,4],[124,0,119,3],[128,4,18,45,"Animation"],[128,23]]},"type":"js/module"}]}