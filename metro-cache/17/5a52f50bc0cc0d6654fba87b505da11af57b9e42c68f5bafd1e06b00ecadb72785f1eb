{"dependencies":[{"name":"react-native","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.deleteItemAsync = deleteItemAsync;\n  exports.getItemAsync = getItemAsync;\n  exports.setItemAsync = setItemAsync;\n  exports.WHEN_UNLOCKED_THIS_DEVICE_ONLY = exports.WHEN_UNLOCKED = exports.ALWAYS_THIS_DEVICE_ONLY = exports.WHEN_PASSCODE_SET_THIS_DEVICE_ONLY = exports.ALWAYS = exports.AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY = exports.AFTER_FIRST_UNLOCK = void 0;\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[0], \"react-native\");\n\n  var ExponentSecureStore = _reactNative.NativeModules.ExponentSecureStore;\n  var AFTER_FIRST_UNLOCK = ExponentSecureStore.AFTER_FIRST_UNLOCK;\n  exports.AFTER_FIRST_UNLOCK = AFTER_FIRST_UNLOCK;\n  var AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY = ExponentSecureStore.AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY;\n  exports.AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY = AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY;\n  var ALWAYS = ExponentSecureStore.ALWAYS;\n  exports.ALWAYS = ALWAYS;\n  var WHEN_PASSCODE_SET_THIS_DEVICE_ONLY = ExponentSecureStore.WHEN_PASSCODE_SET_THIS_DEVICE_ONLY;\n  exports.WHEN_PASSCODE_SET_THIS_DEVICE_ONLY = WHEN_PASSCODE_SET_THIS_DEVICE_ONLY;\n  var ALWAYS_THIS_DEVICE_ONLY = ExponentSecureStore.ALWAYS_THIS_DEVICE_ONLY;\n  exports.ALWAYS_THIS_DEVICE_ONLY = ALWAYS_THIS_DEVICE_ONLY;\n  var WHEN_UNLOCKED = ExponentSecureStore.WHEN_UNLOCKED;\n  exports.WHEN_UNLOCKED = WHEN_UNLOCKED;\n  var WHEN_UNLOCKED_THIS_DEVICE_ONLY = ExponentSecureStore.WHEN_UNLOCKED_THIS_DEVICE_ONLY;\n  exports.WHEN_UNLOCKED_THIS_DEVICE_ONLY = WHEN_UNLOCKED_THIS_DEVICE_ONLY;\n\n  function deleteItemAsync(key) {\n    var options,\n        _args = arguments;\n    return regeneratorRuntime.async(function deleteItemAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n\n            _ensureValidKey(key);\n\n            _context.next = 4;\n            return regeneratorRuntime.awrap(ExponentSecureStore.deleteValueWithKeyAsync(key, options));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function getItemAsync(key) {\n    var options,\n        _args2 = arguments;\n    return regeneratorRuntime.async(function getItemAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            options = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};\n\n            _ensureValidKey(key);\n\n            _context2.next = 4;\n            return regeneratorRuntime.awrap(ExponentSecureStore.getValueWithKeyAsync(key, options));\n\n          case 4:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function setItemAsync(key, value) {\n    var options,\n        _args3 = arguments;\n    return regeneratorRuntime.async(function setItemAsync$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            options = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : {};\n\n            _ensureValidKey(key);\n\n            if (_isValidValue(value)) {\n              _context3.next = 4;\n              break;\n            }\n\n            throw new Error(\"Invalid value provided to SecureStore. Values must be strings; consider JSON-encoding your values if they are serializable.\");\n\n          case 4:\n            _context3.next = 6;\n            return regeneratorRuntime.awrap(ExponentSecureStore.setValueWithKeyAsync(value, key, options));\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function _ensureValidKey(key) {\n    if (!_isValidKey(key)) {\n      throw new Error(\"Invalid key provided to SecureStore. Keys must not be empty and contain only alphanumeric characters, \\\".\\\", \\\"-\\\", and \\\"_\\\".\");\n    }\n  }\n\n  function _isValidKey(key) {\n    return typeof key === 'string' && /^[\\w.-]+$/.test(key);\n  }\n\n  function _isValidValue(value) {\n    return typeof value === 'string';\n  }\n});","map":[[10,0,1,0],[12,6,2,8,"ExponentSecureStore"],[12,25],[12,28,2,32,"NativeModules"],[12,54],[12,55,2,8,"ExponentSecureStore"],[12,74],[13,0,3,7],[13,6,3,13,"AFTER_FIRST_UNLOCK"],[13,24,3,31],[13,27,3,34,"ExponentSecureStore"],[13,46,3,53],[13,47,3,54,"AFTER_FIRST_UNLOCK"],[13,65,3,7],[15,0,4,7],[15,6,4,13,"AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY"],[15,41,4,48],[15,44,4,51,"ExponentSecureStore"],[15,63,4,70],[15,64,4,71,"AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY"],[15,99,4,7],[17,0,5,7],[17,6,5,13,"ALWAYS"],[17,12,5,19],[17,15,5,22,"ExponentSecureStore"],[17,34,5,41],[17,35,5,42,"ALWAYS"],[17,41,5,7],[19,0,6,7],[19,6,6,13,"WHEN_PASSCODE_SET_THIS_DEVICE_ONLY"],[19,40,6,47],[19,43,6,50,"ExponentSecureStore"],[19,62,6,69],[19,63,6,70,"WHEN_PASSCODE_SET_THIS_DEVICE_ONLY"],[19,97,6,7],[21,0,7,7],[21,6,7,13,"ALWAYS_THIS_DEVICE_ONLY"],[21,29,7,36],[21,32,7,39,"ExponentSecureStore"],[21,51,7,58],[21,52,7,59,"ALWAYS_THIS_DEVICE_ONLY"],[21,75,7,7],[23,0,8,7],[23,6,8,13,"WHEN_UNLOCKED"],[23,19,8,26],[23,22,8,29,"ExponentSecureStore"],[23,41,8,48],[23,42,8,49,"WHEN_UNLOCKED"],[23,55,8,7],[25,0,9,7],[25,6,9,13,"WHEN_UNLOCKED_THIS_DEVICE_ONLY"],[25,36,9,43],[25,39,9,46,"ExponentSecureStore"],[25,58,9,65],[25,59,9,66,"WHEN_UNLOCKED_THIS_DEVICE_ONLY"],[25,89,9,7],[28,0,10,7],[28,11,10,22,"deleteItemAsync"],[28,26,10,7],[28,27,10,38,"key"],[28,30,10,7],[29,0,10,7],[30,0,10,7],[31,0,10,7],[32,0,10,7],[33,0,10,7],[34,0,10,7],[35,0,10,43,"options"],[35,12,10,43,"options"],[35,19,10,7],[35,78,10,53],[35,80,10,7],[37,0,11,4,"_ensureValidKey"],[37,12,11,4,"_ensureValidKey"],[37,27,11,19],[37,28,11,20,"key"],[37,31,11,19],[37,32,11,4],[39,0,10,7],[40,0,10,7],[40,44,12,10,"ExponentSecureStore"],[40,63,12,29],[40,64,12,30,"deleteValueWithKeyAsync"],[40,87,12,10],[40,88,12,54,"key"],[40,91,12,10],[40,93,12,59,"options"],[40,100,12,10],[40,101,10,7],[42,0,10,7],[43,0,10,7],[44,0,10,7],[45,0,10,7],[46,0,10,7],[47,0,10,7],[48,0,10,7],[50,0,14,7],[50,11,14,22,"getItemAsync"],[50,23,14,7],[50,24,14,35,"key"],[50,27,14,7],[51,0,14,7],[52,0,14,7],[53,0,14,7],[54,0,14,7],[55,0,14,7],[56,0,14,7],[57,0,14,40,"options"],[57,12,14,40,"options"],[57,19,14,7],[57,81,14,50],[57,83,14,7],[59,0,15,4,"_ensureValidKey"],[59,12,15,4,"_ensureValidKey"],[59,27,15,19],[59,28,15,20,"key"],[59,31,15,19],[59,32,15,4],[61,0,14,7],[62,0,14,7],[62,44,16,17,"ExponentSecureStore"],[62,63,16,36],[62,64,16,37,"getValueWithKeyAsync"],[62,84,16,17],[62,85,16,58,"key"],[62,88,16,17],[62,90,16,63,"options"],[62,97,16,17],[62,98,14,7],[64,0,14,7],[65,0,14,7],[67,0,14,7],[68,0,14,7],[69,0,14,7],[70,0,14,7],[71,0,14,7],[72,0,14,7],[73,0,14,7],[75,0,18,7],[75,11,18,22,"setItemAsync"],[75,23,18,7],[75,24,18,35,"key"],[75,27,18,7],[75,29,18,40,"value"],[75,34,18,7],[76,0,18,7],[77,0,18,7],[78,0,18,7],[79,0,18,7],[80,0,18,7],[81,0,18,7],[82,0,18,47,"options"],[82,12,18,47,"options"],[82,19,18,7],[82,81,18,57],[82,83,18,7],[84,0,19,4,"_ensureValidKey"],[84,12,19,4,"_ensureValidKey"],[84,27,19,19],[84,28,19,20,"key"],[84,31,19,19],[84,32,19,4],[86,0,18,7],[86,16,20,9,"_isValidValue"],[86,29,20,22],[86,30,20,23,"value"],[86,35,20,22],[86,36,18,7],[87,0,18,7],[88,0,18,7],[89,0,18,7],[91,0,18,7],[91,18,21,14],[91,22,21,18,"Error"],[91,27,21,14],[91,154,18,7],[93,0,18,7],[94,0,18,7],[95,0,18,7],[95,44,23,10,"ExponentSecureStore"],[95,63,23,29],[95,64,23,30,"setValueWithKeyAsync"],[95,84,23,10],[95,85,23,51,"value"],[95,90,23,10],[95,92,23,58,"key"],[95,95,23,10],[95,97,23,63,"options"],[95,104,23,10],[95,105,18,7],[97,0,18,7],[98,0,18,7],[99,0,18,7],[100,0,18,7],[101,0,18,7],[102,0,18,7],[103,0,18,7],[105,0,25,0],[105,11,25,9,"_ensureValidKey"],[105,26,25,0],[105,27,25,25,"key"],[105,30,25,0],[105,32,25,30],[106,0,26,4],[106,8,26,8],[106,9,26,9,"_isValidKey"],[106,20,26,20],[106,21,26,21,"key"],[106,24,26,20],[106,25,26,4],[106,27,26,27],[107,0,27,8],[107,12,27,14],[107,16,27,18,"Error"],[107,21,27,14],[107,151,27,8],[108,0,28,5],[109,0,29,1],[111,0,30,0],[111,11,30,9,"_isValidKey"],[111,22,30,0],[111,23,30,21,"key"],[111,26,30,0],[111,28,30,26],[112,0,31,4],[112,11,31,11],[112,18,31,18,"key"],[112,21,31,11],[112,26,31,26],[112,34,31,11],[112,38,31,38],[112,50,31,50,"test"],[112,54,31,38],[112,55,31,55,"key"],[112,58,31,38],[112,59,31,4],[113,0,32,1],[115,0,33,0],[115,11,33,9,"_isValidValue"],[115,24,33,0],[115,25,33,23,"value"],[115,30,33,0],[115,32,33,30],[116,0,34,4],[116,11,34,11],[116,18,34,18,"value"],[116,23,34,11],[116,28,34,28],[116,36,34,4],[117,0,35,1]]},"type":"js/module"}]}