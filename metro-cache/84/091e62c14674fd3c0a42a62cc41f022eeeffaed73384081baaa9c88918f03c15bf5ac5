{"dependencies":[{"name":"./core/AnimatedCond","data":{"isAsync":false}},{"name":"./core/AnimatedSet","data":{"isAsync":false}},{"name":"./core/AnimatedOperator","data":{"isAsync":false}},{"name":"./core/AnimatedStartClock","data":{"isAsync":false}},{"name":"./core/AnimatedStopClock","data":{"isAsync":false}},{"name":"./core/AnimatedClockTest","data":{"isAsync":false}},{"name":"./core/AnimatedDebug","data":{"isAsync":false}},{"name":"./core/AnimatedCall","data":{"isAsync":false}},{"name":"./core/AnimatedEvent","data":{"isAsync":false}},{"name":"./core/AnimatedAlways","data":{"isAsync":false}},{"name":"./core/AnimatedConcat","data":{"isAsync":false}},{"name":"./utils","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.event = exports.clockRunning = exports.stopClock = exports.concat = exports.always = exports.startClock = exports.debug = exports.call = exports.block = exports.cond = exports.set = exports.not = exports.defined = exports.or = exports.and = exports.neq = exports.greaterOrEq = exports.lessOrEq = exports.greaterThan = exports.eq = exports.lessThan = exports.round = exports.exp = exports.cos = exports.sin = exports.sqrt = exports.modulo = exports.pow = exports.divide = exports.multiply = exports.sub = exports.add = void 0;\n\n  var _AnimatedCond = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"./core/AnimatedCond\"));\n\n  var _AnimatedSet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./core/AnimatedSet\"));\n\n  var _AnimatedOperator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"./core/AnimatedOperator\"));\n\n  var _AnimatedStartClock = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./core/AnimatedStartClock\"));\n\n  var _AnimatedStopClock = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./core/AnimatedStopClock\"));\n\n  var _AnimatedClockTest = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./core/AnimatedClockTest\"));\n\n  var _AnimatedDebug = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./core/AnimatedDebug\"));\n\n  var _AnimatedCall = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./core/AnimatedCall\"));\n\n  var _AnimatedEvent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"./core/AnimatedEvent\"));\n\n  var _AnimatedAlways = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./core/AnimatedAlways\"));\n\n  var _AnimatedConcat = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./core/AnimatedConcat\"));\n\n  var _utils = _$$_REQUIRE(_dependencyMap[11], \"./utils\");\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\n  function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  function operator(name) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return new _AnimatedOperator.default(name, args.map(_utils.adapt));\n    };\n  }\n\n  var add = operator('add');\n  exports.add = add;\n  var sub = operator('sub');\n  exports.sub = sub;\n  var multiply = operator('multiply');\n  exports.multiply = multiply;\n  var divide = operator('divide');\n  exports.divide = divide;\n  var pow = operator('pow');\n  exports.pow = pow;\n  var modulo = operator('modulo');\n  exports.modulo = modulo;\n  var sqrt = operator('sqrt');\n  exports.sqrt = sqrt;\n  var sin = operator('sin');\n  exports.sin = sin;\n  var cos = operator('cos');\n  exports.cos = cos;\n  var exp = operator('exp');\n  exports.exp = exp;\n  var round = operator('round');\n  exports.round = round;\n  var lessThan = operator('lessThan');\n  exports.lessThan = lessThan;\n  var eq = operator('eq');\n  exports.eq = eq;\n  var greaterThan = operator('greaterThan');\n  exports.greaterThan = greaterThan;\n  var lessOrEq = operator('lessOrEq');\n  exports.lessOrEq = lessOrEq;\n  var greaterOrEq = operator('greaterOrEq');\n  exports.greaterOrEq = greaterOrEq;\n  var neq = operator('neq');\n  exports.neq = neq;\n  var and = operator('and');\n  exports.and = and;\n  var or = operator('or');\n  exports.or = or;\n  var defined = operator('defined');\n  exports.defined = defined;\n  var not = operator('not');\n  exports.not = not;\n\n  var set = function set(what, value) {\n    return new _AnimatedSet.default(what, (0, _utils.adapt)(value));\n  };\n\n  exports.set = set;\n\n  var cond = function cond(_cond, ifBlock, elseBlock) {\n    return new _AnimatedCond.default((0, _utils.adapt)(_cond), (0, _utils.adapt)(ifBlock), elseBlock === undefined ? undefined : (0, _utils.adapt)(elseBlock));\n  };\n\n  exports.cond = cond;\n\n  var block = function block(items) {\n    return (0, _utils.adapt)(items);\n  };\n\n  exports.block = block;\n\n  var call = function call(args, func) {\n    return new _AnimatedCall.default(args, func);\n  };\n\n  exports.call = call;\n\n  var debug = function debug(message, value) {\n    if (__DEV__) {\n      var runningInRemoteDebugger = typeof atob !== 'undefined';\n      var runningInExpoShell = global.Expo && global.Expo.Constants.appOwnership !== 'standalone';\n\n      if (runningInRemoteDebugger || runningInExpoShell) {\n        return block([call([value], function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 1),\n              a = _ref2[0];\n\n          return console.log(message + \" \" + a);\n        }), value]);\n      } else {\n        return new _AnimatedDebug.default(message, (0, _utils.adapt)(value));\n      }\n    }\n\n    return value;\n  };\n\n  exports.debug = debug;\n\n  var startClock = function startClock(clock) {\n    return new _AnimatedStartClock.default(clock);\n  };\n\n  exports.startClock = startClock;\n\n  var always = function always(item) {\n    return new _AnimatedAlways.default(item);\n  };\n\n  exports.always = always;\n\n  var concat = function concat() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return new _AnimatedConcat.default(args.map(_utils.adapt));\n  };\n\n  exports.concat = concat;\n\n  var stopClock = function stopClock(clock) {\n    return new _AnimatedStopClock.default(clock);\n  };\n\n  exports.stopClock = stopClock;\n\n  var clockRunning = function clockRunning(clock) {\n    return new _AnimatedClockTest.default(clock);\n  };\n\n  exports.clockRunning = clockRunning;\n\n  var event = function event(argMapping, config) {\n    return new _AnimatedEvent.default(argMapping, config);\n  };\n\n  exports.event = event;\n});","map":[[7,0,1,0],[9,0,2,0],[11,0,3,0],[13,0,4,0],[15,0,5,0],[17,0,6,0],[19,0,7,0],[21,0,8,0],[23,0,9,0],[25,0,10,0],[27,0,11,0],[29,0,13,0],[41,0,15,0],[41,11,15,9,"operator"],[41,19,15,0],[41,20,15,18,"name"],[41,24,15,0],[41,26,15,24],[42,0,16,2],[42,11,16,9],[43,0,16,9],[43,40,16,13,"args"],[43,44,16,9],[44,0,16,13,"args"],[44,8,16,13,"args"],[44,12,16,9],[45,0,16,9],[47,0,16,9],[47,13,16,22],[47,17,16,26,"AnimatedOperator"],[47,42,16,22],[47,43,16,43,"name"],[47,47,16,22],[47,49,16,49,"args"],[47,53,16,53],[47,54,16,54,"map"],[47,57,16,49],[47,58,16,58,"adapt"],[47,70,16,49],[47,71,16,22],[47,72,16,9],[48,0,16,9],[48,5,16,2],[49,0,17,1],[51,0,19,7],[51,6,19,13,"add"],[51,9,19,16],[51,12,19,19,"operator"],[51,20,19,27],[51,21,19,28],[51,26,19,27],[51,27,19,7],[53,0,20,7],[53,6,20,13,"sub"],[53,9,20,16],[53,12,20,19,"operator"],[53,20,20,27],[53,21,20,28],[53,26,20,27],[53,27,20,7],[55,0,21,7],[55,6,21,13,"multiply"],[55,14,21,21],[55,17,21,24,"operator"],[55,25,21,32],[55,26,21,33],[55,36,21,32],[55,37,21,7],[57,0,22,7],[57,6,22,13,"divide"],[57,12,22,19],[57,15,22,22,"operator"],[57,23,22,30],[57,24,22,31],[57,32,22,30],[57,33,22,7],[59,0,23,7],[59,6,23,13,"pow"],[59,9,23,16],[59,12,23,19,"operator"],[59,20,23,27],[59,21,23,28],[59,26,23,27],[59,27,23,7],[61,0,24,7],[61,6,24,13,"modulo"],[61,12,24,19],[61,15,24,22,"operator"],[61,23,24,30],[61,24,24,31],[61,32,24,30],[61,33,24,7],[63,0,25,7],[63,6,25,13,"sqrt"],[63,10,25,17],[63,13,25,20,"operator"],[63,21,25,28],[63,22,25,29],[63,28,25,28],[63,29,25,7],[65,0,26,7],[65,6,26,13,"sin"],[65,9,26,16],[65,12,26,19,"operator"],[65,20,26,27],[65,21,26,28],[65,26,26,27],[65,27,26,7],[67,0,27,7],[67,6,27,13,"cos"],[67,9,27,16],[67,12,27,19,"operator"],[67,20,27,27],[67,21,27,28],[67,26,27,27],[67,27,27,7],[69,0,28,7],[69,6,28,13,"exp"],[69,9,28,16],[69,12,28,19,"operator"],[69,20,28,27],[69,21,28,28],[69,26,28,27],[69,27,28,7],[71,0,29,7],[71,6,29,13,"round"],[71,11,29,18],[71,14,29,21,"operator"],[71,22,29,29],[71,23,29,30],[71,30,29,29],[71,31,29,7],[73,0,30,7],[73,6,30,13,"lessThan"],[73,14,30,21],[73,17,30,24,"operator"],[73,25,30,32],[73,26,30,33],[73,36,30,32],[73,37,30,7],[75,0,31,7],[75,6,31,13,"eq"],[75,8,31,15],[75,11,31,18,"operator"],[75,19,31,26],[75,20,31,27],[75,24,31,26],[75,25,31,7],[77,0,32,7],[77,6,32,13,"greaterThan"],[77,17,32,24],[77,20,32,27,"operator"],[77,28,32,35],[77,29,32,36],[77,42,32,35],[77,43,32,7],[79,0,33,7],[79,6,33,13,"lessOrEq"],[79,14,33,21],[79,17,33,24,"operator"],[79,25,33,32],[79,26,33,33],[79,36,33,32],[79,37,33,7],[81,0,34,7],[81,6,34,13,"greaterOrEq"],[81,17,34,24],[81,20,34,27,"operator"],[81,28,34,35],[81,29,34,36],[81,42,34,35],[81,43,34,7],[83,0,35,7],[83,6,35,13,"neq"],[83,9,35,16],[83,12,35,19,"operator"],[83,20,35,27],[83,21,35,28],[83,26,35,27],[83,27,35,7],[85,0,36,7],[85,6,36,13,"and"],[85,9,36,16],[85,12,36,19,"operator"],[85,20,36,27],[85,21,36,28],[85,26,36,27],[85,27,36,7],[87,0,37,7],[87,6,37,13,"or"],[87,8,37,15],[87,11,37,18,"operator"],[87,19,37,26],[87,20,37,27],[87,24,37,26],[87,25,37,7],[89,0,38,7],[89,6,38,13,"defined"],[89,13,38,20],[89,16,38,23,"operator"],[89,24,38,31],[89,25,38,32],[89,34,38,31],[89,35,38,7],[91,0,39,7],[91,6,39,13,"not"],[91,9,39,16],[91,12,39,19,"operator"],[91,20,39,27],[91,21,39,28],[91,26,39,27],[91,27,39,7],[94,0,41,7],[94,6,41,13,"set"],[94,9,41,16],[94,12,41,19],[94,21,41,13,"set"],[94,24,41,19],[94,25,41,28,"what"],[94,29,41,19],[94,31,41,34,"value"],[94,36,41,19],[94,38,41,41],[95,0,42,2],[95,11,42,9],[95,15,42,13,"AnimatedSet"],[95,35,42,9],[95,36,42,25,"what"],[95,40,42,9],[95,42,42,31],[95,60,42,37,"value"],[95,65,42,31],[95,66,42,9],[95,67,42,2],[96,0,43,1],[96,3,41,7],[100,0,45,7],[100,6,45,13,"cond"],[100,10,45,17],[100,13,45,20],[100,27,45,29,"cond"],[100,32,45,20],[100,34,45,35,"ifBlock"],[100,41,45,20],[100,43,45,44,"elseBlock"],[100,52,45,20],[100,54,45,55],[101,0,46,2],[101,11,46,9],[101,15,46,13,"AnimatedCond"],[101,36,46,9],[101,37,47,4],[101,55,47,10,"cond"],[101,60,47,4],[101,61,46,9],[101,63,48,4],[101,81,48,10,"ifBlock"],[101,88,48,4],[101,89,46,9],[101,91,49,4,"elseBlock"],[101,100,49,13],[101,105,49,18,"undefined"],[101,114,49,4],[101,117,49,30,"undefined"],[101,126,49,4],[101,129,49,42],[101,147,49,48,"elseBlock"],[101,156,49,42],[101,157,46,9],[101,158,46,2],[102,0,51,1],[102,3,45,7],[106,0,53,7],[106,6,53,13,"block"],[106,11,53,18],[106,14,53,21],[106,23,53,13,"block"],[106,28,53,21],[106,29,53,30,"items"],[106,34,53,21],[106,36,53,37],[107,0,54,2],[107,11,54,9],[107,29,54,15,"items"],[107,34,54,9],[107,35,54,2],[108,0,55,1],[108,3,53,7],[112,0,57,7],[112,6,57,13,"call"],[112,10,57,17],[112,13,57,20],[112,22,57,13,"call"],[112,26,57,20],[112,27,57,29,"args"],[112,31,57,20],[112,33,57,35,"func"],[112,37,57,20],[112,39,57,41],[113,0,58,2],[113,11,58,9],[113,15,58,13,"AnimatedCall"],[113,36,58,9],[113,37,58,26,"args"],[113,41,58,9],[113,43,58,32,"func"],[113,47,58,9],[113,48,58,2],[114,0,59,1],[114,3,57,7],[118,0,61,7],[118,6,61,13,"debug"],[118,11,61,18],[118,14,61,21],[118,23,61,13,"debug"],[118,28,61,21],[118,29,61,30,"message"],[118,36,61,21],[118,38,61,39,"value"],[118,43,61,21],[118,45,61,46],[119,0,62,2],[119,8,62,6,"__DEV__"],[119,15,62,2],[119,17,62,15],[120,0,63,4],[120,10,63,10,"runningInRemoteDebugger"],[120,33,63,33],[120,36,63,36],[120,43,63,43,"atob"],[120,47,63,36],[120,52,63,52],[120,63,63,4],[121,0,67,4],[121,10,67,10,"runningInExpoShell"],[121,28,67,28],[121,31,68,6,"global"],[121,37,68,12],[121,38,68,13,"Expo"],[121,42,68,6],[121,46,68,21,"global"],[121,52,68,27],[121,53,68,28,"Expo"],[121,57,68,21],[121,58,68,33,"Constants"],[121,67,68,21],[121,68,68,43,"appOwnership"],[121,80,68,21],[121,85,68,60],[121,97,67,4],[123,0,70,4],[123,10,70,8,"runningInRemoteDebugger"],[123,33,70,31],[123,37,70,35,"runningInExpoShell"],[123,55,70,4],[123,57,70,55],[124,0,73,6],[124,15,73,13,"block"],[124,20,73,18],[124,21,73,19],[124,22,74,8,"call"],[124,26,74,12],[124,27,74,13],[124,28,74,14,"value"],[124,33,74,13],[124,34,74,12],[124,36,74,22],[125,0,74,22],[126,0,74,22],[126,14,74,24,"a"],[126,15,74,22],[128,0,74,22],[128,17,74,31,"console"],[128,24,74,38],[128,25,74,39,"log"],[128,28,74,31],[128,29,74,46,"message"],[128,36,74,31],[128,45,74,57,"a"],[128,46,74,31],[128,47,74,22],[129,0,74,22],[129,9,74,12],[129,10,73,19],[129,12,75,8,"value"],[129,17,73,19],[129,18,73,18],[129,19,73,6],[130,0,77,5],[130,7,70,4],[130,13,77,11],[131,0,78,6],[131,15,78,13],[131,19,78,17,"AnimatedDebug"],[131,41,78,13],[131,42,78,31,"message"],[131,49,78,13],[131,51,78,40],[131,69,78,46,"value"],[131,74,78,40],[131,75,78,13],[131,76,78,6],[132,0,79,5],[133,0,80,3],[135,0,82,2],[135,11,82,9,"value"],[135,16,82,2],[136,0,83,1],[136,3,61,7],[140,0,85,7],[140,6,85,13,"startClock"],[140,16,85,23],[140,19,85,26],[140,28,85,13,"startClock"],[140,38,85,26],[140,39,85,35,"clock"],[140,44,85,26],[140,46,85,42],[141,0,86,2],[141,11,86,9],[141,15,86,13,"AnimatedStartClock"],[141,42,86,9],[141,43,86,32,"clock"],[141,48,86,9],[141,49,86,2],[142,0,87,1],[142,3,85,7],[146,0,89,7],[146,6,89,13,"always"],[146,12,89,19],[146,15,89,22],[146,24,89,13,"always"],[146,30,89,22],[146,31,89,31,"item"],[146,35,89,22],[146,37,89,37],[147,0,90,2],[147,11,90,9],[147,15,90,13,"AnimatedAlways"],[147,38,90,9],[147,39,90,28,"item"],[147,43,90,9],[147,44,90,2],[148,0,91,1],[148,3,89,7],[152,0,93,7],[152,6,93,13,"concat"],[152,12,93,19],[152,15,93,22],[152,24,93,13,"concat"],[152,30,93,22],[152,33,93,40],[153,0,93,40],[153,39,93,34,"args"],[153,43,93,40],[154,0,93,34,"args"],[154,6,93,34,"args"],[154,10,93,40],[155,0,93,40],[157,0,94,2],[157,11,94,9],[157,15,94,13,"AnimatedConcat"],[157,38,94,9],[157,39,94,28,"args"],[157,43,94,32],[157,44,94,33,"map"],[157,47,94,28],[157,48,94,37,"adapt"],[157,60,94,28],[157,61,94,9],[157,62,94,2],[158,0,95,1],[158,3,93,7],[162,0,97,7],[162,6,97,13,"stopClock"],[162,15,97,22],[162,18,97,25],[162,27,97,13,"stopClock"],[162,36,97,25],[162,37,97,34,"clock"],[162,42,97,25],[162,44,97,41],[163,0,98,2],[163,11,98,9],[163,15,98,13,"AnimatedStopClock"],[163,41,98,9],[163,42,98,31,"clock"],[163,47,98,9],[163,48,98,2],[164,0,99,1],[164,3,97,7],[168,0,101,7],[168,6,101,13,"clockRunning"],[168,18,101,25],[168,21,101,28],[168,30,101,13,"clockRunning"],[168,42,101,28],[168,43,101,37,"clock"],[168,48,101,28],[168,50,101,44],[169,0,102,2],[169,11,102,9],[169,15,102,13,"AnimatedClockTest"],[169,41,102,9],[169,42,102,31,"clock"],[169,47,102,9],[169,48,102,2],[170,0,103,1],[170,3,101,7],[174,0,105,7],[174,6,105,13,"event"],[174,11,105,18],[174,14,105,21],[174,23,105,13,"event"],[174,28,105,21],[174,29,105,30,"argMapping"],[174,39,105,21],[174,41,105,42,"config"],[174,47,105,21],[174,49,105,50],[175,0,106,2],[175,11,106,9],[175,15,106,13,"AnimatedEvent"],[175,37,106,9],[175,38,106,27,"argMapping"],[175,48,106,9],[175,50,106,39,"config"],[175,56,106,9],[175,57,106,2],[176,0,107,1],[176,3,105,7]]},"type":"js/module"}]}