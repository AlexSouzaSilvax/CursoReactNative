{"dependencies":[{"name":"./AnimatedNode","data":{"isAsync":false}},{"name":"./AnimatedWithChildren","data":{"isAsync":false}},{"name":"../NativeAnimatedHelper","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\n  function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  var AnimatedNode = _$$_REQUIRE(_dependencyMap[0], \"./AnimatedNode\");\n\n  var AnimatedWithChildren = _$$_REQUIRE(_dependencyMap[1], \"./AnimatedWithChildren\");\n\n  var NativeAnimatedHelper = _$$_REQUIRE(_dependencyMap[2], \"../NativeAnimatedHelper\");\n\n  var AnimatedTransform = function (_AnimatedWithChildren) {\n    _inherits(AnimatedTransform, _AnimatedWithChildren);\n\n    function AnimatedTransform(transforms) {\n      var _this;\n\n      _classCallCheck(this, AnimatedTransform);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedTransform).call(this));\n      _this._transforms = transforms;\n      return _this;\n    }\n\n    _createClass(AnimatedTransform, [{\n      key: \"__makeNative\",\n      value: function __makeNative() {\n        this._transforms.forEach(function (transform) {\n          for (var key in transform) {\n            var value = transform[key];\n\n            if (value instanceof AnimatedNode) {\n              value.__makeNative();\n            }\n          }\n        });\n\n        _get(_getPrototypeOf(AnimatedTransform.prototype), \"__makeNative\", this).call(this);\n      }\n    }, {\n      key: \"__getValue\",\n      value: function __getValue() {\n        return this._transforms.map(function (transform) {\n          var result = {};\n\n          for (var key in transform) {\n            var value = transform[key];\n\n            if (value instanceof AnimatedNode) {\n              result[key] = value.__getValue();\n            } else {\n              result[key] = value;\n            }\n          }\n\n          return result;\n        });\n      }\n    }, {\n      key: \"__getAnimatedValue\",\n      value: function __getAnimatedValue() {\n        return this._transforms.map(function (transform) {\n          var result = {};\n\n          for (var key in transform) {\n            var value = transform[key];\n\n            if (value instanceof AnimatedNode) {\n              result[key] = value.__getAnimatedValue();\n            } else {\n              result[key] = value;\n            }\n          }\n\n          return result;\n        });\n      }\n    }, {\n      key: \"__attach\",\n      value: function __attach() {\n        var _this2 = this;\n\n        this._transforms.forEach(function (transform) {\n          for (var key in transform) {\n            var value = transform[key];\n\n            if (value instanceof AnimatedNode) {\n              value.__addChild(_this2);\n            }\n          }\n        });\n      }\n    }, {\n      key: \"__detach\",\n      value: function __detach() {\n        var _this3 = this;\n\n        this._transforms.forEach(function (transform) {\n          for (var key in transform) {\n            var value = transform[key];\n\n            if (value instanceof AnimatedNode) {\n              value.__removeChild(_this3);\n            }\n          }\n        });\n\n        _get(_getPrototypeOf(AnimatedTransform.prototype), \"__detach\", this).call(this);\n      }\n    }, {\n      key: \"__getNativeConfig\",\n      value: function __getNativeConfig() {\n        var transConfigs = [];\n\n        this._transforms.forEach(function (transform) {\n          for (var key in transform) {\n            var value = transform[key];\n\n            if (value instanceof AnimatedNode) {\n              transConfigs.push({\n                type: 'animated',\n                property: key,\n                nodeTag: value.__getNativeTag()\n              });\n            } else {\n              transConfigs.push({\n                type: 'static',\n                property: key,\n                value: value\n              });\n            }\n          }\n        });\n\n        NativeAnimatedHelper.validateTransform(transConfigs);\n        return {\n          type: 'transform',\n          transforms: transConfigs\n        };\n      }\n    }]);\n\n    return AnimatedTransform;\n  }(AnimatedWithChildren);\n\n  module.exports = AnimatedTransform;\n});","map":[[2,0,10,0],[24,0,12,0],[24,6,12,6,"AnimatedNode"],[24,18,12,18],[24,21,12,21,"require"],[24,32,12,28],[24,69,12,0],[26,0,13,0],[26,6,13,6,"AnimatedWithChildren"],[26,26,13,26],[26,29,13,29,"require"],[26,40,13,36],[26,85,13,0],[28,0,14,0],[28,6,14,6,"NativeAnimatedHelper"],[28,26,14,26],[28,29,14,29,"require"],[28,40,14,36],[28,86,14,0],[30,6,16,6,"AnimatedTransform"],[30,23],[33,0,19,2],[33,31,19,14,"transforms"],[33,41,19,2],[33,43,19,50],[34,0,19,50],[36,0,19,50],[38,0,20,4],[39,0,21,4],[39,12,21,9,"_transforms"],[39,23,21,4],[39,26,21,23,"transforms"],[39,36,21,4],[40,0,19,50],[41,0,22,3],[45,37,24,17],[46,0,25,4],[46,13,25,9,"_transforms"],[46,24,25,4],[46,25,25,21,"forEach"],[46,32,25,4],[46,33,25,29],[46,43,25,29,"transform"],[46,52,25,38],[46,54,25,42],[47,0,26,6],[47,15,26,11],[47,19,26,17,"key"],[47,22,26,6],[47,26,26,24,"transform"],[47,35,26,6],[47,37,26,35],[48,0,27,8],[48,16,27,14,"value"],[48,21,27,19],[48,24,27,22,"transform"],[48,33,27,31],[48,34,27,32,"key"],[48,37,27,31],[48,38,27,8],[50,0,28,8],[50,16,28,12,"value"],[50,21,28,17],[50,33,28,29,"AnimatedNode"],[50,45,28,8],[50,47,28,43],[51,0,29,10,"value"],[51,14,29,10,"value"],[51,19,29,15],[51,20,29,16,"__makeNative"],[51,32,29,10],[52,0,30,9],[53,0,31,7],[54,0,32,5],[54,9,25,4],[56,0,33,4],[57,0,34,3],[60,35,36,39],[61,0,37,4],[61,15,37,11],[61,20,37,16,"_transforms"],[61,31,37,11],[61,32,37,28,"map"],[61,35,37,11],[61,36,37,32],[61,46,37,32,"transform"],[61,55,37,41],[61,57,37,45],[62,0,38,6],[62,14,38,12,"result"],[62,20,38,18],[62,23,38,21],[62,25,38,6],[64,0,39,6],[64,15,39,11],[64,19,39,17,"key"],[64,22,39,6],[64,26,39,24,"transform"],[64,35,39,6],[64,37,39,35],[65,0,40,8],[65,16,40,14,"value"],[65,21,40,19],[65,24,40,22,"transform"],[65,33,40,31],[65,34,40,32,"key"],[65,37,40,31],[65,38,40,8],[67,0,41,8],[67,16,41,12,"value"],[67,21,41,17],[67,33,41,29,"AnimatedNode"],[67,45,41,8],[67,47,41,43],[68,0,42,10,"result"],[68,14,42,10,"result"],[68,20,42,16],[68,21,42,17,"key"],[68,24,42,16],[68,25,42,10],[68,28,42,24,"value"],[68,33,42,29],[68,34,42,30,"__getValue"],[68,44,42,24],[68,46,42,10],[69,0,43,9],[69,13,41,8],[69,19,43,15],[70,0,44,10,"result"],[70,14,44,10,"result"],[70,20,44,16],[70,21,44,17,"key"],[70,24,44,16],[70,25,44,10],[70,28,44,24,"value"],[70,33,44,10],[71,0,45,9],[72,0,46,7],[74,0,47,6],[74,17,47,13,"result"],[74,23,47,6],[75,0,48,5],[75,9,37,11],[75,10,37,4],[76,0,49,3],[79,43,51,47],[80,0,52,4],[80,15,52,11],[80,20,52,16,"_transforms"],[80,31,52,11],[80,32,52,28,"map"],[80,35,52,11],[80,36,52,32],[80,46,52,32,"transform"],[80,55,52,41],[80,57,52,45],[81,0,53,6],[81,14,53,12,"result"],[81,20,53,18],[81,23,53,21],[81,25,53,6],[83,0,54,6],[83,15,54,11],[83,19,54,17,"key"],[83,22,54,6],[83,26,54,24,"transform"],[83,35,54,6],[83,37,54,35],[84,0,55,8],[84,16,55,14,"value"],[84,21,55,19],[84,24,55,22,"transform"],[84,33,55,31],[84,34,55,32,"key"],[84,37,55,31],[84,38,55,8],[86,0,56,8],[86,16,56,12,"value"],[86,21,56,17],[86,33,56,29,"AnimatedNode"],[86,45,56,8],[86,47,56,43],[87,0,57,10,"result"],[87,14,57,10,"result"],[87,20,57,16],[87,21,57,17,"key"],[87,24,57,16],[87,25,57,10],[87,28,57,24,"value"],[87,33,57,29],[87,34,57,30,"__getAnimatedValue"],[87,52,57,24],[87,54,57,10],[88,0,58,9],[88,13,56,8],[88,19,58,15],[89,0,60,10,"result"],[89,14,60,10,"result"],[89,20,60,16],[89,21,60,17,"key"],[89,24,60,16],[89,25,60,10],[89,28,60,24,"value"],[89,33,60,10],[90,0,61,9],[91,0,62,7],[93,0,63,6],[93,17,63,13,"result"],[93,23,63,6],[94,0,64,5],[94,9,52,11],[94,10,52,4],[95,0,65,3],[98,33,67,19],[99,0,67,19],[101,0,68,4],[101,13,68,9,"_transforms"],[101,24,68,4],[101,25,68,21,"forEach"],[101,32,68,4],[101,33,68,29],[101,43,68,29,"transform"],[101,52,68,38],[101,54,68,42],[102,0,69,6],[102,15,69,11],[102,19,69,17,"key"],[102,22,69,6],[102,26,69,24,"transform"],[102,35,69,6],[102,37,69,35],[103,0,70,8],[103,16,70,14,"value"],[103,21,70,19],[103,24,70,22,"transform"],[103,33,70,31],[103,34,70,32,"key"],[103,37,70,31],[103,38,70,8],[105,0,71,8],[105,16,71,12,"value"],[105,21,71,17],[105,33,71,29,"AnimatedNode"],[105,45,71,8],[105,47,71,43],[106,0,72,10,"value"],[106,14,72,10,"value"],[106,19,72,15],[106,20,72,16,"__addChild"],[106,30,72,10],[106,31,72,27],[106,37,72,10],[107,0,73,9],[108,0,74,7],[109,0,75,5],[109,9,68,4],[110,0,76,3],[113,33,78,19],[114,0,78,19],[116,0,79,4],[116,13,79,9,"_transforms"],[116,24,79,4],[116,25,79,21,"forEach"],[116,32,79,4],[116,33,79,29],[116,43,79,29,"transform"],[116,52,79,38],[116,54,79,42],[117,0,80,6],[117,15,80,11],[117,19,80,17,"key"],[117,22,80,6],[117,26,80,24,"transform"],[117,35,80,6],[117,37,80,35],[118,0,81,8],[118,16,81,14,"value"],[118,21,81,19],[118,24,81,22,"transform"],[118,33,81,31],[118,34,81,32,"key"],[118,37,81,31],[118,38,81,8],[120,0,82,8],[120,16,82,12,"value"],[120,21,82,17],[120,33,82,29,"AnimatedNode"],[120,45,82,8],[120,47,82,43],[121,0,83,10,"value"],[121,14,83,10,"value"],[121,19,83,15],[121,20,83,16,"__removeChild"],[121,33,83,10],[121,34,83,30],[121,40,83,10],[122,0,84,9],[123,0,85,7],[124,0,86,5],[124,9,79,4],[126,0,87,4],[127,0,88,3],[130,42,90,27],[131,0,91,4],[131,12,91,10,"transConfigs"],[131,24,91,22],[131,27,91,25],[131,29,91,4],[133,0,93,4],[133,13,93,9,"_transforms"],[133,24,93,4],[133,25,93,21,"forEach"],[133,32,93,4],[133,33,93,29],[133,43,93,29,"transform"],[133,52,93,38],[133,54,93,42],[134,0,94,6],[134,15,94,11],[134,19,94,17,"key"],[134,22,94,6],[134,26,94,24,"transform"],[134,35,94,6],[134,37,94,35],[135,0,95,8],[135,16,95,14,"value"],[135,21,95,19],[135,24,95,22,"transform"],[135,33,95,31],[135,34,95,32,"key"],[135,37,95,31],[135,38,95,8],[137,0,96,8],[137,16,96,12,"value"],[137,21,96,17],[137,33,96,29,"AnimatedNode"],[137,45,96,8],[137,47,96,43],[138,0,97,10,"transConfigs"],[138,14,97,10,"transConfigs"],[138,26,97,22],[138,27,97,23,"push"],[138,31,97,10],[138,32,97,28],[139,0,98,12,"type"],[139,16,98,12,"type"],[139,20,98,16],[139,22,98,18],[139,32,97,28],[140,0,99,12,"property"],[140,16,99,12,"property"],[140,24,99,20],[140,26,99,22,"key"],[140,29,97,28],[141,0,100,12,"nodeTag"],[141,16,100,12,"nodeTag"],[141,23,100,19],[141,25,100,21,"value"],[141,30,100,26],[141,31,100,27,"__getNativeTag"],[141,45,100,21],[142,0,97,28],[142,15,97,10],[143,0,102,9],[143,13,96,8],[143,19,102,15],[144,0,103,10,"transConfigs"],[144,14,103,10,"transConfigs"],[144,26,103,22],[144,27,103,23,"push"],[144,31,103,10],[144,32,103,28],[145,0,104,12,"type"],[145,16,104,12,"type"],[145,20,104,16],[145,22,104,18],[145,30,103,28],[146,0,105,12,"property"],[146,16,105,12,"property"],[146,24,105,20],[146,26,105,22,"key"],[146,29,103,28],[147,0,106,12,"value"],[147,16,106,12,"value"],[147,21,106,17],[147,23,106,12,"value"],[148,0,103,28],[148,15,103,10],[149,0,108,9],[150,0,109,7],[151,0,110,5],[151,9,93,4],[153,0,112,4,"NativeAnimatedHelper"],[153,8,112,4,"NativeAnimatedHelper"],[153,28,112,24],[153,29,112,25,"validateTransform"],[153,46,112,4],[153,47,112,43,"transConfigs"],[153,59,112,4],[154,0,113,4],[154,15,113,11],[155,0,114,6,"type"],[155,10,114,6,"type"],[155,14,114,10],[155,16,114,12],[155,27,113,11],[156,0,115,6,"transforms"],[156,10,115,6,"transforms"],[156,20,115,16],[156,22,115,18,"transConfigs"],[157,0,113,11],[157,9,113,4],[158,0,117,3],[162,4,16,32,"AnimatedWithChildren"],[162,24],[164,0,120,0,"module"],[164,2,120,0,"module"],[164,8,120,6],[164,9,120,7,"exports"],[164,16,120,0],[164,19,120,17,"AnimatedTransform"],[164,36,120,0]]},"type":"js/module"}]}