{"dependencies":[{"name":"./AnimatedNode","data":{"isAsync":false}},{"name":"../utils","data":{"isAsync":false}},{"name":"fbjs/lib/invariant","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _AnimatedNode2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"./AnimatedNode\"));\n\n  var _utils = _$$_REQUIRE(_dependencyMap[1], \"../utils\");\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"fbjs/lib/invariant\"));\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function reduce(fn) {\n    return function (input) {\n      return input.reduce(function (a, b) {\n        return fn((0, _utils.val)(a), (0, _utils.val)(b));\n      });\n    };\n  }\n\n  function reduceFrom(fn, initialValue) {\n    return function (input) {\n      return input.reduce(function (a, b) {\n        return fn((0, _utils.val)(a), (0, _utils.val)(b));\n      }, initialValue);\n    };\n  }\n\n  function infix(fn) {\n    return function (input) {\n      return fn((0, _utils.val)(input[0]), (0, _utils.val)(input[1]));\n    };\n  }\n\n  function single(fn) {\n    return function (input) {\n      return fn((0, _utils.val)(input[0]));\n    };\n  }\n\n  var OPERATIONS = {\n    add: reduce(function (a, b) {\n      return a + b;\n    }),\n    sub: reduce(function (a, b) {\n      return a - b;\n    }),\n    multiply: reduce(function (a, b) {\n      return a * b;\n    }),\n    divide: reduce(function (a, b) {\n      return a / b;\n    }),\n    pow: reduce(function (a, b) {\n      return Math.pow(a, b);\n    }),\n    modulo: reduce(function (a, b) {\n      return (a % b + b) % b;\n    }),\n    sqrt: single(function (a) {\n      return Math.sqrt(a);\n    }),\n    sin: single(function (a) {\n      return Math.sin(a);\n    }),\n    cos: single(function (a) {\n      return Math.cos(a);\n    }),\n    exp: single(function (a) {\n      return Math.exp(a);\n    }),\n    and: reduceFrom(function (a, b) {\n      return a && b;\n    }, true),\n    or: reduceFrom(function (a, b) {\n      return a || b;\n    }, false),\n    not: single(function (a) {\n      return !a;\n    }),\n    defined: single(function (a) {\n      return a !== null && a !== undefined && !isNaN(a);\n    }),\n    lessThan: infix(function (a, b) {\n      return a < b;\n    }),\n    eq: infix(function (a, b) {\n      return a == b;\n    }),\n    greaterThan: infix(function (a, b) {\n      return a > b;\n    }),\n    lessOrEq: infix(function (a, b) {\n      return a <= b;\n    }),\n    greaterOrEq: infix(function (a, b) {\n      return a >= b;\n    }),\n    neq: infix(function (a, b) {\n      return a != b;\n    })\n  };\n\n  var AnimatedOperator = function (_AnimatedNode) {\n    _inherits(AnimatedOperator, _AnimatedNode);\n\n    function AnimatedOperator(operator, input) {\n      var _this;\n\n      _classCallCheck(this, AnimatedOperator);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedOperator).call(this, {\n        type: 'op',\n        op: operator,\n        input: input.map(function (n) {\n          return n.__nodeID;\n        })\n      }, input));\n      _this._op = operator;\n      _this._input = input;\n      return _this;\n    }\n\n    _createClass(AnimatedOperator, [{\n      key: \"__onEvaluate\",\n      value: function __onEvaluate() {\n        if (!this._operation) {\n          this._operation = OPERATIONS[this._op];\n          (0, _invariant.default)(this._operation, \"Illegal operator '%s'\", this._op);\n        }\n\n        return this._operation(this._input);\n      }\n    }]);\n\n    return AnimatedOperator;\n  }(_AnimatedNode2.default);\n\n  exports.default = AnimatedOperator;\n});","map":[[7,0,1,0],[9,0,2,0],[11,0,4,0],[31,0,6,0],[31,11,6,9,"reduce"],[31,17,6,0],[31,18,6,16,"fn"],[31,20,6,0],[31,22,6,20],[32,0,7,2],[32,11,7,9],[32,21,7,9,"input"],[32,26,7,14],[33,0,7,14],[33,13,7,18,"input"],[33,18,7,23],[33,19,7,24,"reduce"],[33,25,7,18],[33,26,7,31],[33,36,7,32,"a"],[33,37,7,31],[33,39,7,35,"b"],[33,40,7,31],[34,0,7,31],[34,15,7,41,"fn"],[34,17,7,43],[34,18,7,44],[34,34,7,48,"a"],[34,35,7,44],[34,36,7,43],[34,38,7,52],[34,54,7,56,"b"],[34,55,7,52],[34,56,7,43],[34,57,7,31],[35,0,7,31],[35,7,7,18],[35,8,7,14],[36,0,7,14],[36,5,7,2],[37,0,8,1],[39,0,10,0],[39,11,10,9,"reduceFrom"],[39,21,10,0],[39,22,10,20,"fn"],[39,24,10,0],[39,26,10,24,"initialValue"],[39,38,10,0],[39,40,10,38],[40,0,11,2],[40,11,11,9],[40,21,11,9,"input"],[40,26,11,14],[41,0,11,14],[41,13,11,18,"input"],[41,18,11,23],[41,19,11,24,"reduce"],[41,25,11,18],[41,26,11,31],[41,36,11,32,"a"],[41,37,11,31],[41,39,11,35,"b"],[41,40,11,31],[42,0,11,31],[42,15,11,41,"fn"],[42,17,11,43],[42,18,11,44],[42,34,11,48,"a"],[42,35,11,44],[42,36,11,43],[42,38,11,52],[42,54,11,56,"b"],[42,55,11,52],[42,56,11,43],[42,57,11,31],[43,0,11,31],[43,7,11,18],[43,9,11,61,"initialValue"],[43,21,11,18],[43,22,11,14],[44,0,11,14],[44,5,11,2],[45,0,12,1],[47,0,14,0],[47,11,14,9,"infix"],[47,16,14,0],[47,17,14,15,"fn"],[47,19,14,0],[47,21,14,19],[48,0,15,2],[48,11,15,9],[48,21,15,9,"input"],[48,26,15,14],[49,0,15,14],[49,13,15,18,"fn"],[49,15,15,20],[49,16,15,21],[49,32,15,25,"input"],[49,37,15,30],[49,38,15,31],[49,39,15,30],[49,40,15,21],[49,41,15,20],[49,43,15,36],[49,59,15,40,"input"],[49,64,15,45],[49,65,15,46],[49,66,15,45],[49,67,15,36],[49,68,15,20],[49,69,15,14],[50,0,15,14],[50,5,15,2],[51,0,16,1],[53,0,18,0],[53,11,18,9,"single"],[53,17,18,0],[53,18,18,16,"fn"],[53,20,18,0],[53,22,18,20],[54,0,19,2],[54,11,19,9],[54,21,19,9,"input"],[54,26,19,14],[55,0,19,14],[55,13,19,18,"fn"],[55,15,19,20],[55,16,19,21],[55,32,19,25,"input"],[55,37,19,30],[55,38,19,31],[55,39,19,30],[55,40,19,21],[55,41,19,20],[55,42,19,14],[56,0,19,14],[56,5,19,2],[57,0,20,1],[59,0,22,0],[59,6,22,6,"OPERATIONS"],[59,16,22,16],[59,19,22,19],[60,0,24,2,"add"],[60,4,24,2,"add"],[60,7,24,5],[60,9,24,7,"reduce"],[60,15,24,13],[60,16,24,14],[60,26,24,15,"a"],[60,27,24,14],[60,29,24,18,"b"],[60,30,24,14],[61,0,24,14],[61,13,24,24,"a"],[61,14,24,25],[61,17,24,28,"b"],[61,18,24,14],[62,0,24,14],[62,5,24,13],[62,6,22,19],[63,0,25,2,"sub"],[63,4,25,2,"sub"],[63,7,25,5],[63,9,25,7,"reduce"],[63,15,25,13],[63,16,25,14],[63,26,25,15,"a"],[63,27,25,14],[63,29,25,18,"b"],[63,30,25,14],[64,0,25,14],[64,13,25,24,"a"],[64,14,25,25],[64,17,25,28,"b"],[64,18,25,14],[65,0,25,14],[65,5,25,13],[65,6,22,19],[66,0,26,2,"multiply"],[66,4,26,2,"multiply"],[66,12,26,10],[66,14,26,12,"reduce"],[66,20,26,18],[66,21,26,19],[66,31,26,20,"a"],[66,32,26,19],[66,34,26,23,"b"],[66,35,26,19],[67,0,26,19],[67,13,26,29,"a"],[67,14,26,30],[67,17,26,33,"b"],[67,18,26,19],[68,0,26,19],[68,5,26,18],[68,6,22,19],[69,0,27,2,"divide"],[69,4,27,2,"divide"],[69,10,27,8],[69,12,27,10,"reduce"],[69,18,27,16],[69,19,27,17],[69,29,27,18,"a"],[69,30,27,17],[69,32,27,21,"b"],[69,33,27,17],[70,0,27,17],[70,13,27,27,"a"],[70,14,27,28],[70,17,27,31,"b"],[70,18,27,17],[71,0,27,17],[71,5,27,16],[71,6,22,19],[72,0,28,2,"pow"],[72,4,28,2,"pow"],[72,7,28,5],[72,9,28,7,"reduce"],[72,15,28,13],[72,16,28,14],[72,26,28,15,"a"],[72,27,28,14],[72,29,28,18,"b"],[72,30,28,14],[73,0,28,14],[73,13,28,24,"Math"],[73,17,28,28],[73,18,28,29,"pow"],[73,21,28,24],[73,22,28,33,"a"],[73,23,28,24],[73,25,28,36,"b"],[73,26,28,24],[73,27,28,14],[74,0,28,14],[74,5,28,13],[74,6,22,19],[75,0,29,2,"modulo"],[75,4,29,2,"modulo"],[75,10,29,8],[75,12,29,10,"reduce"],[75,18,29,16],[75,19,29,17],[75,29,29,18,"a"],[75,30,29,17],[75,32,29,21,"b"],[75,33,29,17],[76,0,29,17],[76,13,29,27],[76,14,29,29,"a"],[76,15,29,30],[76,18,29,33,"b"],[76,19,29,28],[76,22,29,38,"b"],[76,23,29,27],[76,27,29,43,"b"],[76,28,29,17],[77,0,29,17],[77,5,29,16],[77,6,22,19],[78,0,30,2,"sqrt"],[78,4,30,2,"sqrt"],[78,8,30,6],[78,10,30,8,"single"],[78,16,30,14],[78,17,30,15],[78,27,30,15,"a"],[78,28,30,16],[79,0,30,16],[79,13,30,20,"Math"],[79,17,30,24],[79,18,30,25,"sqrt"],[79,22,30,20],[79,23,30,30,"a"],[79,24,30,20],[79,25,30,16],[80,0,30,16],[80,5,30,14],[80,6,22,19],[81,0,31,2,"sin"],[81,4,31,2,"sin"],[81,7,31,5],[81,9,31,7,"single"],[81,15,31,13],[81,16,31,14],[81,26,31,14,"a"],[81,27,31,15],[82,0,31,15],[82,13,31,19,"Math"],[82,17,31,23],[82,18,31,24,"sin"],[82,21,31,19],[82,22,31,28,"a"],[82,23,31,19],[82,24,31,15],[83,0,31,15],[83,5,31,13],[83,6,22,19],[84,0,32,2,"cos"],[84,4,32,2,"cos"],[84,7,32,5],[84,9,32,7,"single"],[84,15,32,13],[84,16,32,14],[84,26,32,14,"a"],[84,27,32,15],[85,0,32,15],[85,13,32,19,"Math"],[85,17,32,23],[85,18,32,24,"cos"],[85,21,32,19],[85,22,32,28,"a"],[85,23,32,19],[85,24,32,15],[86,0,32,15],[86,5,32,13],[86,6,22,19],[87,0,33,2,"exp"],[87,4,33,2,"exp"],[87,7,33,5],[87,9,33,7,"single"],[87,15,33,13],[87,16,33,14],[87,26,33,14,"a"],[87,27,33,15],[88,0,33,15],[88,13,33,19,"Math"],[88,17,33,23],[88,18,33,24,"exp"],[88,21,33,19],[88,22,33,28,"a"],[88,23,33,19],[88,24,33,15],[89,0,33,15],[89,5,33,13],[89,6,22,19],[90,0,36,2,"and"],[90,4,36,2,"and"],[90,7,36,5],[90,9,36,7,"reduceFrom"],[90,19,36,17],[90,20,36,18],[90,30,36,19,"a"],[90,31,36,18],[90,33,36,22,"b"],[90,34,36,18],[91,0,36,18],[91,13,36,28,"a"],[91,14,36,29],[91,18,36,33,"b"],[91,19,36,18],[92,0,36,18],[92,5,36,17],[92,7,36,36],[92,11,36,17],[92,12,22,19],[93,0,37,2,"or"],[93,4,37,2,"or"],[93,6,37,4],[93,8,37,6,"reduceFrom"],[93,18,37,16],[93,19,37,17],[93,29,37,18,"a"],[93,30,37,17],[93,32,37,21,"b"],[93,33,37,17],[94,0,37,17],[94,13,37,27,"a"],[94,14,37,28],[94,18,37,32,"b"],[94,19,37,17],[95,0,37,17],[95,5,37,16],[95,7,37,35],[95,12,37,16],[95,13,22,19],[96,0,38,2,"not"],[96,4,38,2,"not"],[96,7,38,5],[96,9,38,7,"single"],[96,15,38,13],[96,16,38,14],[96,26,38,14,"a"],[96,27,38,15],[97,0,38,15],[97,13,38,19],[97,14,38,20,"a"],[97,15,38,15],[98,0,38,15],[98,5,38,13],[98,6,22,19],[99,0,39,2,"defined"],[99,4,39,2,"defined"],[99,11,39,9],[99,13,39,11,"single"],[99,19,39,17],[99,20,39,18],[99,30,39,18,"a"],[99,31,39,19],[100,0,39,19],[100,13,39,23,"a"],[100,14,39,24],[100,19,39,29],[100,23,39,23],[100,27,39,37,"a"],[100,28,39,38],[100,33,39,43,"undefined"],[100,42,39,23],[100,46,39,56],[100,47,39,57,"isNaN"],[100,52,39,62],[100,53,39,63,"a"],[100,54,39,62],[100,55,39,19],[101,0,39,19],[101,5,39,17],[101,6,22,19],[102,0,42,2,"lessThan"],[102,4,42,2,"lessThan"],[102,12,42,10],[102,14,42,12,"infix"],[102,19,42,17],[102,20,42,18],[102,30,42,19,"a"],[102,31,42,18],[102,33,42,22,"b"],[102,34,42,18],[103,0,42,18],[103,13,42,28,"a"],[103,14,42,29],[103,17,42,32,"b"],[103,18,42,18],[104,0,42,18],[104,5,42,17],[104,6,22,19],[105,0,44,2,"eq"],[105,4,44,2,"eq"],[105,6,44,4],[105,8,44,6,"infix"],[105,13,44,11],[105,14,44,12],[105,24,44,13,"a"],[105,25,44,12],[105,27,44,16,"b"],[105,28,44,12],[106,0,44,12],[106,13,44,22,"a"],[106,14,44,23],[106,18,44,27,"b"],[106,19,44,12],[107,0,44,12],[107,5,44,11],[107,6,22,19],[108,0,45,2,"greaterThan"],[108,4,45,2,"greaterThan"],[108,15,45,13],[108,17,45,15,"infix"],[108,22,45,20],[108,23,45,21],[108,33,45,22,"a"],[108,34,45,21],[108,36,45,25,"b"],[108,37,45,21],[109,0,45,21],[109,13,45,31,"a"],[109,14,45,32],[109,17,45,35,"b"],[109,18,45,21],[110,0,45,21],[110,5,45,20],[110,6,22,19],[111,0,46,2,"lessOrEq"],[111,4,46,2,"lessOrEq"],[111,12,46,10],[111,14,46,12,"infix"],[111,19,46,17],[111,20,46,18],[111,30,46,19,"a"],[111,31,46,18],[111,33,46,22,"b"],[111,34,46,18],[112,0,46,18],[112,13,46,28,"a"],[112,14,46,29],[112,18,46,33,"b"],[112,19,46,18],[113,0,46,18],[113,5,46,17],[113,6,22,19],[114,0,47,2,"greaterOrEq"],[114,4,47,2,"greaterOrEq"],[114,15,47,13],[114,17,47,15,"infix"],[114,22,47,20],[114,23,47,21],[114,33,47,22,"a"],[114,34,47,21],[114,36,47,25,"b"],[114,37,47,21],[115,0,47,21],[115,13,47,31,"a"],[115,14,47,32],[115,18,47,36,"b"],[115,19,47,21],[116,0,47,21],[116,5,47,20],[116,6,22,19],[117,0,49,2,"neq"],[117,4,49,2,"neq"],[117,7,49,5],[117,9,49,7,"infix"],[117,14,49,12],[117,15,49,13],[117,25,49,14,"a"],[117,26,49,13],[117,28,49,17,"b"],[117,29,49,13],[118,0,49,13],[118,13,49,23,"a"],[118,14,49,24],[118,18,49,28,"b"],[118,19,49,13],[119,0,49,13],[119,5,49,12],[120,0,22,19],[120,3,22,0],[122,6,52,21,"AnimatedOperator"],[122,22],[125,0,57,2],[125,30,57,14,"operator"],[125,38,57,2],[125,40,57,24,"input"],[125,45,57,2],[125,47,57,31],[126,0,57,31],[128,0,57,31],[130,0,58,4],[130,92,59,6],[131,0,59,8,"type"],[131,8,59,8,"type"],[131,12,59,12],[131,14,59,14],[131,18,59,6],[132,0,59,20,"op"],[132,8,59,20,"op"],[132,10,59,22],[132,12,59,24,"operator"],[132,20,59,6],[133,0,59,34,"input"],[133,8,59,34,"input"],[133,13,59,39],[133,15,59,41,"input"],[133,20,59,46],[133,21,59,47,"map"],[133,24,59,41],[133,25,59,51],[133,35,59,51,"n"],[133,36,59,52],[134,0,59,52],[134,17,59,56,"n"],[134,18,59,57],[134,19,59,58,"__nodeID"],[134,27,59,52],[135,0,59,52],[135,9,59,41],[136,0,59,6],[136,7,58,4],[136,9,60,6,"input"],[136,14,58,4],[137,0,62,4],[137,12,62,9,"_op"],[137,15,62,4],[137,18,62,15,"operator"],[137,26,62,4],[138,0,63,4],[138,12,63,9,"_input"],[138,18,63,4],[138,21,63,18,"input"],[138,26,63,4],[139,0,57,31],[140,0,64,3],[144,37,66,17],[145,0,67,4],[145,12,67,8],[145,13,67,9],[145,18,67,14,"_operation"],[145,28,67,4],[145,30,67,26],[146,0,68,6],[146,15,68,11,"_operation"],[146,25,68,6],[146,28,68,24,"OPERATIONS"],[146,38,68,34],[146,39,68,35],[146,44,68,40,"_op"],[146,47,68,34],[146,48,68,6],[147,0,69,6],[147,34,69,16],[147,39,69,21,"_operation"],[147,49,69,6],[147,76,69,58],[147,81,69,63,"_op"],[147,84,69,6],[148,0,70,5],[150,0,71,4],[150,15,71,11],[150,20,71,16,"_operation"],[150,30,71,11],[150,31,71,27],[150,36,71,32,"_input"],[150,42,71,11],[150,43,71,4],[151,0,72,3],[155,4,52,46,"AnimatedNode"],[155,26]]},"type":"js/module"}]}