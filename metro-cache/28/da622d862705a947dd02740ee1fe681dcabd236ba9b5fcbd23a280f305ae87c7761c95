{"dependencies":[{"name":"react","data":{"isAsync":false}},{"name":"./../../../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"react-native-tab-view","data":{"isAsync":false}},{"name":"./CrossFadeIcon","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../../../react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n\n  var _reactNativeTabView = _$$_REQUIRE(_dependencyMap[3], \"react-native-tab-view\");\n\n  var _CrossFadeIcon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./CrossFadeIcon\"));\n\n  var _class,\n      _temp,\n      _jsxFileName = \"/home/alex/Documentos/CursoReactNative/node_modules/react-navigation-tabs/src/views/MaterialTopTabBar.js\";\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\n  function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\n  function _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\n  function _iterableToArray(iter) { if ((typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\") in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\n  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  var _components = {\n    TabBarTop: {\n      displayName: \"TabBarTop\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/alex/Documentos/CursoReactNative/node_modules/react-navigation-tabs/src/views/MaterialTopTabBar.js\",\n    components: _components,\n    locals: [module],\n    imports: [React.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var TabBarTop = _wrapComponent(\"TabBarTop\")((_temp = _class = function (_React$PureComponent) {\n    _inherits(TabBarTop, _React$PureComponent);\n\n    function TabBarTop() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      _classCallCheck(this, TabBarTop);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TabBarTop)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n      _this._renderLabel = function (_ref) {\n        var route = _ref.route;\n        var _this$props = _this.props,\n            position = _this$props.position,\n            navigation = _this$props.navigation,\n            activeTintColor = _this$props.activeTintColor,\n            inactiveTintColor = _this$props.inactiveTintColor,\n            showLabel = _this$props.showLabel,\n            upperCaseLabel = _this$props.upperCaseLabel,\n            labelStyle = _this$props.labelStyle,\n            allowFontScaling = _this$props.allowFontScaling;\n\n        if (showLabel === false) {\n          return null;\n        }\n\n        var routes = navigation.state.routes;\n        var index = routes.indexOf(route);\n        var focused = index === navigation.state.index;\n        var inputRange = [-1].concat(_toConsumableArray(routes.map(function (x, i) {\n          return i;\n        })));\n        var outputRange = inputRange.map(function (inputIndex) {\n          return inputIndex === index ? activeTintColor : inactiveTintColor;\n        });\n        var color = position.interpolate({\n          inputRange: inputRange,\n          outputRange: outputRange\n        });\n        var tintColor = focused ? activeTintColor : inactiveTintColor;\n\n        var label = _this.props.getLabelText({\n          route: route\n        });\n\n        if (typeof label === 'string') {\n          return React.createElement(_reactNative.Animated.Text, {\n            style: [styles.label, {\n              color: color\n            }, labelStyle],\n            allowFontScaling: allowFontScaling,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            }\n          }, upperCaseLabel ? label.toUpperCase() : label);\n        }\n\n        if (typeof label === 'function') {\n          return label({\n            focused: focused,\n            tintColor: tintColor\n          });\n        }\n\n        return label;\n      };\n\n      _this._renderIcon = function (_ref2) {\n        var route = _ref2.route;\n        var _this$props2 = _this.props,\n            position = _this$props2.position,\n            navigation = _this$props2.navigation,\n            activeTintColor = _this$props2.activeTintColor,\n            inactiveTintColor = _this$props2.inactiveTintColor,\n            renderIcon = _this$props2.renderIcon,\n            showIcon = _this$props2.showIcon,\n            iconStyle = _this$props2.iconStyle;\n\n        if (showIcon === false) {\n          return null;\n        }\n\n        var index = navigation.state.routes.indexOf(route);\n        var inputRange = [-1].concat(_toConsumableArray(navigation.state.routes.map(function (x, i) {\n          return i;\n        })));\n        var activeOpacity = position.interpolate({\n          inputRange: inputRange,\n          outputRange: inputRange.map(function (i) {\n            return i === index ? 1 : 0;\n          })\n        });\n        var inactiveOpacity = position.interpolate({\n          inputRange: inputRange,\n          outputRange: inputRange.map(function (i) {\n            return i === index ? 0 : 1;\n          })\n        });\n        return React.createElement(_CrossFadeIcon.default, {\n          route: route,\n          navigation: navigation,\n          activeOpacity: activeOpacity,\n          inactiveOpacity: inactiveOpacity,\n          activeTintColor: activeTintColor,\n          inactiveTintColor: inactiveTintColor,\n          renderIcon: renderIcon,\n          style: [styles.icon, iconStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          }\n        });\n      };\n\n      return _this;\n    }\n\n    _createClass(TabBarTop, [{\n      key: \"render\",\n      value: function render() {\n        var _this$props3 = this.props,\n            navigation = _this$props3.navigation,\n            renderIcon = _this$props3.renderIcon,\n            getLabelText = _this$props3.getLabelText,\n            rest = _objectWithoutProperties(_this$props3, [\"navigation\", \"renderIcon\", \"getLabelText\"]);\n\n        return React.createElement(_reactNativeTabView.TabBar, _extends({}, rest, {\n          navigationState: navigation.state,\n          renderIcon: this._renderIcon,\n          renderLabel: this._renderLabel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          }\n        }));\n      }\n    }]);\n\n    return TabBarTop;\n  }(React.PureComponent), _class.defaultProps = {\n    activeTintColor: '#fff',\n    inactiveTintColor: '#fff',\n    showIcon: false,\n    showLabel: true,\n    upperCaseLabel: true,\n    allowFontScaling: true\n  }, _temp));\n\n  var _default2 = TabBarTop;\n  exports.default = _default2;\n\n  var styles = _reactNative.StyleSheet.create({\n    icon: {\n      height: 24,\n      width: 24\n    },\n    label: {\n      textAlign: 'center',\n      fontSize: 13,\n      margin: 8,\n      backgroundColor: 'transparent'\n    }\n  });\n});","map":[[7,0,3,0],[11,0,4,0],[13,0,5,0],[15,0,6,0],[90,12,47,2,"_renderLabel"],[90,24],[90,27,47,17],[90,43,47,32],[91,0,47,32],[91,12,47,20,"route"],[91,17,47,32],[91,25,47,20,"route"],[91,30,47,32],[92,0,47,32],[92,26,57,8],[92,32,57,13,"props"],[92,37,47,32],[93,0,47,32],[93,12,49,6,"position"],[93,20,47,32],[93,35,49,6,"position"],[93,43,47,32],[94,0,47,32],[94,12,50,6,"navigation"],[94,22,47,32],[94,37,50,6,"navigation"],[94,47,47,32],[95,0,47,32],[95,12,51,6,"activeTintColor"],[95,27,47,32],[95,42,51,6,"activeTintColor"],[95,57,47,32],[96,0,47,32],[96,12,52,6,"inactiveTintColor"],[96,29,47,32],[96,44,52,6,"inactiveTintColor"],[96,61,47,32],[97,0,47,32],[97,12,53,6,"showLabel"],[97,21,47,32],[97,36,53,6,"showLabel"],[97,45,47,32],[98,0,47,32],[98,12,54,6,"upperCaseLabel"],[98,26,47,32],[98,41,54,6,"upperCaseLabel"],[98,55,47,32],[99,0,47,32],[99,12,55,6,"labelStyle"],[99,22,47,32],[99,37,55,6,"labelStyle"],[99,47,47,32],[100,0,47,32],[100,12,56,6,"allowFontScaling"],[100,28,47,32],[100,43,56,6,"allowFontScaling"],[100,59,47,32],[102,0,59,4],[102,12,59,8,"showLabel"],[102,21,59,17],[102,26,59,22],[102,31,59,4],[102,33,59,29],[103,0,60,6],[103,17,60,13],[103,21,60,6],[104,0,61,5],[106,0,47,32],[106,12,63,12,"routes"],[106,18,47,32],[106,21,63,23,"navigation"],[106,31,63,33],[106,32,63,34,"state"],[106,37,47,32],[106,38,63,12,"routes"],[106,44,47,32],[107,0,64,4],[107,12,64,10,"index"],[107,17,64,15],[107,20,64,18,"routes"],[107,26,64,24],[107,27,64,25,"indexOf"],[107,34,64,18],[107,35,64,33,"route"],[107,40,64,18],[107,41,64,4],[108,0,65,4],[108,12,65,10,"focused"],[108,19,65,17],[108,22,65,20,"index"],[108,27,65,25],[108,32,65,30,"navigation"],[108,42,65,40],[108,43,65,41,"state"],[108,48,65,30],[108,49,65,47,"index"],[108,54,65,4],[109,0,68,4],[109,12,68,10,"inputRange"],[109,22,68,20],[109,26,68,24],[109,27,68,25],[109,28,68,20],[109,56,68,31,"routes"],[109,62,68,37],[109,63,68,38,"map"],[109,66,68,31],[109,67,68,42],[109,77,68,43,"x"],[109,78,68,42],[109,80,68,46,"i"],[109,81,68,42],[110,0,68,42],[110,17,68,52,"i"],[110,18,68,42],[111,0,68,42],[111,9,68,31],[111,10,68,20],[111,12,68,4],[112,0,69,4],[112,12,69,10,"outputRange"],[112,23,69,21],[112,26,69,24,"inputRange"],[112,36,69,34],[112,37,69,35,"map"],[112,40,69,24],[112,41,70,6],[112,51,70,6,"inputIndex"],[112,61,70,16],[113,0,70,16],[113,17,70,21,"inputIndex"],[113,27,70,31],[113,32,70,36,"index"],[113,37,70,21],[113,40,70,44,"activeTintColor"],[113,55,70,21],[113,58,70,62,"inactiveTintColor"],[113,75,70,16],[114,0,70,16],[114,9,69,24],[114,10,69,4],[115,0,72,4],[115,12,72,10,"color"],[115,17,72,15],[115,20,72,18,"position"],[115,28,72,26],[115,29,72,27,"interpolate"],[115,40,72,18],[115,41,72,39],[116,0,73,6,"inputRange"],[116,10,73,6,"inputRange"],[116,20,73,16],[116,22,73,6,"inputRange"],[116,32,72,39],[117,0,74,6,"outputRange"],[117,10,74,6,"outputRange"],[117,21,74,17],[117,23,74,19,"outputRange"],[118,0,72,39],[118,9,72,18],[118,10,72,4],[119,0,77,4],[119,12,77,10,"tintColor"],[119,21,77,19],[119,24,77,22,"focused"],[119,31,77,29],[119,34,77,32,"activeTintColor"],[119,49,77,29],[119,52,77,50,"inactiveTintColor"],[119,69,77,4],[121,0,78,4],[121,12,78,10,"label"],[121,17,78,15],[121,20,78,18],[121,26,78,23,"props"],[121,31,78,18],[121,32,78,29,"getLabelText"],[121,44,78,18],[121,45,78,42],[122,0,78,44,"route"],[122,10,78,44,"route"],[122,15,78,49],[122,17,78,44,"route"],[123,0,78,42],[123,9,78,18],[123,10,78,4],[125,0,80,4],[125,12,80,8],[125,19,80,15,"label"],[125,24,80,8],[125,29,80,25],[125,37,80,4],[125,39,80,35],[126,0,81,6],[126,17,82,8],[126,37,82,9],[126,58,82,8],[126,59,82,18],[126,63,82,8],[127,0,83,10],[127,12,83,10],[127,17,83,15],[127,19,83,17],[127,20,83,18,"styles"],[127,26,83,24],[127,27,83,25,"label"],[127,32,83,17],[127,34,83,32],[128,0,83,34,"color"],[128,14,83,34,"color"],[128,19,83,39],[128,21,83,34,"color"],[129,0,83,32],[129,13,83,17],[129,15,83,43,"labelStyle"],[129,25,83,17],[129,26,82,8],[130,0,84,10],[130,12,84,10],[130,28,84,26],[130,30,84,28,"allowFontScaling"],[130,46,82,8],[131,0,82,8],[132,0,82,8],[133,0,82,8],[134,0,82,8],[135,0,82,8],[135,13,86,11,"upperCaseLabel"],[135,27,86,25],[135,30,86,28,"label"],[135,35,86,33],[135,36,86,34,"toUpperCase"],[135,47,86,28],[135,49,86,25],[135,52,86,50,"label"],[135,57,82,8],[135,58,81,6],[136,0,89,5],[138,0,90,4],[138,12,90,8],[138,19,90,15,"label"],[138,24,90,8],[138,29,90,25],[138,39,90,4],[138,41,90,37],[139,0,91,6],[139,17,91,13,"label"],[139,22,91,18],[139,23,91,19],[140,0,91,21,"focused"],[140,12,91,21,"focused"],[140,19,91,28],[140,21,91,21,"focused"],[140,28,91,19],[141,0,91,30,"tintColor"],[141,12,91,30,"tintColor"],[141,21,91,39],[141,23,91,30,"tintColor"],[142,0,91,19],[142,11,91,18],[142,12,91,6],[143,0,92,5],[145,0,94,4],[145,15,94,11,"label"],[145,20,94,4],[146,0,95,3],[146,7],[148,12,97,2,"_renderIcon"],[148,23],[148,26,97,16],[148,43,97,31],[149,0,97,31],[149,12,97,19,"route"],[149,17,97,31],[149,26,97,19,"route"],[149,31,97,31],[150,0,97,31],[150,27,106,8],[150,33,106,13,"props"],[150,38,97,31],[151,0,97,31],[151,12,99,6,"position"],[151,20,97,31],[151,36,99,6,"position"],[151,44,97,31],[152,0,97,31],[152,12,100,6,"navigation"],[152,22,97,31],[152,38,100,6,"navigation"],[152,48,97,31],[153,0,97,31],[153,12,101,6,"activeTintColor"],[153,27,97,31],[153,43,101,6,"activeTintColor"],[153,58,97,31],[154,0,97,31],[154,12,102,6,"inactiveTintColor"],[154,29,97,31],[154,45,102,6,"inactiveTintColor"],[154,62,97,31],[155,0,97,31],[155,12,103,6,"renderIcon"],[155,22,97,31],[155,38,103,6,"renderIcon"],[155,48,97,31],[156,0,97,31],[156,12,104,6,"showIcon"],[156,20,97,31],[156,36,104,6,"showIcon"],[156,44,97,31],[157,0,97,31],[157,12,105,6,"iconStyle"],[157,21,97,31],[157,37,105,6,"iconStyle"],[157,46,97,31],[159,0,108,4],[159,12,108,8,"showIcon"],[159,20,108,16],[159,25,108,21],[159,30,108,4],[159,32,108,28],[160,0,109,6],[160,17,109,13],[160,21,109,6],[161,0,110,5],[163,0,112,4],[163,12,112,10,"index"],[163,17,112,15],[163,20,112,18,"navigation"],[163,30,112,28],[163,31,112,29,"state"],[163,36,112,18],[163,37,112,35,"routes"],[163,43,112,18],[163,44,112,42,"indexOf"],[163,51,112,18],[163,52,112,50,"route"],[163,57,112,18],[163,58,112,4],[164,0,115,4],[164,12,115,10,"inputRange"],[164,22,115,20],[164,26,115,24],[164,27,115,25],[164,28,115,20],[164,56,115,31,"navigation"],[164,66,115,41],[164,67,115,42,"state"],[164,72,115,31],[164,73,115,48,"routes"],[164,79,115,31],[164,80,115,55,"map"],[164,83,115,31],[164,84,115,59],[164,94,115,60,"x"],[164,95,115,59],[164,97,115,63,"i"],[164,98,115,59],[165,0,115,59],[165,17,115,69,"i"],[165,18,115,59],[166,0,115,59],[166,9,115,31],[166,10,115,20],[166,12,115,4],[167,0,116,4],[167,12,116,10,"activeOpacity"],[167,25,116,23],[167,28,116,26,"position"],[167,36,116,34],[167,37,116,35,"interpolate"],[167,48,116,26],[167,49,116,47],[168,0,117,6,"inputRange"],[168,10,117,6,"inputRange"],[168,20,117,16],[168,22,117,6,"inputRange"],[168,32,116,47],[169,0,118,6,"outputRange"],[169,10,118,6,"outputRange"],[169,21,118,17],[169,23,118,19,"inputRange"],[169,33,118,29],[169,34,118,30,"map"],[169,37,118,19],[169,38,118,34],[169,48,118,34,"i"],[169,49,118,35],[170,0,118,35],[170,19,118,40,"i"],[170,20,118,41],[170,25,118,46,"index"],[170,30,118,40],[170,33,118,54],[170,34,118,40],[170,37,118,58],[170,38,118,35],[171,0,118,35],[171,11,118,19],[172,0,116,47],[172,9,116,26],[172,10,116,4],[173,0,120,4],[173,12,120,10,"inactiveOpacity"],[173,27,120,25],[173,30,120,28,"position"],[173,38,120,36],[173,39,120,37,"interpolate"],[173,50,120,28],[173,51,120,49],[174,0,121,6,"inputRange"],[174,10,121,6,"inputRange"],[174,20,121,16],[174,22,121,6,"inputRange"],[174,32,120,49],[175,0,122,6,"outputRange"],[175,10,122,6,"outputRange"],[175,21,122,17],[175,23,122,19,"inputRange"],[175,33,122,29],[175,34,122,30,"map"],[175,37,122,19],[175,38,122,34],[175,48,122,34,"i"],[175,49,122,35],[176,0,122,35],[176,19,122,40,"i"],[176,20,122,41],[176,25,122,46,"index"],[176,30,122,40],[176,33,122,54],[176,34,122,40],[176,37,122,58],[176,38,122,35],[177,0,122,35],[177,11,122,19],[178,0,120,49],[178,9,120,28],[178,10,120,4],[179,0,125,4],[179,15,126,6],[179,35,126,7],[179,57,126,6],[180,0,127,8],[180,10,127,8],[180,15,127,13],[180,17,127,15,"route"],[180,22,126,6],[181,0,128,8],[181,10,128,8],[181,20,128,18],[181,22,128,20,"navigation"],[181,32,126,6],[182,0,129,8],[182,10,129,8],[182,23,129,21],[182,25,129,23,"activeOpacity"],[182,38,126,6],[183,0,130,8],[183,10,130,8],[183,25,130,23],[183,27,130,25,"inactiveOpacity"],[183,42,126,6],[184,0,131,8],[184,10,131,8],[184,25,131,23],[184,27,131,25,"activeTintColor"],[184,42,126,6],[185,0,132,8],[185,10,132,8],[185,27,132,25],[185,29,132,27,"inactiveTintColor"],[185,46,126,6],[186,0,133,8],[186,10,133,8],[186,20,133,18],[186,22,133,20,"renderIcon"],[186,32,126,6],[187,0,134,8],[187,10,134,8],[187,15,134,13],[187,17,134,15],[187,18,134,16,"styles"],[187,24,134,22],[187,25,134,23,"icon"],[187,29,134,15],[187,31,134,29,"iconStyle"],[187,40,134,15],[187,41,126,6],[188,0,126,6],[189,0,126,6],[190,0,126,6],[191,0,126,6],[192,0,126,6],[192,10,125,4],[193,0,137,3],[193,7],[200,31,139,11],[201,0,139,11],[201,27,141,62],[201,32,141,67,"props"],[201,37,139,11],[202,0,139,11],[202,12,141,12,"navigation"],[202,22,139,11],[202,38,141,12,"navigation"],[202,48,139,11],[203,0,139,11],[203,12,141,24,"renderIcon"],[203,22,139,11],[203,38,141,24,"renderIcon"],[203,48,139,11],[204,0,139,11],[204,12,141,36,"getLabelText"],[204,24,139,11],[204,40,141,36,"getLabelText"],[204,52,139,11],[205,0,139,11],[205,12,141,53,"rest"],[205,16,139,11],[207,0,143,4],[207,15,145,6],[207,35,145,7],[207,61,145,6],[207,76,146,12,"rest"],[207,80,145,6],[208,0,147,8],[208,10,147,8],[208,25,147,23],[208,27,147,25,"navigation"],[208,37,147,35],[208,38,147,36,"state"],[208,43,145,6],[209,0,148,8],[209,10,148,8],[209,20,148,18],[209,22,148,20],[209,27,148,25,"_renderIcon"],[209,38,145,6],[210,0,149,8],[210,10,149,8],[210,21,149,19],[210,23,149,21],[210,28,149,26,"_renderLabel"],[210,40,145,6],[211,0,145,6],[212,0,145,6],[213,0,145,6],[214,0,145,6],[215,0,145,6],[215,11,143,4],[216,0,152,3],[220,4,37,39,"React"],[220,9,37,44],[220,10,37,45,"PureComponent"],[220,23],[220,33,38,9,"defaultProps"],[220,45],[220,48,38,24],[221,0,39,4,"activeTintColor"],[221,4,39,4,"activeTintColor"],[221,19,39,19],[221,21,39,21],[221,27,38,24],[222,0,40,4,"inactiveTintColor"],[222,4,40,4,"inactiveTintColor"],[222,21,40,21],[222,23,40,23],[222,29,38,24],[223,0,41,4,"showIcon"],[223,4,41,4,"showIcon"],[223,12,41,12],[223,14,41,14],[223,19,38,24],[224,0,42,4,"showLabel"],[224,4,42,4,"showLabel"],[224,13,42,13],[224,15,42,15],[224,19,38,24],[225,0,43,4,"upperCaseLabel"],[225,4,43,4,"upperCaseLabel"],[225,18,43,18],[225,20,43,20],[225,24,38,24],[226,0,44,4,"allowFontScaling"],[226,4,44,4,"allowFontScaling"],[226,20,44,20],[226,22,44,22],[227,0,38,24],[227,3],[232,0,155,0],[232,6,155,6,"styles"],[232,12,155,12],[232,15,155,15,"StyleSheet"],[232,39,155,26,"create"],[232,45,155,15],[232,46,155,33],[233,0,156,2,"icon"],[233,4,156,2,"icon"],[233,8,156,6],[233,10,156,8],[234,0,157,4,"height"],[234,6,157,4,"height"],[234,12,157,10],[234,14,157,12],[234,16,156,8],[235,0,158,4,"width"],[235,6,158,4,"width"],[235,11,158,9],[235,13,158,11],[236,0,156,8],[236,5,155,33],[237,0,160,2,"label"],[237,4,160,2,"label"],[237,9,160,7],[237,11,160,9],[238,0,161,4,"textAlign"],[238,6,161,4,"textAlign"],[238,15,161,13],[238,17,161,15],[238,25,160,9],[239,0,162,4,"fontSize"],[239,6,162,4,"fontSize"],[239,14,162,12],[239,16,162,14],[239,18,160,9],[240,0,163,4,"margin"],[240,6,163,4,"margin"],[240,12,163,10],[240,14,163,12],[240,15,160,9],[241,0,164,4,"backgroundColor"],[241,6,164,4,"backgroundColor"],[241,21,164,19],[241,23,164,21],[242,0,160,9],[243,0,155,33],[243,3,155,15],[243,4,155,0]]},"type":"js/module"}]}