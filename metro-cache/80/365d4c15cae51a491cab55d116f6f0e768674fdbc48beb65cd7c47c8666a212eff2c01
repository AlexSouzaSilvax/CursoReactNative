{"dependencies":[{"name":"react-native","data":{"isAsync":false}},{"name":"./Audio/Recording","data":{"isAsync":false}},{"name":"./Audio/Sound","data":{"isAsync":false}},{"name":"./Audio/AudioAvailability","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var _exportNames = {\n    INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS: true,\n    INTERRUPTION_MODE_IOS_DO_NOT_MIX: true,\n    INTERRUPTION_MODE_IOS_DUCK_OTHERS: true,\n    INTERRUPTION_MODE_ANDROID_DO_NOT_MIX: true,\n    INTERRUPTION_MODE_ANDROID_DUCK_OTHERS: true,\n    setAudioModeAsync: true,\n    setIsEnabledAsync: true\n  };\n  exports.setAudioModeAsync = setAudioModeAsync;\n  Object.defineProperty(exports, \"setIsEnabledAsync\", {\n    enumerable: true,\n    get: function get() {\n      return _AudioAvailability.setIsEnabledAsync;\n    }\n  });\n  exports.INTERRUPTION_MODE_ANDROID_DUCK_OTHERS = exports.INTERRUPTION_MODE_ANDROID_DO_NOT_MIX = exports.INTERRUPTION_MODE_IOS_DUCK_OTHERS = exports.INTERRUPTION_MODE_IOS_DO_NOT_MIX = exports.INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS = void 0;\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[0], \"react-native\");\n\n  var _Recording = _$$_REQUIRE(_dependencyMap[1], \"./Audio/Recording\");\n\n  Object.keys(_Recording).forEach(function (key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    Object.defineProperty(exports, key, {\n      enumerable: true,\n      get: function get() {\n        return _Recording[key];\n      }\n    });\n  });\n\n  var _Sound = _$$_REQUIRE(_dependencyMap[2], \"./Audio/Sound\");\n\n  Object.keys(_Sound).forEach(function (key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    Object.defineProperty(exports, key, {\n      enumerable: true,\n      get: function get() {\n        return _Sound[key];\n      }\n    });\n  });\n\n  var _AudioAvailability = _$$_REQUIRE(_dependencyMap[3], \"./Audio/AudioAvailability\");\n\n  var INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS = 0;\n  exports.INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS = INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS;\n  var INTERRUPTION_MODE_IOS_DO_NOT_MIX = 1;\n  exports.INTERRUPTION_MODE_IOS_DO_NOT_MIX = INTERRUPTION_MODE_IOS_DO_NOT_MIX;\n  var INTERRUPTION_MODE_IOS_DUCK_OTHERS = 2;\n  exports.INTERRUPTION_MODE_IOS_DUCK_OTHERS = INTERRUPTION_MODE_IOS_DUCK_OTHERS;\n  var INTERRUPTION_MODE_ANDROID_DO_NOT_MIX = 1;\n  exports.INTERRUPTION_MODE_ANDROID_DO_NOT_MIX = INTERRUPTION_MODE_ANDROID_DO_NOT_MIX;\n  var INTERRUPTION_MODE_ANDROID_DUCK_OTHERS = 2;\n  exports.INTERRUPTION_MODE_ANDROID_DUCK_OTHERS = INTERRUPTION_MODE_ANDROID_DUCK_OTHERS;\n\n  var _isValueValid = function _isValueValid(value, validValues) {\n    return validValues.filter(function (validValue) {\n      return validValue === value;\n    }).length > 0;\n  };\n\n  var _findMissingKeys = function _findMissingKeys(object, requiredKeys) {\n    return requiredKeys.filter(function (requiredKey) {\n      return !(requiredKey in object);\n    });\n  };\n\n  function setAudioModeAsync(mode) {\n    var missingKeys;\n    return regeneratorRuntime.async(function setAudioModeAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            missingKeys = _findMissingKeys(mode, ['allowsRecordingIOS', 'interruptionModeIOS', 'playsInSilentModeIOS', 'interruptionModeAndroid', 'shouldDuckAndroid', 'playThroughEarpieceAndroid']);\n\n            if (!(missingKeys.length > 0)) {\n              _context.next = 3;\n              break;\n            }\n\n            throw new Error(\"Audio mode attempted to be set without the required keys: \" + JSON.stringify(missingKeys));\n\n          case 3:\n            if (_isValueValid(mode.interruptionModeIOS, [INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS, INTERRUPTION_MODE_IOS_DO_NOT_MIX, INTERRUPTION_MODE_IOS_DUCK_OTHERS])) {\n              _context.next = 5;\n              break;\n            }\n\n            throw new Error(\"\\\"interruptionModeIOS\\\" was set to an invalid value.\");\n\n          case 5:\n            if (_isValueValid(mode.interruptionModeAndroid, [INTERRUPTION_MODE_ANDROID_DO_NOT_MIX, INTERRUPTION_MODE_ANDROID_DUCK_OTHERS])) {\n              _context.next = 7;\n              break;\n            }\n\n            throw new Error(\"\\\"interruptionModeAndroid\\\" was set to an invalid value.\");\n\n          case 7:\n            if (!(typeof mode.allowsRecordingIOS !== 'boolean' || typeof mode.playsInSilentModeIOS !== 'boolean' || typeof mode.shouldDuckAndroid !== 'boolean' || typeof mode.playThroughEarpieceAndroid !== 'boolean')) {\n              _context.next = 9;\n              break;\n            }\n\n            throw new Error('\"allowsRecordingIOS\", \"playsInSilentModeIOS\", \"playThroughEarpieceAndroid\", and \"shouldDuckAndroid\" must be booleans.');\n\n          case 9:\n            _context.next = 11;\n            return regeneratorRuntime.awrap(_reactNative.NativeModules.ExponentAV.setAudioMode(mode));\n\n          case 11:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, this);\n  }\n});","map":[[23,0,1,0],[25,0,2,0],[27,0,2,0],[28,0,2,0],[29,0,2,0],[30,0,2,0],[31,0,2,0],[32,0,2,0],[33,0,2,0],[34,0,2,0],[35,0,2,0],[36,0,2,0],[38,0,3,0],[40,0,3,0],[41,0,3,0],[42,0,3,0],[43,0,3,0],[44,0,3,0],[45,0,3,0],[46,0,3,0],[47,0,3,0],[48,0,3,0],[49,0,3,0],[51,0,4,0],[53,0,5,7],[53,6,5,13,"INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS"],[53,43,5,50],[53,46,5,53],[53,47,5,7],[55,0,6,7],[55,6,6,13,"INTERRUPTION_MODE_IOS_DO_NOT_MIX"],[55,38,6,45],[55,41,6,48],[55,42,6,7],[57,0,7,7],[57,6,7,13,"INTERRUPTION_MODE_IOS_DUCK_OTHERS"],[57,39,7,46],[57,42,7,49],[57,43,7,7],[59,0,8,7],[59,6,8,13,"INTERRUPTION_MODE_ANDROID_DO_NOT_MIX"],[59,42,8,49],[59,45,8,52],[59,46,8,7],[61,0,9,7],[61,6,9,13,"INTERRUPTION_MODE_ANDROID_DUCK_OTHERS"],[61,43,9,50],[61,46,9,53],[61,47,9,7],[64,0,11,0],[64,6,11,6,"_isValueValid"],[64,19,11,19],[64,22,11,22],[64,31,11,6,"_isValueValid"],[64,44,11,22],[64,45,11,23,"value"],[64,50,11,22],[64,52,11,30,"validValues"],[64,63,11,22],[64,65,11,46],[65,0,12,4],[65,11,12,11,"validValues"],[65,22,12,22],[65,23,12,23,"filter"],[65,29,12,11],[65,30,12,30],[65,40,12,30,"validValue"],[65,50,12,40],[66,0,12,40],[66,13,12,44,"validValue"],[66,23,12,54],[66,28,12,59,"value"],[66,33,12,40],[67,0,12,40],[67,5,12,11],[67,7,12,66,"length"],[67,13,12,11],[67,16,12,75],[67,17,12,4],[68,0,13,1],[68,3,11,0],[70,0,15,0],[70,6,15,6,"_findMissingKeys"],[70,22,15,22],[70,25,15,25],[70,34,15,6,"_findMissingKeys"],[70,50,15,25],[70,51,15,26,"object"],[70,57,15,25],[70,59,15,34,"requiredKeys"],[70,71,15,25],[70,73,15,51],[71,0,16,4],[71,11,16,11,"requiredKeys"],[71,23,16,23],[71,24,16,24,"filter"],[71,30,16,11],[71,31,16,31],[71,41,16,31,"requiredKey"],[71,52,16,42],[72,0,16,42],[72,13,16,46],[72,15,16,48,"requiredKey"],[72,26,16,59],[72,30,16,63,"object"],[72,36,16,46],[72,37,16,42],[73,0,16,42],[73,5,16,11],[73,6,16,4],[74,0,17,1],[74,3,15,0],[76,0,18,7],[76,11,18,22,"setAudioModeAsync"],[76,28,18,7],[76,29,18,40,"mode"],[76,33,18,7],[77,0,18,7],[78,0,18,7],[79,0,18,7],[80,0,18,7],[81,0,18,7],[82,0,19,10,"missingKeys"],[82,12,19,10,"missingKeys"],[82,23,18,7],[82,26,19,24,"_findMissingKeys"],[82,42,19,40],[82,43,19,41,"mode"],[82,47,19,40],[82,49,19,47],[82,50,20,8],[82,70,19,47],[82,72,21,8],[82,93,19,47],[82,95,22,8],[82,117,19,47],[82,119,23,8],[82,144,19,47],[82,146,24,8],[82,165,19,47],[82,167,25,8],[82,195,19,47],[82,196,19,40],[82,197,18,7],[84,0,18,7],[84,18,27,8,"missingKeys"],[84,29,27,19],[84,30,27,20,"length"],[84,36,27,8],[84,39,27,29],[84,40,18,7],[85,0,18,7],[86,0,18,7],[87,0,18,7],[89,0,18,7],[89,18,28,14],[89,22,28,18,"Error"],[89,27,28,14],[89,91,28,85,"JSON"],[89,95,28,89],[89,96,28,90,"stringify"],[89,105,28,85],[89,106,28,100,"missingKeys"],[89,117,28,85],[89,118,28,14],[89,119,18,7],[91,0,18,7],[92,0,18,7],[92,16,30,9,"_isValueValid"],[92,29,30,22],[92,30,30,23,"mode"],[92,34,30,27],[92,35,30,28,"interruptionModeIOS"],[92,54,30,22],[92,56,30,49],[92,57,31,8,"INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS"],[92,94,30,49],[92,96,32,8,"INTERRUPTION_MODE_IOS_DO_NOT_MIX"],[92,128,30,49],[92,130,33,8,"INTERRUPTION_MODE_IOS_DUCK_OTHERS"],[92,163,30,49],[92,164,30,22],[92,165,18,7],[93,0,18,7],[94,0,18,7],[95,0,18,7],[97,0,18,7],[97,18,35,14],[97,22,35,18,"Error"],[97,27,35,14],[97,83,18,7],[99,0,18,7],[100,0,18,7],[100,16,37,9,"_isValueValid"],[100,29,37,22],[100,30,37,23,"mode"],[100,34,37,27],[100,35,37,28,"interruptionModeAndroid"],[100,58,37,22],[100,60,37,53],[100,61,38,8,"INTERRUPTION_MODE_ANDROID_DO_NOT_MIX"],[100,97,37,53],[100,99,39,8,"INTERRUPTION_MODE_ANDROID_DUCK_OTHERS"],[100,136,37,53],[100,137,37,22],[100,138,18,7],[101,0,18,7],[102,0,18,7],[103,0,18,7],[105,0,18,7],[105,18,41,14],[105,22,41,18,"Error"],[105,27,41,14],[105,87,18,7],[107,0,18,7],[108,0,18,7],[108,18,43,8],[108,25,43,15,"mode"],[108,29,43,19],[108,30,43,20,"allowsRecordingIOS"],[108,48,43,8],[108,53,43,43],[108,62,43,8],[108,66,44,8],[108,73,44,15,"mode"],[108,77,44,19],[108,78,44,20,"playsInSilentModeIOS"],[108,98,44,8],[108,103,44,45],[108,112,43,8],[108,116,45,8],[108,123,45,15,"mode"],[108,127,45,19],[108,128,45,20,"shouldDuckAndroid"],[108,145,45,8],[108,150,45,42],[108,159,43,8],[108,163,46,8],[108,170,46,15,"mode"],[108,174,46,19],[108,175,46,20,"playThroughEarpieceAndroid"],[108,201,46,8],[108,206,46,51],[108,215,18,7],[109,0,18,7],[110,0,18,7],[111,0,18,7],[113,0,18,7],[113,18,47,14],[113,22,47,18,"Error"],[113,27,47,14],[113,28,47,24],[113,147,47,14],[113,148,18,7],[115,0,18,7],[116,0,18,7],[117,0,18,7],[117,44,49,17,"NativeModules"],[117,71,49,31,"ExponentAV"],[117,81,49,17],[117,82,49,42,"setAudioMode"],[117,94,49,17],[117,95,49,55,"mode"],[117,99,49,17],[117,100,18,7],[119,0,18,7],[120,0,18,7],[122,0,18,7],[123,0,18,7],[124,0,18,7],[125,0,18,7],[126,0,18,7],[127,0,18,7],[128,0,18,7]]},"type":"js/module"}]}