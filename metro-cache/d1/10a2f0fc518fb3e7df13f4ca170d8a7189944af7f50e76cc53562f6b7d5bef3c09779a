{"dependencies":[{"name":"./timer/polyfillNextTick","data":{"isAsync":false}},{"name":"lodash.zipobject","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"@expo/websql/custom","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.openDatabase = openDatabase;\n  exports.default = void 0;\n\n  _$$_REQUIRE(_dependencyMap[0], \"./timer/polyfillNextTick\");\n\n  var _lodash = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"lodash.zipobject\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n\n  var _custom = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@expo/websql/custom\"));\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\n  function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  var ExponentSQLite = _reactNative.NativeModules.ExponentSQLite;\n\n  var SQLiteDatabase = function () {\n    function SQLiteDatabase(name) {\n      _classCallCheck(this, SQLiteDatabase);\n\n      this._closed = false;\n      this._name = name;\n    }\n\n    _createClass(SQLiteDatabase, [{\n      key: \"exec\",\n      value: function exec(queries, readOnly, callback) {\n        if (this._closed) {\n          throw new Error(\"The SQLite database is closed\");\n        }\n\n        ExponentSQLite.exec(this._name, queries.map(_serializeQuery), readOnly).then(function (nativeResultSets) {\n          callback(null, nativeResultSets.map(_deserializeResultSet));\n        }, function (error) {\n          callback(error instanceof Error ? error : new Error(error));\n        });\n      }\n    }, {\n      key: \"close\",\n      value: function close() {\n        this._closed = true;\n        ExponentSQLite.close(this._name);\n      }\n    }]);\n\n    return SQLiteDatabase;\n  }();\n\n  function _serializeQuery(query) {\n    return [query.sql, _reactNative.Platform.OS === 'android' ? query.args.map(_escapeBlob) : query.args];\n  }\n\n  function _deserializeResultSet(nativeResult) {\n    var _nativeResult = _slicedToArray(nativeResult, 5),\n        errorMessage = _nativeResult[0],\n        insertId = _nativeResult[1],\n        rowsAffected = _nativeResult[2],\n        columns = _nativeResult[3],\n        rows = _nativeResult[4];\n\n    if (errorMessage !== null) {\n      return {\n        error: new Error(errorMessage)\n      };\n    }\n\n    return {\n      insertId: insertId,\n      rowsAffected: rowsAffected,\n      rows: rows.map(function (row) {\n        return (0, _lodash.default)(columns, row);\n      })\n    };\n  }\n\n  function _escapeBlob(data) {\n    if (typeof data === 'string') {\n      return data.replace(/\\u0002/g, \"\\x02\\x02\").replace(/\\u0001/g, \"\\x01\\x02\").replace(/\\u0000/g, \"\\x01\\x01\");\n    } else {\n      return data;\n    }\n  }\n\n  var _openExpoSQLiteDatabase = (0, _custom.default)(SQLiteDatabase);\n\n  function openDatabase(name) {\n    var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '1.0';\n    var description = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : name;\n    var size = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    var callback = arguments.length > 4 ? arguments[4] : undefined;\n\n    if (name === undefined) {\n      throw new TypeError(\"The database name must not be undefined\");\n    }\n\n    return _openExpoSQLiteDatabase(name, version, description, size, callback);\n  }\n\n  var _default = {\n    openDatabase: openDatabase\n  };\n  exports.default = _default;\n});","map":[[8,0,1,0],[10,0,2,0],[12,0,3,0],[14,0,4,0],[32,6,5,8,"ExponentSQLite"],[32,20],[32,23,5,27,"NativeModules"],[32,49],[32,50,5,8,"ExponentSQLite"],[32,64],[34,6,6,6,"SQLiteDatabase"],[34,20],[35,0,7,4],[35,28,7,16,"name"],[35,32,7,4],[35,34,7,22],[36,0,7,22],[38,0,8,8],[38,11,8,13,"_closed"],[38,18,8,8],[38,21,8,23],[38,26,8,8],[39,0,9,8],[39,11,9,13,"_name"],[39,16,9,8],[39,19,9,21,"name"],[39,23,9,8],[40,0,10,5],[44,27,11,9,"queries"],[44,34],[44,36,11,18,"readOnly"],[44,44],[44,46,11,28,"callback"],[44,54],[44,56,11,38],[45,0,12,8],[45,12,12,12],[45,17,12,17,"_closed"],[45,24,12,8],[45,26,12,26],[46,0,13,12],[46,16,13,18],[46,20,13,22,"Error"],[46,25,13,18],[46,58,13,12],[47,0,14,9],[49,0,15,8,"ExponentSQLite"],[49,8,15,8,"ExponentSQLite"],[49,22,15,22],[49,23,15,23,"exec"],[49,27,15,8],[49,28,15,28],[49,33,15,33,"_name"],[49,38,15,8],[49,40,15,40,"queries"],[49,47,15,47],[49,48,15,48,"map"],[49,51,15,40],[49,52,15,52,"_serializeQuery"],[49,67,15,40],[49,68,15,8],[49,70,15,70,"readOnly"],[49,78,15,8],[49,80,15,80,"then"],[49,84,15,8],[49,85,15,85],[49,95,15,85,"nativeResultSets"],[49,111,15,101],[49,113,15,105],[50,0,16,12,"callback"],[50,10,16,12,"callback"],[50,18,16,20],[50,19,16,21],[50,23,16,20],[50,25,16,27,"nativeResultSets"],[50,41,16,43],[50,42,16,44,"map"],[50,45,16,27],[50,46,16,48,"_deserializeResultSet"],[50,67,16,27],[50,68,16,20],[50,69,16,12],[51,0,17,9],[51,9,15,8],[51,11,17,11],[51,21,17,11,"error"],[51,26,17,16],[51,28,17,20],[52,0,19,12,"callback"],[52,10,19,12,"callback"],[52,18,19,20],[52,19,19,21,"error"],[52,24,19,26],[52,36,19,38,"Error"],[52,41,19,21],[52,44,19,46,"error"],[52,49,19,21],[52,52,19,54],[52,56,19,58,"Error"],[52,61,19,54],[52,62,19,64,"error"],[52,67,19,54],[52,68,19,20],[52,69,19,12],[53,0,20,9],[53,9,15,8],[54,0,21,5],[57,30,22,12],[58,0,23,8],[58,13,23,13,"_closed"],[58,20,23,8],[58,23,23,23],[58,27,23,8],[59,0,24,8,"ExponentSQLite"],[59,8,24,8,"ExponentSQLite"],[59,22,24,22],[59,23,24,23,"close"],[59,28,24,8],[59,29,24,29],[59,34,24,34,"_name"],[59,39,24,8],[60,0,25,5],[66,0,27,0],[66,11,27,9,"_serializeQuery"],[66,26,27,0],[66,27,27,25,"query"],[66,32,27,0],[66,34,27,32],[67,0,28,4],[67,11,28,11],[67,12,28,12,"query"],[67,17,28,17],[67,18,28,18,"sql"],[67,21,28,11],[67,23,28,23,"Platform"],[67,45,28,32,"OS"],[67,47,28,23],[67,52,28,39],[67,61,28,23],[67,64,28,51,"query"],[67,69,28,56],[67,70,28,57,"args"],[67,74,28,51],[67,75,28,62,"map"],[67,78,28,51],[67,79,28,66,"_escapeBlob"],[67,90,28,51],[67,91,28,23],[67,94,28,81,"query"],[67,99,28,86],[67,100,28,87,"args"],[67,104,28,11],[67,105,28,4],[68,0,29,1],[70,0,30,0],[70,11,30,9,"_deserializeResultSet"],[70,32,30,0],[70,33,30,31,"nativeResult"],[70,45,30,0],[70,47,30,45],[71,0,30,45],[71,39,31,64,"nativeResult"],[71,51,30,45],[72,0,30,45],[72,8,31,9,"errorMessage"],[72,20,30,45],[73,0,30,45],[73,8,31,23,"insertId"],[73,16,30,45],[74,0,30,45],[74,8,31,33,"rowsAffected"],[74,20,30,45],[75,0,30,45],[75,8,31,47,"columns"],[75,15,30,45],[76,0,30,45],[76,8,31,56,"rows"],[76,12,30,45],[78,0,34,4],[78,8,34,8,"errorMessage"],[78,20,34,20],[78,25,34,25],[78,29,34,4],[78,31,34,31],[79,0,35,8],[79,13,35,15],[80,0,35,17,"error"],[80,8,35,17,"error"],[80,13,35,22],[80,15,35,24],[80,19,35,28,"Error"],[80,24,35,24],[80,25,35,34,"errorMessage"],[80,37,35,24],[81,0,35,15],[81,7,35,8],[82,0,36,5],[84,0,37,4],[84,11,37,11],[85,0,38,8,"insertId"],[85,6,38,8,"insertId"],[85,14,38,16],[85,16,38,8,"insertId"],[85,24,37,11],[86,0,39,8,"rowsAffected"],[86,6,39,8,"rowsAffected"],[86,18,39,20],[86,20,39,8,"rowsAffected"],[86,32,37,11],[87,0,40,8,"rows"],[87,6,40,8,"rows"],[87,10,40,12],[87,12,40,14,"rows"],[87,16,40,18],[87,17,40,19,"map"],[87,20,40,14],[87,21,40,23],[87,31,40,23,"row"],[87,34,40,26],[88,0,40,26],[88,15,40,30],[88,36,40,40,"columns"],[88,43,40,30],[88,45,40,49,"row"],[88,48,40,30],[88,49,40,26],[89,0,40,26],[89,7,40,14],[90,0,37,11],[90,5,37,4],[91,0,42,1],[93,0,43,0],[93,11,43,9,"_escapeBlob"],[93,22,43,0],[93,23,43,21,"data"],[93,27,43,0],[93,29,43,27],[94,0,44,4],[94,8,44,8],[94,15,44,15,"data"],[94,19,44,8],[94,24,44,24],[94,32,44,4],[94,34,44,34],[95,0,46,8],[95,13,46,15,"data"],[95,17,46,19],[95,18,47,13,"replace"],[95,25,46,15],[95,26,47,21],[95,35,46,15],[95,37,47,32],[95,47,46,15],[95,49,48,13,"replace"],[95,56,46,15],[95,57,48,21],[95,66,46,15],[95,68,48,32],[95,78,46,15],[95,80,49,13,"replace"],[95,87,46,15],[95,88,49,21],[95,97,46,15],[95,99,49,32],[95,109,46,15],[95,110,46,8],[96,0,51,5],[96,5,44,4],[96,11,52,9],[97,0,53,8],[97,13,53,15,"data"],[97,17,53,8],[98,0,54,5],[99,0,55,1],[101,0,56,0],[101,6,56,6,"_openExpoSQLiteDatabase"],[101,29,56,29],[101,32,56,32],[101,53,56,51,"SQLiteDatabase"],[101,67,56,32],[101,68,56,0],[103,0,57,7],[103,11,57,16,"openDatabase"],[103,23,57,7],[103,24,57,29,"name"],[103,28,57,7],[103,30,57,92],[104,0,57,92],[104,8,57,35,"version"],[104,15,57,92],[104,86,57,45],[104,91,57,92],[105,0,57,92],[105,8,57,52,"description"],[105,19,57,92],[105,90,57,66,"name"],[105,94,57,92],[106,0,57,92],[106,8,57,72,"size"],[106,12,57,92],[106,83,57,79],[106,84,57,92],[107,0,57,92],[107,8,57,82,"callback"],[107,16,57,92],[109,0,58,4],[109,8,58,8,"name"],[109,12,58,12],[109,17,58,17,"undefined"],[109,26,58,4],[109,28,58,28],[110,0,59,8],[110,12,59,14],[110,16,59,18,"TypeError"],[110,25,59,14],[110,68,59,8],[111,0,60,5],[113,0,61,4],[113,11,61,11,"_openExpoSQLiteDatabase"],[113,34,61,34],[113,35,61,35,"name"],[113,39,61,34],[113,41,61,41,"version"],[113,48,61,34],[113,50,61,50,"description"],[113,61,61,34],[113,63,61,63,"size"],[113,67,61,34],[113,69,61,69,"callback"],[113,77,61,34],[113,78,61,4],[114,0,62,1],[116,17,63,15],[117,0,64,4,"openDatabase"],[117,4,64,4,"openDatabase"],[117,16,64,16],[117,18,64,4,"openDatabase"],[118,0,63,15],[118,3]]},"type":"js/module"}]}