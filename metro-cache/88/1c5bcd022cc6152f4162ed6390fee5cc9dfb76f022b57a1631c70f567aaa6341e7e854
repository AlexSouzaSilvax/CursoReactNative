{"dependencies":[{"name":"./RemoteLogging","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _RemoteLogging = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"./RemoteLogging\"));\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  function createRemoteConsole(originalConsole) {\n    var groupDepth = 0;\n    var enhancedConsole = Object.create(originalConsole);\n\n    _defineConsoleLogMethod('debug', 'info');\n\n    _defineConsoleLogMethod('log', 'info');\n\n    _defineConsoleLogMethod('info', 'info');\n\n    _defineConsoleLogMethod('warn', 'warn');\n\n    _defineConsoleLogMethod('error', 'error');\n\n    enhancedConsole.assert = function assert(condition) {\n      for (var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        data[_key - 1] = arguments[_key];\n      }\n\n      if (originalConsole.assert) {\n        originalConsole.assert.apply(originalConsole, [!!condition].concat(data));\n      }\n\n      if (condition) {\n        return;\n      }\n\n      var assertionMessage = 'Assertion failed';\n\n      if (!data.length) {\n        data.push(assertionMessage);\n      } else {\n        if (typeof data[0] !== 'string') {\n          data.unshift(assertionMessage);\n        } else {\n          data[0] = assertionMessage + \": \" + data[0];\n        }\n      }\n\n      _enqueueRemoteLog('error', {}, data);\n    };\n\n    enhancedConsole.group = function group() {\n      for (var _len2 = arguments.length, data = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        data[_key2] = arguments[_key2];\n      }\n\n      if (originalConsole.group) {\n        originalConsole.group.apply(originalConsole, data);\n      }\n\n      _enqueueRemoteLog('info', {}, data);\n\n      groupDepth++;\n    };\n\n    enhancedConsole.groupCollapsed = function groupCollapsed() {\n      for (var _len3 = arguments.length, data = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        data[_key3] = arguments[_key3];\n      }\n\n      if (originalConsole.groupCollapsed) {\n        originalConsole.groupCollapsed.apply(originalConsole, data);\n      }\n\n      _enqueueRemoteLog('info', {\n        groupCollapsed: true\n      }, data);\n\n      groupDepth++;\n    };\n\n    enhancedConsole.groupEnd = function groupEnd() {\n      if (originalConsole.groupEnd) {\n        originalConsole.groupEnd();\n      }\n\n      if (groupDepth > 0) {\n        groupDepth--;\n      }\n\n      _enqueueRemoteLog('info', {\n        shouldHide: true\n      }, []);\n    };\n\n    function _defineConsoleLogMethod(name, level) {\n      enhancedConsole[name] = function __expoConsoleLog() {\n        var originalMethod = originalConsole[name];\n\n        for (var _len4 = arguments.length, data = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          data[_key4] = arguments[_key4];\n        }\n\n        if (typeof originalMethod === 'function') {\n          originalMethod.apply(originalConsole, data);\n        }\n\n        _enqueueRemoteLog(level, {}, data);\n      };\n    }\n\n    function _enqueueRemoteLog(level, additionalFields, data) {\n      _RemoteLogging.default.enqueueRemoteLogAsync(level, _objectSpread({\n        groupDepth: groupDepth\n      }, additionalFields), data).catch(function (error) {\n        originalConsole.error(\"There was a problem sending log messages to your development environment\", error);\n      });\n    }\n\n    return enhancedConsole;\n  }\n\n  var _default = {\n    createRemoteConsole: createRemoteConsole\n  };\n  exports.default = _default;\n});","map":[[7,0,1,0],[15,0,15,0],[15,11,15,9,"createRemoteConsole"],[15,30,15,0],[15,31,15,29,"originalConsole"],[15,46,15,0],[15,48,15,46],[16,0,16,4],[16,8,16,8,"groupDepth"],[16,18,16,18],[16,21,16,21],[16,22,16,4],[17,0,17,4],[17,8,17,10,"enhancedConsole"],[17,23,17,25],[17,26,17,28,"Object"],[17,32,17,34],[17,33,17,35,"create"],[17,39,17,28],[17,40,17,42,"originalConsole"],[17,55,17,28],[17,56,17,4],[19,0,21,4,"_defineConsoleLogMethod"],[19,4,21,4,"_defineConsoleLogMethod"],[19,27,21,27],[19,28,21,28],[19,35,21,27],[19,37,21,37],[19,43,21,27],[19,44,21,4],[21,0,23,4,"_defineConsoleLogMethod"],[21,4,23,4,"_defineConsoleLogMethod"],[21,27,23,27],[21,28,23,28],[21,33,23,27],[21,35,23,35],[21,41,23,27],[21,42,23,4],[23,0,25,4,"_defineConsoleLogMethod"],[23,4,25,4,"_defineConsoleLogMethod"],[23,27,25,27],[23,28,25,28],[23,34,25,27],[23,36,25,36],[23,42,25,27],[23,43,25,4],[25,0,27,4,"_defineConsoleLogMethod"],[25,4,27,4,"_defineConsoleLogMethod"],[25,27,27,27],[25,28,27,28],[25,34,27,27],[25,36,27,36],[25,42,27,27],[25,43,27,4],[27,0,29,4,"_defineConsoleLogMethod"],[27,4,29,4,"_defineConsoleLogMethod"],[27,27,29,27],[27,28,29,28],[27,35,29,27],[27,37,29,37],[27,44,29,27],[27,45,29,4],[29,0,31,4,"enhancedConsole"],[29,4,31,4,"enhancedConsole"],[29,19,31,19],[29,20,31,20,"assert"],[29,26,31,4],[29,29,31,29],[29,38,31,38,"assert"],[29,44,31,29],[29,45,31,45,"condition"],[29,54,31,29],[29,56,31,65],[30,0,31,65],[30,40,31,59,"data"],[30,44,31,65],[31,0,31,59,"data"],[31,8,31,59,"data"],[31,12,31,65],[32,0,31,65],[34,0,32,8],[34,10,32,12,"originalConsole"],[34,25,32,27],[34,26,32,28,"assert"],[34,32,32,8],[34,34,32,36],[35,0,34,12,"originalConsole"],[35,8,34,12,"originalConsole"],[35,23,34,27],[35,24,34,28,"assert"],[35,30,34,12],[35,37,34,12,"originalConsole"],[35,52,34,27],[35,55,34,35],[35,56,34,36],[35,57,34,37,"condition"],[35,66,34,27],[35,75,34,51,"data"],[35,79,34,27],[35,81,34,12],[36,0,35,9],[38,0,36,8],[38,10,36,12,"condition"],[38,19,36,8],[38,21,36,23],[39,0,37,12],[40,0,38,9],[42,0,39,8],[42,10,39,14,"assertionMessage"],[42,26,39,30],[42,29,39,33],[42,47,39,8],[44,0,40,8],[44,10,40,12],[44,11,40,13,"data"],[44,15,40,17],[44,16,40,18,"length"],[44,22,40,8],[44,24,40,26],[45,0,41,12,"data"],[45,8,41,12,"data"],[45,12,41,16],[45,13,41,17,"push"],[45,17,41,12],[45,18,41,22,"assertionMessage"],[45,34,41,12],[46,0,42,9],[46,7,40,8],[46,13,43,13],[47,0,44,12],[47,12,44,16],[47,19,44,23,"data"],[47,23,44,27],[47,24,44,28],[47,25,44,27],[47,26,44,16],[47,31,44,35],[47,39,44,12],[47,41,44,45],[48,0,45,16,"data"],[48,10,45,16,"data"],[48,14,45,20],[48,15,45,21,"unshift"],[48,22,45,16],[48,23,45,29,"assertionMessage"],[48,39,45,16],[49,0,46,13],[49,9,44,12],[49,15,47,17],[50,0,48,16,"data"],[50,10,48,16,"data"],[50,14,48,20],[50,15,48,21],[50,16,48,20],[50,17,48,16],[50,20,48,29,"assertionMessage"],[50,36,48,16],[50,46,48,50,"data"],[50,50,48,54],[50,51,48,55],[50,52,48,54],[50,53,48,16],[51,0,49,13],[52,0,50,9],[54,0,51,8,"_enqueueRemoteLog"],[54,6,51,8,"_enqueueRemoteLog"],[54,23,51,25],[54,24,51,26],[54,31,51,25],[54,33,51,35],[54,35,51,25],[54,37,51,39,"data"],[54,41,51,25],[54,42,51,8],[55,0,52,5],[55,5,31,4],[57,0,54,4,"enhancedConsole"],[57,4,54,4,"enhancedConsole"],[57,19,54,19],[57,20,54,20,"group"],[57,25,54,4],[57,28,54,28],[57,37,54,37,"group"],[57,42,54,28],[57,45,54,52],[58,0,54,52],[58,41,54,46,"data"],[58,45,54,52],[59,0,54,46,"data"],[59,8,54,46,"data"],[59,12,54,52],[60,0,54,52],[62,0,55,8],[62,10,55,12,"originalConsole"],[62,25,55,27],[62,26,55,28,"group"],[62,31,55,8],[62,33,55,35],[63,0,57,12,"originalConsole"],[63,8,57,12,"originalConsole"],[63,23,57,27],[63,24,57,28,"group"],[63,29,57,12],[63,36,57,12,"originalConsole"],[63,51,57,27],[63,53,57,37,"data"],[63,57,57,27],[63,58,57,12],[64,0,58,9],[66,0,59,8,"_enqueueRemoteLog"],[66,6,59,8,"_enqueueRemoteLog"],[66,23,59,25],[66,24,59,26],[66,30,59,25],[66,32,59,34],[66,34,59,25],[66,36,59,38,"data"],[66,40,59,25],[66,41,59,8],[68,0,60,8,"groupDepth"],[68,6,60,8,"groupDepth"],[68,16,60,18],[69,0,61,5],[69,5,54,4],[71,0,63,4,"enhancedConsole"],[71,4,63,4,"enhancedConsole"],[71,19,63,19],[71,20,63,20,"groupCollapsed"],[71,34,63,4],[71,37,63,37],[71,46,63,46,"groupCollapsed"],[71,60,63,37],[71,63,63,70],[72,0,63,70],[72,41,63,64,"data"],[72,45,63,70],[73,0,63,64,"data"],[73,8,63,64,"data"],[73,12,63,70],[74,0,63,70],[76,0,64,8],[76,10,64,12,"originalConsole"],[76,25,64,27],[76,26,64,28,"groupCollapsed"],[76,40,64,8],[76,42,64,44],[77,0,66,12,"originalConsole"],[77,8,66,12,"originalConsole"],[77,23,66,27],[77,24,66,28,"groupCollapsed"],[77,38,66,12],[77,45,66,12,"originalConsole"],[77,60,66,27],[77,62,66,46,"data"],[77,66,66,27],[77,67,66,12],[78,0,67,9],[80,0,68,8,"_enqueueRemoteLog"],[80,6,68,8,"_enqueueRemoteLog"],[80,23,68,25],[80,24,68,26],[80,30,68,25],[80,32,68,34],[81,0,68,36,"groupCollapsed"],[81,8,68,36,"groupCollapsed"],[81,22,68,50],[81,24,68,52],[82,0,68,34],[82,7,68,25],[82,9,68,60,"data"],[82,13,68,25],[82,14,68,8],[84,0,69,8,"groupDepth"],[84,6,69,8,"groupDepth"],[84,16,69,18],[85,0,70,5],[85,5,63,4],[87,0,72,4,"enhancedConsole"],[87,4,72,4,"enhancedConsole"],[87,19,72,19],[87,20,72,20,"groupEnd"],[87,28,72,4],[87,31,72,31],[87,40,72,40,"groupEnd"],[87,48,72,31],[87,51,72,51],[88,0,73,8],[88,10,73,12,"originalConsole"],[88,25,73,27],[88,26,73,28,"groupEnd"],[88,34,73,8],[88,36,73,38],[89,0,74,12,"originalConsole"],[89,8,74,12,"originalConsole"],[89,23,74,27],[89,24,74,28,"groupEnd"],[89,32,74,12],[90,0,75,9],[92,0,76,8],[92,10,76,12,"groupDepth"],[92,20,76,22],[92,23,76,25],[92,24,76,8],[92,26,76,28],[93,0,77,12,"groupDepth"],[93,8,77,12,"groupDepth"],[93,18,77,22],[94,0,78,9],[96,0,79,8,"_enqueueRemoteLog"],[96,6,79,8,"_enqueueRemoteLog"],[96,23,79,25],[96,24,79,26],[96,30,79,25],[96,32,79,34],[97,0,79,36,"shouldHide"],[97,8,79,36,"shouldHide"],[97,18,79,46],[97,20,79,48],[98,0,79,34],[98,7,79,25],[98,9,79,56],[98,11,79,25],[98,12,79,8],[99,0,80,5],[99,5,72,4],[101,0,85,4],[101,13,85,13,"_defineConsoleLogMethod"],[101,36,85,4],[101,37,85,37,"name"],[101,41,85,4],[101,43,85,43,"level"],[101,48,85,4],[101,50,85,50],[102,0,86,8,"enhancedConsole"],[102,6,86,8,"enhancedConsole"],[102,21,86,23],[102,22,86,24,"name"],[102,26,86,23],[102,27,86,8],[102,30,86,32],[102,39,86,41,"__expoConsoleLog"],[102,55,86,32],[102,58,86,67],[103,0,87,12],[103,12,87,16,"originalMethod"],[103,26,87,30],[103,29,87,33,"originalConsole"],[103,44,87,48],[103,45,87,49,"name"],[103,49,87,48],[103,50,87,12],[105,0,86,67],[105,43,86,61,"data"],[105,47,86,67],[106,0,86,61,"data"],[106,10,86,61,"data"],[106,14,86,67],[107,0,86,67],[109,0,88,12],[109,12,88,16],[109,19,88,23,"originalMethod"],[109,33,88,16],[109,38,88,42],[109,48,88,12],[109,50,88,54],[110,0,89,16,"originalMethod"],[110,10,89,16,"originalMethod"],[110,24,89,30],[110,25,89,31,"apply"],[110,30,89,16],[110,31,89,37,"originalConsole"],[110,46,89,16],[110,48,89,54,"data"],[110,52,89,16],[111,0,90,13],[113,0,91,12,"_enqueueRemoteLog"],[113,8,91,12,"_enqueueRemoteLog"],[113,25,91,29],[113,26,91,30,"level"],[113,31,91,29],[113,33,91,37],[113,35,91,29],[113,37,91,41,"data"],[113,41,91,29],[113,42,91,12],[114,0,92,9],[114,7,86,8],[115,0,93,5],[117,0,100,4],[117,13,100,13,"_enqueueRemoteLog"],[117,30,100,4],[117,31,100,31,"level"],[117,36,100,4],[117,38,100,38,"additionalFields"],[117,54,100,4],[117,56,100,56,"data"],[117,60,100,4],[117,62,100,62],[118,0,101,8,"RemoteLogging"],[118,29,101,22,"enqueueRemoteLogAsync"],[118,50,101,8],[118,51,101,44,"level"],[118,56,101,8],[119,0,101,53,"groupDepth"],[119,8,101,53,"groupDepth"],[119,18,101,63],[119,20,101,53,"groupDepth"],[120,0,101,8],[120,9,101,68,"additionalFields"],[120,25,101,8],[120,28,101,88,"data"],[120,32,101,8],[120,34,101,94,"catch"],[120,39,101,8],[120,40,101,100],[120,50,101,100,"error"],[120,55,101,105],[120,57,101,109],[121,0,102,12,"originalConsole"],[121,8,102,12,"originalConsole"],[121,23,102,27],[121,24,102,28,"error"],[121,29,102,12],[121,106,102,110,"error"],[121,111,102,12],[122,0,103,9],[122,7,101,8],[123,0,104,5],[125,0,105,4],[125,11,105,11,"enhancedConsole"],[125,26,105,4],[126,0,106,1],[128,17,107,15],[129,0,108,4,"createRemoteConsole"],[129,4,108,4,"createRemoteConsole"],[129,23,108,23],[129,25,108,4,"createRemoteConsole"],[130,0,107,15],[130,3]]},"type":"js/module"}]}