{"dependencies":[{"name":"../nodes/AnimatedValue","data":{"isAsync":false}},{"name":"../nodes/AnimatedValueXY","data":{"isAsync":false}},{"name":"./Animation","data":{"isAsync":false}},{"name":"../SpringConfig","data":{"isAsync":false}},{"name":"fbjs/lib/invariant","data":{"isAsync":false}},{"name":"../NativeAnimatedHelper","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\n  function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  var AnimatedValue = _$$_REQUIRE(_dependencyMap[0], \"../nodes/AnimatedValue\");\n\n  var AnimatedValueXY = _$$_REQUIRE(_dependencyMap[1], \"../nodes/AnimatedValueXY\");\n\n  var Animation = _$$_REQUIRE(_dependencyMap[2], \"./Animation\");\n\n  var SpringConfig = _$$_REQUIRE(_dependencyMap[3], \"../SpringConfig\");\n\n  var invariant = _$$_REQUIRE(_dependencyMap[4], \"fbjs/lib/invariant\");\n\n  var _require = _$$_REQUIRE(_dependencyMap[5], \"../NativeAnimatedHelper\"),\n      shouldUseNativeDriver = _require.shouldUseNativeDriver;\n\n  function withDefault(value, defaultValue) {\n    if (value === undefined || value === null) {\n      return defaultValue;\n    }\n\n    return value;\n  }\n\n  var SpringAnimation = function (_Animation) {\n    _inherits(SpringAnimation, _Animation);\n\n    function SpringAnimation(config) {\n      var _this;\n\n      _classCallCheck(this, SpringAnimation);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(SpringAnimation).call(this));\n      _this._overshootClamping = withDefault(config.overshootClamping, false);\n      _this._restDisplacementThreshold = withDefault(config.restDisplacementThreshold, 0.001);\n      _this._restSpeedThreshold = withDefault(config.restSpeedThreshold, 0.001);\n      _this._initialVelocity = withDefault(config.velocity, 0);\n      _this._lastVelocity = withDefault(config.velocity, 0);\n      _this._toValue = config.toValue;\n      _this._delay = withDefault(config.delay, 0);\n      _this._useNativeDriver = shouldUseNativeDriver(config);\n      _this.__isInteraction = config.isInteraction !== undefined ? config.isInteraction : true;\n      _this.__iterations = config.iterations !== undefined ? config.iterations : 1;\n\n      if (config.stiffness !== undefined || config.damping !== undefined || config.mass !== undefined) {\n        invariant(config.bounciness === undefined && config.speed === undefined && config.tension === undefined && config.friction === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n        _this._stiffness = withDefault(config.stiffness, 100);\n        _this._damping = withDefault(config.damping, 10);\n        _this._mass = withDefault(config.mass, 1);\n      } else if (config.bounciness !== undefined || config.speed !== undefined) {\n        invariant(config.tension === undefined && config.friction === undefined && config.stiffness === undefined && config.damping === undefined && config.mass === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n        var springConfig = SpringConfig.fromBouncinessAndSpeed(withDefault(config.bounciness, 8), withDefault(config.speed, 12));\n        _this._stiffness = springConfig.stiffness;\n        _this._damping = springConfig.damping;\n        _this._mass = 1;\n      } else {\n        var _springConfig = SpringConfig.fromOrigamiTensionAndFriction(withDefault(config.tension, 40), withDefault(config.friction, 7));\n\n        _this._stiffness = _springConfig.stiffness;\n        _this._damping = _springConfig.damping;\n        _this._mass = 1;\n      }\n\n      invariant(_this._stiffness > 0, 'Stiffness value must be greater than 0');\n      invariant(_this._damping > 0, 'Damping value must be greater than 0');\n      invariant(_this._mass > 0, 'Mass value must be greater than 0');\n      return _this;\n    }\n\n    _createClass(SpringAnimation, [{\n      key: \"__getNativeAnimationConfig\",\n      value: function __getNativeAnimationConfig() {\n        return {\n          type: 'spring',\n          overshootClamping: this._overshootClamping,\n          restDisplacementThreshold: this._restDisplacementThreshold,\n          restSpeedThreshold: this._restSpeedThreshold,\n          stiffness: this._stiffness,\n          damping: this._damping,\n          mass: this._mass,\n          initialVelocity: withDefault(this._initialVelocity, this._lastVelocity),\n          toValue: this._toValue,\n          iterations: this.__iterations\n        };\n      }\n    }, {\n      key: \"start\",\n      value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {\n        var _this2 = this;\n\n        this.__active = true;\n        this._startPosition = fromValue;\n        this._lastPosition = this._startPosition;\n        this._onUpdate = onUpdate;\n        this.__onEnd = onEnd;\n        this._lastTime = Date.now();\n        this._frameTime = 0.0;\n\n        if (previousAnimation instanceof SpringAnimation) {\n          var internalState = previousAnimation.getInternalState();\n          this._lastPosition = internalState.lastPosition;\n          this._lastVelocity = internalState.lastVelocity;\n          this._initialVelocity = this._lastVelocity;\n          this._lastTime = internalState.lastTime;\n        }\n\n        var start = function start() {\n          if (_this2._useNativeDriver) {\n            _this2.__startNativeAnimation(animatedValue);\n          } else {\n            _this2.onUpdate();\n          }\n        };\n\n        if (this._delay) {\n          this._timeout = setTimeout(start, this._delay);\n        } else {\n          start();\n        }\n      }\n    }, {\n      key: \"getInternalState\",\n      value: function getInternalState() {\n        return {\n          lastPosition: this._lastPosition,\n          lastVelocity: this._lastVelocity,\n          lastTime: this._lastTime\n        };\n      }\n    }, {\n      key: \"onUpdate\",\n      value: function onUpdate() {\n        var MAX_STEPS = 64;\n        var now = Date.now();\n\n        if (now > this._lastTime + MAX_STEPS) {\n          now = this._lastTime + MAX_STEPS;\n        }\n\n        var deltaTime = (now - this._lastTime) / 1000;\n        this._frameTime += deltaTime;\n        var c = this._damping;\n        var m = this._mass;\n        var k = this._stiffness;\n        var v0 = -this._initialVelocity;\n        var zeta = c / (2 * Math.sqrt(k * m));\n        var omega0 = Math.sqrt(k / m);\n        var omega1 = omega0 * Math.sqrt(1.0 - zeta * zeta);\n        var x0 = this._toValue - this._startPosition;\n        var position = 0.0;\n        var velocity = 0.0;\n        var t = this._frameTime;\n\n        if (zeta < 1) {\n          var envelope = Math.exp(-zeta * omega0 * t);\n          position = this._toValue - envelope * ((v0 + zeta * omega0 * x0) / omega1 * Math.sin(omega1 * t) + x0 * Math.cos(omega1 * t));\n          velocity = zeta * omega0 * envelope * (Math.sin(omega1 * t) * (v0 + zeta * omega0 * x0) / omega1 + x0 * Math.cos(omega1 * t)) - envelope * (Math.cos(omega1 * t) * (v0 + zeta * omega0 * x0) - omega1 * x0 * Math.sin(omega1 * t));\n        } else {\n          var _envelope = Math.exp(-omega0 * t);\n\n          position = this._toValue - _envelope * (x0 + (v0 + omega0 * x0) * t);\n          velocity = _envelope * (v0 * (t * omega0 - 1) + t * x0 * (omega0 * omega0));\n        }\n\n        this._lastTime = now;\n        this._lastPosition = position;\n        this._lastVelocity = velocity;\n\n        this._onUpdate(position);\n\n        if (!this.__active) {\n          return;\n        }\n\n        var isOvershooting = false;\n\n        if (this._overshootClamping && this._stiffness !== 0) {\n          if (this._startPosition < this._toValue) {\n            isOvershooting = position > this._toValue;\n          } else {\n            isOvershooting = position < this._toValue;\n          }\n        }\n\n        var isVelocity = Math.abs(velocity) <= this._restSpeedThreshold;\n\n        var isDisplacement = true;\n\n        if (this._stiffness !== 0) {\n          isDisplacement = Math.abs(this._toValue - position) <= this._restDisplacementThreshold;\n        }\n\n        if (isOvershooting || isVelocity && isDisplacement) {\n          if (this._stiffness !== 0) {\n            this._lastPosition = this._toValue;\n            this._lastVelocity = 0;\n\n            this._onUpdate(this._toValue);\n          }\n\n          this.__debouncedOnEnd({\n            finished: true\n          });\n\n          return;\n        }\n\n        this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        _get(_getPrototypeOf(SpringAnimation.prototype), \"stop\", this).call(this);\n\n        this.__active = false;\n        clearTimeout(this._timeout);\n        global.cancelAnimationFrame(this._animationFrame);\n\n        this.__debouncedOnEnd({\n          finished: false\n        });\n      }\n    }]);\n\n    return SpringAnimation;\n  }(Animation);\n\n  module.exports = SpringAnimation;\n});","map":[[2,0,10,0],[24,0,12,0],[24,6,12,6,"AnimatedValue"],[24,19,12,19],[24,22,12,22,"require"],[24,33,12,29],[24,78,12,0],[26,0,13,0],[26,6,13,6,"AnimatedValueXY"],[26,21,13,21],[26,24,13,24,"require"],[26,35,13,31],[26,82,13,0],[28,0,14,0],[28,6,14,6,"Animation"],[28,15,14,15],[28,18,14,18,"require"],[28,29,14,25],[28,63,14,0],[30,0,15,0],[30,6,15,6,"SpringConfig"],[30,18,15,18],[30,21,15,21,"require"],[30,32,15,28],[30,70,15,0],[32,0,17,0],[32,6,17,6,"invariant"],[32,15,17,15],[32,18,17,18,"require"],[32,29,17,25],[32,70,17,0],[34,17,18,32,"require"],[34,28,18,39],[34,74],[35,6,18,7,"shouldUseNativeDriver"],[35,27],[35,39,18,7,"shouldUseNativeDriver"],[35,60],[37,0,54,0],[37,11,54,9,"withDefault"],[37,22,54,0],[37,23,54,24,"value"],[37,28,54,0],[37,30,54,35,"defaultValue"],[37,42,54,0],[37,44,54,55],[38,0,55,2],[38,8,55,6,"value"],[38,13,55,11],[38,18,55,16,"undefined"],[38,27,55,6],[38,31,55,29,"value"],[38,36,55,34],[38,41,55,39],[38,45,55,2],[38,47,55,45],[39,0,56,4],[39,13,56,11,"defaultValue"],[39,25,56,4],[40,0,57,3],[42,0,58,2],[42,11,58,9,"value"],[42,16,58,2],[43,0,59,1],[45,6,61,6,"SpringAnimation"],[45,21],[48,0,83,2],[48,29,83,14,"config"],[48,35,83,2],[48,37,83,51],[49,0,83,51],[51,0,83,51],[53,0,84,4],[54,0,86,4],[54,12,86,9,"_overshootClamping"],[54,30,86,4],[54,33,86,30,"withDefault"],[54,44,86,41],[54,45,86,42,"config"],[54,51,86,48],[54,52,86,49,"overshootClamping"],[54,69,86,41],[54,71,86,68],[54,76,86,41],[54,77,86,4],[55,0,87,4],[55,12,87,9,"_restDisplacementThreshold"],[55,38,87,4],[55,41,87,38,"withDefault"],[55,52,87,49],[55,53,88,6,"config"],[55,59,88,12],[55,60,88,13,"restDisplacementThreshold"],[55,85,87,49],[55,87,89,6],[55,92,87,49],[55,93,87,4],[56,0,91,4],[56,12,91,9,"_restSpeedThreshold"],[56,31,91,4],[56,34,91,31,"withDefault"],[56,45,91,42],[56,46,91,43,"config"],[56,52,91,49],[56,53,91,50,"restSpeedThreshold"],[56,71,91,42],[56,73,91,70],[56,78,91,42],[56,79,91,4],[57,0,92,4],[57,12,92,9,"_initialVelocity"],[57,28,92,4],[57,31,92,28,"withDefault"],[57,42,92,39],[57,43,92,40,"config"],[57,49,92,46],[57,50,92,47,"velocity"],[57,58,92,39],[57,60,92,57],[57,61,92,39],[57,62,92,4],[58,0,93,4],[58,12,93,9,"_lastVelocity"],[58,25,93,4],[58,28,93,25,"withDefault"],[58,39,93,36],[58,40,93,37,"config"],[58,46,93,43],[58,47,93,44,"velocity"],[58,55,93,36],[58,57,93,54],[58,58,93,36],[58,59,93,4],[59,0,94,4],[59,12,94,9,"_toValue"],[59,20,94,4],[59,23,94,20,"config"],[59,29,94,26],[59,30,94,27,"toValue"],[59,37,94,4],[60,0,95,4],[60,12,95,9,"_delay"],[60,18,95,4],[60,21,95,18,"withDefault"],[60,32,95,29],[60,33,95,30,"config"],[60,39,95,36],[60,40,95,37,"delay"],[60,45,95,29],[60,47,95,44],[60,48,95,29],[60,49,95,4],[61,0,96,4],[61,12,96,9,"_useNativeDriver"],[61,28,96,4],[61,31,96,28,"shouldUseNativeDriver"],[61,52,96,49],[61,53,96,50,"config"],[61,59,96,49],[61,60,96,4],[62,0,97,4],[62,12,97,9,"__isInteraction"],[62,27,97,4],[62,30,98,6,"config"],[62,36,98,12],[62,37,98,13,"isInteraction"],[62,50,98,6],[62,55,98,31,"undefined"],[62,64,98,6],[62,67,98,43,"config"],[62,73,98,49],[62,74,98,50,"isInteraction"],[62,87,98,6],[62,90,98,66],[62,94,97,4],[63,0,99,4],[63,12,99,9,"__iterations"],[63,24,99,4],[63,27,99,24,"config"],[63,33,99,30],[63,34,99,31,"iterations"],[63,44,99,24],[63,49,99,46,"undefined"],[63,58,99,24],[63,61,99,58,"config"],[63,67,99,64],[63,68,99,65,"iterations"],[63,78,99,24],[63,81,99,78],[63,82,99,4],[65,0,101,4],[65,10,102,6,"config"],[65,16,102,12],[65,17,102,13,"stiffness"],[65,26,102,6],[65,31,102,27,"undefined"],[65,40,102,6],[65,44,103,6,"config"],[65,50,103,12],[65,51,103,13,"damping"],[65,58,103,6],[65,63,103,25,"undefined"],[65,72,102,6],[65,76,104,6,"config"],[65,82,104,12],[65,83,104,13,"mass"],[65,87,104,6],[65,92,104,22,"undefined"],[65,101,101,4],[65,103,105,6],[66,0,106,6,"invariant"],[66,8,106,6,"invariant"],[66,17,106,15],[66,18,107,8,"config"],[66,24,107,14],[66,25,107,15,"bounciness"],[66,35,107,8],[66,40,107,30,"undefined"],[66,49,107,8],[66,53,108,10,"config"],[66,59,108,16],[66,60,108,17,"speed"],[66,65,108,10],[66,70,108,27,"undefined"],[66,79,107,8],[66,83,109,10,"config"],[66,89,109,16],[66,90,109,17,"tension"],[66,97,109,10],[66,102,109,29,"undefined"],[66,111,107,8],[66,115,110,10,"config"],[66,121,110,16],[66,122,110,17,"friction"],[66,130,110,10],[66,135,110,30,"undefined"],[66,144,106,15],[66,146,111,8],[66,254,106,15],[66,255,106,6],[67,0,113,6],[67,14,113,11,"_stiffness"],[67,24,113,6],[67,27,113,24,"withDefault"],[67,38,113,35],[67,39,113,36,"config"],[67,45,113,42],[67,46,113,43,"stiffness"],[67,55,113,35],[67,57,113,54],[67,60,113,35],[67,61,113,6],[68,0,114,6],[68,14,114,11,"_damping"],[68,22,114,6],[68,25,114,22,"withDefault"],[68,36,114,33],[68,37,114,34,"config"],[68,43,114,40],[68,44,114,41,"damping"],[68,51,114,33],[68,53,114,50],[68,55,114,33],[68,56,114,6],[69,0,115,6],[69,14,115,11,"_mass"],[69,19,115,6],[69,22,115,19,"withDefault"],[69,33,115,30],[69,34,115,31,"config"],[69,40,115,37],[69,41,115,38,"mass"],[69,45,115,30],[69,47,115,44],[69,48,115,30],[69,49,115,6],[70,0,116,5],[70,7,101,4],[70,13,116,11],[70,17,116,15,"config"],[70,23,116,21],[70,24,116,22,"bounciness"],[70,34,116,15],[70,39,116,37,"undefined"],[70,48,116,15],[70,52,116,50,"config"],[70,58,116,56],[70,59,116,57,"speed"],[70,64,116,50],[70,69,116,67,"undefined"],[70,78,116,11],[70,80,116,78],[71,0,119,6,"invariant"],[71,8,119,6,"invariant"],[71,17,119,15],[71,18,120,8,"config"],[71,24,120,14],[71,25,120,15,"tension"],[71,32,120,8],[71,37,120,27,"undefined"],[71,46,120,8],[71,50,121,10,"config"],[71,56,121,16],[71,57,121,17,"friction"],[71,65,121,10],[71,70,121,30,"undefined"],[71,79,120,8],[71,83,122,10,"config"],[71,89,122,16],[71,90,122,17,"stiffness"],[71,99,122,10],[71,104,122,31,"undefined"],[71,113,120,8],[71,117,123,10,"config"],[71,123,123,16],[71,124,123,17,"damping"],[71,131,123,10],[71,136,123,29,"undefined"],[71,145,120,8],[71,149,124,10,"config"],[71,155,124,16],[71,156,124,17,"mass"],[71,160,124,10],[71,165,124,26,"undefined"],[71,174,119,15],[71,176,125,8],[71,284,119,15],[71,285,119,6],[72,0,127,6],[72,12,127,12,"springConfig"],[72,24,127,24],[72,27,127,27,"SpringConfig"],[72,39,127,39],[72,40,127,40,"fromBouncinessAndSpeed"],[72,62,127,27],[72,63,128,8,"withDefault"],[72,74,128,19],[72,75,128,20,"config"],[72,81,128,26],[72,82,128,27,"bounciness"],[72,92,128,19],[72,94,128,39],[72,95,128,19],[72,96,127,27],[72,98,129,8,"withDefault"],[72,109,129,19],[72,110,129,20,"config"],[72,116,129,26],[72,117,129,27,"speed"],[72,122,129,19],[72,124,129,34],[72,126,129,19],[72,127,127,27],[72,128,127,6],[73,0,131,6],[73,14,131,11,"_stiffness"],[73,24,131,6],[73,27,131,24,"springConfig"],[73,39,131,36],[73,40,131,37,"stiffness"],[73,49,131,6],[74,0,132,6],[74,14,132,11,"_damping"],[74,22,132,6],[74,25,132,22,"springConfig"],[74,37,132,34],[74,38,132,35,"damping"],[74,45,132,6],[75,0,133,6],[75,14,133,11,"_mass"],[75,19,133,6],[75,22,133,19],[75,23,133,6],[76,0,134,5],[76,7,116,11],[76,13,134,11],[77,0,137,6],[77,12,137,12,"springConfig"],[77,25,137,24],[77,28,137,27,"SpringConfig"],[77,40,137,39],[77,41,137,40,"fromOrigamiTensionAndFriction"],[77,70,137,27],[77,71,138,8,"withDefault"],[77,82,138,19],[77,83,138,20,"config"],[77,89,138,26],[77,90,138,27,"tension"],[77,97,138,19],[77,99,138,36],[77,101,138,19],[77,102,137,27],[77,104,139,8,"withDefault"],[77,115,139,19],[77,116,139,20,"config"],[77,122,139,26],[77,123,139,27,"friction"],[77,131,139,19],[77,133,139,37],[77,134,139,19],[77,135,137,27],[77,136,137,6],[79,0,141,6],[79,14,141,11,"_stiffness"],[79,24,141,6],[79,27,141,24,"springConfig"],[79,40,141,36],[79,41,141,37,"stiffness"],[79,50,141,6],[80,0,142,6],[80,14,142,11,"_damping"],[80,22,142,6],[80,25,142,22,"springConfig"],[80,38,142,34],[80,39,142,35,"damping"],[80,46,142,6],[81,0,143,6],[81,14,143,11,"_mass"],[81,19,143,6],[81,22,143,19],[81,23,143,6],[82,0,144,5],[84,0,146,4,"invariant"],[84,6,146,4,"invariant"],[84,15,146,13],[84,16,146,14],[84,22,146,19,"_stiffness"],[84,32,146,14],[84,35,146,32],[84,36,146,13],[84,38,146,35],[84,78,146,13],[84,79,146,4],[85,0,147,4,"invariant"],[85,6,147,4,"invariant"],[85,15,147,13],[85,16,147,14],[85,22,147,19,"_damping"],[85,30,147,14],[85,33,147,30],[85,34,147,13],[85,36,147,33],[85,74,147,13],[85,75,147,4],[86,0,148,4,"invariant"],[86,6,148,4,"invariant"],[86,15,148,13],[86,16,148,14],[86,22,148,19,"_mass"],[86,27,148,14],[86,30,148,27],[86,31,148,13],[86,33,148,30],[86,68,148,13],[86,69,148,4],[87,0,83,51],[88,0,149,3],[92,51,151,31],[93,0,152,4],[93,15,152,11],[94,0,153,6,"type"],[94,10,153,6,"type"],[94,14,153,10],[94,16,153,12],[94,24,152,11],[95,0,154,6,"overshootClamping"],[95,10,154,6,"overshootClamping"],[95,27,154,23],[95,29,154,25],[95,34,154,30,"_overshootClamping"],[95,52,152,11],[96,0,155,6,"restDisplacementThreshold"],[96,10,155,6,"restDisplacementThreshold"],[96,35,155,31],[96,37,155,33],[96,42,155,38,"_restDisplacementThreshold"],[96,68,152,11],[97,0,156,6,"restSpeedThreshold"],[97,10,156,6,"restSpeedThreshold"],[97,28,156,24],[97,30,156,26],[97,35,156,31,"_restSpeedThreshold"],[97,54,152,11],[98,0,157,6,"stiffness"],[98,10,157,6,"stiffness"],[98,19,157,15],[98,21,157,17],[98,26,157,22,"_stiffness"],[98,36,152,11],[99,0,158,6,"damping"],[99,10,158,6,"damping"],[99,17,158,13],[99,19,158,15],[99,24,158,20,"_damping"],[99,32,152,11],[100,0,159,6,"mass"],[100,10,159,6,"mass"],[100,14,159,10],[100,16,159,12],[100,21,159,17,"_mass"],[100,26,152,11],[101,0,160,6,"initialVelocity"],[101,10,160,6,"initialVelocity"],[101,25,160,21],[101,27,160,23,"withDefault"],[101,38,160,34],[101,39,160,35],[101,44,160,40,"_initialVelocity"],[101,60,160,34],[101,62,160,58],[101,67,160,63,"_lastVelocity"],[101,80,160,34],[101,81,152,11],[102,0,161,6,"toValue"],[102,10,161,6,"toValue"],[102,17,161,13],[102,19,161,15],[102,24,161,20,"_toValue"],[102,32,152,11],[103,0,162,6,"iterations"],[103,10,162,6,"iterations"],[103,20,162,16],[103,22,162,18],[103,27,162,23,"__iterations"],[104,0,152,11],[104,9,152,4],[105,0,164,3],[108,28,167,4,"fromValue"],[108,37],[108,39,168,4,"onUpdate"],[108,47],[108,49,169,4,"onEnd"],[108,54],[108,56,170,4,"previousAnimation"],[108,73],[108,75,171,4,"animatedValue"],[108,88],[108,90,172,10],[109,0,172,10],[111,0,173,4],[111,13,173,9,"__active"],[111,21,173,4],[111,24,173,20],[111,28,173,4],[112,0,174,4],[112,13,174,9,"_startPosition"],[112,27,174,4],[112,30,174,26,"fromValue"],[112,39,174,4],[113,0,175,4],[113,13,175,9,"_lastPosition"],[113,26,175,4],[113,29,175,25],[113,34,175,30,"_startPosition"],[113,48,175,4],[114,0,177,4],[114,13,177,9,"_onUpdate"],[114,22,177,4],[114,25,177,21,"onUpdate"],[114,33,177,4],[115,0,178,4],[115,13,178,9,"__onEnd"],[115,20,178,4],[115,23,178,19,"onEnd"],[115,28,178,4],[116,0,179,4],[116,13,179,9,"_lastTime"],[116,22,179,4],[116,25,179,21,"Date"],[116,29,179,25],[116,30,179,26,"now"],[116,33,179,21],[116,35,179,4],[117,0,180,4],[117,13,180,9,"_frameTime"],[117,23,180,4],[117,26,180,22],[117,29,180,4],[119,0,182,4],[119,12,182,8,"previousAnimation"],[119,29,182,25],[119,41,182,37,"SpringAnimation"],[119,56,182,4],[119,58,182,54],[120,0,183,6],[120,14,183,12,"internalState"],[120,27,183,25],[120,30,183,28,"previousAnimation"],[120,47,183,45],[120,48,183,46,"getInternalState"],[120,64,183,28],[120,66,183,6],[121,0,184,6],[121,15,184,11,"_lastPosition"],[121,28,184,6],[121,31,184,27,"internalState"],[121,44,184,40],[121,45,184,41,"lastPosition"],[121,57,184,6],[122,0,185,6],[122,15,185,11,"_lastVelocity"],[122,28,185,6],[122,31,185,27,"internalState"],[122,44,185,40],[122,45,185,41,"lastVelocity"],[122,57,185,6],[123,0,187,6],[123,15,187,11,"_initialVelocity"],[123,31,187,6],[123,34,187,30],[123,39,187,35,"_lastVelocity"],[123,52,187,6],[124,0,188,6],[124,15,188,11,"_lastTime"],[124,24,188,6],[124,27,188,23,"internalState"],[124,40,188,36],[124,41,188,37,"lastTime"],[124,49,188,6],[125,0,189,5],[127,0,191,4],[127,12,191,10,"start"],[127,17,191,15],[127,20,191,18],[127,29,191,10,"start"],[127,34,191,18],[127,37,191,24],[128,0,192,6],[128,14,192,10],[128,20,192,14],[128,21,192,15,"_useNativeDriver"],[128,37,192,6],[128,39,192,33],[129,0,193,8],[129,12,193,8],[129,18,193,12],[129,19,193,13,"__startNativeAnimation"],[129,41,193,8],[129,42,193,36,"animatedValue"],[129,55,193,8],[130,0,194,7],[130,11,192,6],[130,17,194,13],[131,0,195,8],[131,12,195,8],[131,18,195,12],[131,19,195,13,"onUpdate"],[131,27,195,8],[132,0,196,7],[133,0,197,5],[133,9,191,4],[135,0,200,4],[135,12,200,8],[135,17,200,13,"_delay"],[135,23,200,4],[135,25,200,21],[136,0,201,6],[136,15,201,11,"_timeout"],[136,23,201,6],[136,26,201,22,"setTimeout"],[136,36,201,32],[136,37,201,33,"start"],[136,42,201,32],[136,44,201,40],[136,49,201,45,"_delay"],[136,55,201,32],[136,56,201,6],[137,0,202,5],[137,9,200,4],[137,15,202,11],[138,0,203,6,"start"],[138,10,203,6,"start"],[138,15,203,11],[139,0,204,5],[140,0,205,3],[143,41,207,29],[144,0,208,4],[144,15,208,11],[145,0,209,6,"lastPosition"],[145,10,209,6,"lastPosition"],[145,22,209,18],[145,24,209,20],[145,29,209,25,"_lastPosition"],[145,42,208,11],[146,0,210,6,"lastVelocity"],[146,10,210,6,"lastVelocity"],[146,22,210,18],[146,24,210,20],[146,29,210,25,"_lastVelocity"],[146,42,208,11],[147,0,211,6,"lastTime"],[147,10,211,6,"lastTime"],[147,18,211,14],[147,20,211,16],[147,25,211,21,"_lastTime"],[148,0,208,11],[148,9,208,4],[149,0,213,3],[152,33,236,19],[153,0,241,4],[153,12,241,10,"MAX_STEPS"],[153,21,241,19],[153,24,241,22],[153,26,241,4],[154,0,242,4],[154,12,242,8,"now"],[154,15,242,11],[154,18,242,14,"Date"],[154,22,242,18],[154,23,242,19,"now"],[154,26,242,14],[154,28,242,4],[156,0,243,4],[156,12,243,8,"now"],[156,15,243,11],[156,18,243,14],[156,23,243,19,"_lastTime"],[156,32,243,14],[156,35,243,31,"MAX_STEPS"],[156,44,243,4],[156,46,243,42],[157,0,244,6,"now"],[157,10,244,6,"now"],[157,13,244,9],[157,16,244,12],[157,21,244,17,"_lastTime"],[157,30,244,12],[157,33,244,29,"MAX_STEPS"],[157,42,244,6],[158,0,245,5],[160,0,247,4],[160,12,247,10,"deltaTime"],[160,21,247,19],[160,24,247,22],[160,25,247,23,"now"],[160,28,247,26],[160,31,247,29],[160,36,247,34,"_lastTime"],[160,45,247,22],[160,49,247,47],[160,53,247,4],[161,0,248,4],[161,13,248,9,"_frameTime"],[161,23,248,4],[161,27,248,23,"deltaTime"],[161,36,248,4],[162,0,250,4],[162,12,250,10,"c"],[162,13,250,19],[162,16,250,22],[162,21,250,27,"_damping"],[162,29,250,4],[163,0,251,4],[163,12,251,10,"m"],[163,13,251,19],[163,16,251,22],[163,21,251,27,"_mass"],[163,26,251,4],[164,0,252,4],[164,12,252,10,"k"],[164,13,252,19],[164,16,252,22],[164,21,252,27,"_stiffness"],[164,31,252,4],[165,0,253,4],[165,12,253,10,"v0"],[165,14,253,20],[165,17,253,23],[165,18,253,24],[165,23,253,29,"_initialVelocity"],[165,39,253,4],[166,0,255,4],[166,12,255,10,"zeta"],[166,16,255,14],[166,19,255,17,"c"],[166,20,255,18],[166,24,255,22],[166,28,255,26,"Math"],[166,32,255,30],[166,33,255,31,"sqrt"],[166,37,255,26],[166,38,255,36,"k"],[166,39,255,37],[166,42,255,40,"m"],[166,43,255,26],[166,44,255,18],[166,45,255,4],[167,0,256,4],[167,12,256,10,"omega0"],[167,18,256,16],[167,21,256,19,"Math"],[167,25,256,23],[167,26,256,24,"sqrt"],[167,30,256,19],[167,31,256,29,"k"],[167,32,256,30],[167,35,256,33,"m"],[167,36,256,19],[167,37,256,4],[168,0,257,4],[168,12,257,10,"omega1"],[168,18,257,16],[168,21,257,19,"omega0"],[168,27,257,25],[168,30,257,28,"Math"],[168,34,257,32],[168,35,257,33,"sqrt"],[168,39,257,28],[168,40,257,38],[168,46,257,44,"zeta"],[168,50,257,48],[168,53,257,51,"zeta"],[168,57,257,28],[168,58,257,4],[169,0,258,4],[169,12,258,10,"x0"],[169,14,258,12],[169,17,258,15],[169,22,258,20,"_toValue"],[169,30,258,15],[169,33,258,31],[169,38,258,36,"_startPosition"],[169,52,258,4],[170,0,260,4],[170,12,260,8,"position"],[170,20,260,16],[170,23,260,19],[170,26,260,4],[171,0,261,4],[171,12,261,8,"velocity"],[171,20,261,16],[171,23,261,19],[171,26,261,4],[172,0,262,4],[172,12,262,10,"t"],[172,13,262,11],[172,16,262,14],[172,21,262,19,"_frameTime"],[172,31,262,4],[174,0,263,4],[174,12,263,8,"zeta"],[174,16,263,12],[174,19,263,15],[174,20,263,4],[174,22,263,18],[175,0,265,6],[175,14,265,12,"envelope"],[175,22,265,20],[175,25,265,23,"Math"],[175,29,265,27],[175,30,265,28,"exp"],[175,33,265,23],[175,34,265,32],[175,35,265,33,"zeta"],[175,39,265,32],[175,42,265,40,"omega0"],[175,48,265,32],[175,51,265,49,"t"],[175,52,265,23],[175,53,265,6],[176,0,266,6,"position"],[176,10,266,6,"position"],[176,18,266,14],[176,21,267,8],[176,26,267,13,"_toValue"],[176,34,267,8],[176,37,268,8,"envelope"],[176,45,268,16],[176,49,269,12],[176,50,269,13,"v0"],[176,52,269,15],[176,55,269,18,"zeta"],[176,59,269,22],[176,62,269,25,"omega0"],[176,68,269,18],[176,71,269,34,"x0"],[176,73,269,12],[176,77,269,40,"omega1"],[176,83,269,11],[176,86,269,50,"Math"],[176,90,269,54],[176,91,269,55,"sin"],[176,94,269,50],[176,95,269,59,"omega1"],[176,101,269,65],[176,104,269,68,"t"],[176,105,269,50],[176,106,269,11],[176,109,270,12,"x0"],[176,111,270,14],[176,114,270,17,"Math"],[176,118,270,21],[176,119,270,22,"cos"],[176,122,270,17],[176,123,270,26,"omega1"],[176,129,270,32],[176,132,270,35,"t"],[176,133,270,17],[176,134,268,16],[176,135,266,6],[177,0,273,6,"velocity"],[177,10,273,6,"velocity"],[177,18,273,14],[177,21,274,8,"zeta"],[177,25,274,12],[177,28,275,10,"omega0"],[177,34,274,8],[177,37,276,10,"envelope"],[177,45,274,8],[177,49,277,12,"Math"],[177,53,277,16],[177,54,277,17,"sin"],[177,57,277,12],[177,58,277,21,"omega1"],[177,64,277,27],[177,67,277,30,"t"],[177,68,277,12],[177,73,277,36,"v0"],[177,75,277,38],[177,78,277,41,"zeta"],[177,82,277,45],[177,85,277,48,"omega0"],[177,91,277,41],[177,94,277,57,"x0"],[177,96,277,12],[177,97,277,11],[177,100,277,64,"omega1"],[177,106,277,11],[177,109,278,12,"x0"],[177,111,278,14],[177,114,278,17,"Math"],[177,118,278,21],[177,119,278,22,"cos"],[177,122,278,17],[177,123,278,26,"omega1"],[177,129,278,32],[177,132,278,35,"t"],[177,133,278,17],[177,134,274,8],[177,138,279,8,"envelope"],[177,146,279,16],[177,150,280,11,"Math"],[177,154,280,15],[177,155,280,16,"cos"],[177,158,280,11],[177,159,280,20,"omega1"],[177,165,280,26],[177,168,280,29,"t"],[177,169,280,11],[177,174,280,35,"v0"],[177,176,280,37],[177,179,280,40,"zeta"],[177,183,280,44],[177,186,280,47,"omega0"],[177,192,280,40],[177,195,280,56,"x0"],[177,197,280,11],[177,201,281,12,"omega1"],[177,207,281,18],[177,210,281,21,"x0"],[177,212,281,12],[177,215,281,26,"Math"],[177,219,281,30],[177,220,281,31,"sin"],[177,223,281,26],[177,224,281,35,"omega1"],[177,230,281,41],[177,233,281,44,"t"],[177,234,281,26],[177,235,279,16],[177,236,273,6],[178,0,282,5],[178,9,263,4],[178,15,282,11],[179,0,284,6],[179,14,284,12,"envelope"],[179,23,284,20],[179,26,284,23,"Math"],[179,30,284,27],[179,31,284,28,"exp"],[179,34,284,23],[179,35,284,32],[179,36,284,33,"omega0"],[179,42,284,32],[179,45,284,42,"t"],[179,46,284,23],[179,47,284,6],[181,0,285,6,"position"],[181,10,285,6,"position"],[181,18,285,14],[181,21,285,17],[181,26,285,22,"_toValue"],[181,34,285,17],[181,37,285,33,"envelope"],[181,46,285,41],[181,50,285,45,"x0"],[181,52,285,47],[181,55,285,50],[181,56,285,51,"v0"],[181,58,285,53],[181,61,285,56,"omega0"],[181,67,285,62],[181,70,285,65,"x0"],[181,72,285,50],[181,76,285,71,"t"],[181,77,285,41],[181,78,285,6],[182,0,286,6,"velocity"],[182,10,286,6,"velocity"],[182,18,286,14],[182,21,287,8,"envelope"],[182,30,287,16],[182,34,287,20,"v0"],[182,36,287,22],[182,40,287,26,"t"],[182,41,287,27],[182,44,287,30,"omega0"],[182,50,287,26],[182,53,287,39],[182,54,287,22],[182,55,287,20],[182,58,287,44,"t"],[182,59,287,45],[182,62,287,48,"x0"],[182,64,287,44],[182,68,287,54,"omega0"],[182,74,287,60],[182,77,287,63,"omega0"],[182,83,287,44],[182,84,287,16],[182,85,286,6],[183,0,288,5],[185,0,290,4],[185,13,290,9,"_lastTime"],[185,22,290,4],[185,25,290,21,"now"],[185,28,290,4],[186,0,291,4],[186,13,291,9,"_lastPosition"],[186,26,291,4],[186,29,291,25,"position"],[186,37,291,4],[187,0,292,4],[187,13,292,9,"_lastVelocity"],[187,26,292,4],[187,29,292,25,"velocity"],[187,37,292,4],[189,0,294,4],[189,13,294,9,"_onUpdate"],[189,22,294,4],[189,23,294,19,"position"],[189,31,294,4],[191,0,295,4],[191,12,295,8],[191,13,295,9],[191,18,295,14,"__active"],[191,26,295,4],[191,28,295,24],[192,0,297,6],[193,0,298,5],[195,0,301,4],[195,12,301,8,"isOvershooting"],[195,26,301,22],[195,29,301,25],[195,34,301,4],[197,0,302,4],[197,12,302,8],[197,17,302,13,"_overshootClamping"],[197,35,302,8],[197,39,302,35],[197,44,302,40,"_stiffness"],[197,54,302,35],[197,59,302,55],[197,60,302,4],[197,62,302,58],[198,0,303,6],[198,14,303,10],[198,19,303,15,"_startPosition"],[198,33,303,10],[198,36,303,32],[198,41,303,37,"_toValue"],[198,49,303,6],[198,51,303,47],[199,0,304,8,"isOvershooting"],[199,12,304,8,"isOvershooting"],[199,26,304,22],[199,29,304,25,"position"],[199,37,304,33],[199,40,304,36],[199,45,304,41,"_toValue"],[199,53,304,8],[200,0,305,7],[200,11,303,6],[200,17,305,13],[201,0,306,8,"isOvershooting"],[201,12,306,8,"isOvershooting"],[201,26,306,22],[201,29,306,25,"position"],[201,37,306,33],[201,40,306,36],[201,45,306,41,"_toValue"],[201,53,306,8],[202,0,307,7],[203,0,308,5],[205,0,309,4],[205,12,309,10,"isVelocity"],[205,22,309,20],[205,25,309,23,"Math"],[205,29,309,27],[205,30,309,28,"abs"],[205,33,309,23],[205,34,309,32,"velocity"],[205,42,309,23],[205,47,309,45],[205,52,309,50,"_restSpeedThreshold"],[205,71,309,4],[207,0,310,4],[207,12,310,8,"isDisplacement"],[207,26,310,22],[207,29,310,25],[207,33,310,4],[209,0,311,4],[209,12,311,8],[209,17,311,13,"_stiffness"],[209,27,311,8],[209,32,311,28],[209,33,311,4],[209,35,311,31],[210,0,312,6,"isDisplacement"],[210,10,312,6,"isDisplacement"],[210,24,312,20],[210,27,313,8,"Math"],[210,31,313,12],[210,32,313,13,"abs"],[210,35,313,8],[210,36,313,17],[210,41,313,22,"_toValue"],[210,49,313,17],[210,52,313,33,"position"],[210,60,313,8],[210,65,313,46],[210,70,313,51,"_restDisplacementThreshold"],[210,96,312,6],[211,0,314,5],[213,0,316,4],[213,12,316,8,"isOvershooting"],[213,26,316,22],[213,30,316,27,"isVelocity"],[213,40,316,37],[213,44,316,41,"isDisplacement"],[213,58,316,4],[213,60,316,58],[214,0,317,6],[214,14,317,10],[214,19,317,15,"_stiffness"],[214,29,317,10],[214,34,317,30],[214,35,317,6],[214,37,317,33],[215,0,319,8],[215,17,319,13,"_lastPosition"],[215,30,319,8],[215,33,319,29],[215,38,319,34,"_toValue"],[215,46,319,8],[216,0,320,8],[216,17,320,13,"_lastVelocity"],[216,30,320,8],[216,33,320,29],[216,34,320,8],[218,0,321,8],[218,17,321,13,"_onUpdate"],[218,26,321,8],[218,27,321,23],[218,32,321,28,"_toValue"],[218,40,321,8],[219,0,322,7],[221,0,324,6],[221,15,324,11,"__debouncedOnEnd"],[221,31,324,6],[221,32,324,28],[222,0,324,29,"finished"],[222,12,324,29,"finished"],[222,20,324,37],[222,22,324,39],[223,0,324,28],[223,11,324,6],[225,0,325,6],[226,0,326,5],[228,0,327,4],[228,13,327,9,"_animationFrame"],[228,28,327,4],[228,31,327,27,"requestAnimationFrame"],[228,52,327,48],[228,53,327,49],[228,58,327,54,"onUpdate"],[228,66,327,49],[228,67,327,63,"bind"],[228,71,327,49],[228,72,327,68],[228,76,327,49],[228,77,327,48],[228,78,327,4],[229,0,328,3],[232,29,330,15],[233,0,331,4],[235,0,332,4],[235,13,332,9,"__active"],[235,21,332,4],[235,24,332,20],[235,29,332,4],[236,0,333,4,"clearTimeout"],[236,8,333,4,"clearTimeout"],[236,20,333,16],[236,21,333,17],[236,26,333,22,"_timeout"],[236,34,333,16],[236,35,333,4],[237,0,334,4,"global"],[237,8,334,4,"global"],[237,14,334,10],[237,15,334,11,"cancelAnimationFrame"],[237,35,334,4],[237,36,334,32],[237,41,334,37,"_animationFrame"],[237,56,334,4],[239,0,335,4],[239,13,335,9,"__debouncedOnEnd"],[239,29,335,4],[239,30,335,26],[240,0,335,27,"finished"],[240,10,335,27,"finished"],[240,18,335,35],[240,20,335,37],[241,0,335,26],[241,9,335,4],[242,0,336,3],[246,4,61,30,"Animation"],[246,13],[248,0,339,0,"module"],[248,2,339,0,"module"],[248,8,339,6],[248,9,339,7,"exports"],[248,16,339,0],[248,19,339,17,"SpringAnimation"],[248,34,339,0]]},"type":"js/module"}]}